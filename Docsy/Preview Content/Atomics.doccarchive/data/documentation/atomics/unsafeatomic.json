{"topicSections":[{"anchor":"Storage-Representation","identifiers":["doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomic\/Storage"],"title":"Storage Representation"},{"title":"Initializers","identifiers":["doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomic\/init(at:)"],"anchor":"Initializers"},{"anchor":"Shorthand-Methods-for-Dynamically-Allocating-Storage","identifiers":["doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomic\/create(_:)","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomic\/destroy()"],"title":"Shorthand Methods for Dynamically Allocating Storage"},{"anchor":"Atomic-Operations","title":"Atomic Operations","identifiers":["doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomic\/load(ordering:)","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomic\/store(_:ordering:)","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomic\/exchange(_:ordering:)","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomic\/compareExchange(expected:desired:ordering:)","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomic\/compareExchange(expected:desired:successOrdering:failureOrdering:)","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomic\/weakCompareExchange(expected:desired:ordering:)","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomic\/weakCompareExchange(expected:desired:successOrdering:failureOrdering:)"]},{"anchor":"Atomic-Integer-Operations","title":"Atomic Integer Operations","identifiers":["doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomic\/wrappingIncrement(by:ordering:)","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomic\/wrappingDecrement(by:ordering:)","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomic\/loadThenWrappingIncrement(by:ordering:)","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomic\/loadThenWrappingDecrement(by:ordering:)","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomic\/loadThenBitwiseOr(with:ordering:)","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomic\/loadThenBitwiseAnd(with:ordering:)","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomic\/loadThenBitwiseXor(with:ordering:)","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomic\/wrappingIncrementThenLoad(by:ordering:)","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomic\/wrappingDecrementThenLoad(by:ordering:)","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomic\/bitwiseOrThenLoad(with:ordering:)","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomic\/bitwiseAndThenLoad(with:ordering:)","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomic\/bitwiseXorThenLoad(with:ordering:)"]},{"title":"Atomic Boolean Operations","identifiers":["doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomic\/logicalOrThenLoad(with:ordering:)","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomic\/logicalAndThenLoad(with:ordering:)","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomic\/logicalXorThenLoad(with:ordering:)","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomic\/loadThenLogicalOr(with:ordering:)","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomic\/loadThenLogicalAnd(with:ordering:)","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomic\/loadThenLogicalXor(with:ordering:)"],"anchor":"Atomic-Boolean-Operations"}],"relationshipsSections":[{"identifiers":["doc:\/\/swift-atomics.Atomics\/s15BitwiseCopyableP","doc:\/\/swift-atomics.Atomics\/s8SendableP"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"hierarchy":{"paths":[["doc:\/\/swift-atomics.Atomics\/documentation\/Atomics"]]},"seeAlsoSections":[{"title":"Atomic Container Types","anchor":"Atomic-Container-Types","identifiers":["doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/ManagedAtomic","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/ManagedAtomicLazyReference","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomicLazyReference"],"generated":true}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atomics\/unsafeatomic"]}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"attribute","text":"@frozen"},{"text":" ","kind":"text"},{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UnsafeAtomic"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":"> "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"text":"AtomicValue","kind":"typeIdentifier","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicValue","preciseIdentifier":"s:7Atomics11AtomicValueP"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":" == "},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicValue\/AtomicRepresentation","preciseIdentifier":"s:7Atomics11AtomicValueP0B14RepresentationQa","text":"AtomicRepresentation"},{"text":".","kind":"text"},{"text":"Value","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicStorage\/Value","preciseIdentifier":"s:7Atomics13AtomicStorageP5ValueQa","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"}],"identifier":{"url":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomic","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"kind":"symbol","abstract":[{"text":"An unsafe reference type holding an atomic value, requiring manual memory","type":"text"},{"text":" ","type":"text"},{"text":"management of the underlying storage representation.","type":"text"}],"metadata":{"modules":[{"name":"Atomics"}],"symbolKind":"struct","roleHeading":"Structure","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UnsafeAtomic","kind":"identifier"}],"role":"symbol","title":"UnsafeAtomic","externalID":"s:7Atomics12UnsafeAtomicV","navigatorTitle":[{"text":"UnsafeAtomic","kind":"identifier"}]},"references":{"doc://swift-atomics.Atomics/documentation/Atomics/UnsafeAtomic/loadThenBitwiseXor(with:ordering:)":{"title":"loadThenBitwiseXor(with:ordering:)","kind":"symbol","abstract":[{"text":"Perform an atomic bitwise XOR operation and return the original value, applying","type":"text"},{"text":" ","type":"text"},{"text":"the specified memory ordering.","type":"text"}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"loadThenBitwiseXor"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"with"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics12UnsafeAtomicVA2A0C7IntegerRzrlE5Valuexmfp"},{"text":", ","kind":"text"},{"text":"ordering","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","kind":"typeIdentifier","text":"AtomicUpdateOrdering"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics12UnsafeAtomicVA2A0C7IntegerRzrlE5Valuexmfp","text":"Value"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"AtomicInteger"},{"text":".","type":"text"}]},"url":"\/documentation\/atomics\/unsafeatomic\/loadthenbitwisexor(with:ordering:)","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomic\/loadThenBitwiseXor(with:ordering:)"},"doc://swift-atomics.Atomics/documentation/Atomics/UnsafeAtomic/loadThenLogicalOr(with:ordering:)":{"url":"\/documentation\/atomics\/unsafeatomic\/loadthenlogicalor(with:ordering:)","abstract":[{"text":"Perform an atomic logical OR operation and return the original value, applying","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the specified memory ordering."}],"conformance":{"constraints":[{"code":"Value","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Bool"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomic\/loadThenLogicalOr(with:ordering:)","type":"topic","title":"loadThenLogicalOr(with:ordering:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"loadThenLogicalOr","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"with"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Atomics12UnsafeAtomicVAASbRszrlE5Valuexmfp","kind":"typeIdentifier","text":"Value"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"ordering"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","kind":"typeIdentifier","text":"AtomicUpdateOrdering"},{"kind":"text","text":") -> "},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics12UnsafeAtomicVAASbRszrlE5Valuexmfp"}],"role":"symbol"},"doc://swift-atomics.Atomics/documentation/Atomics/UnsafeAtomic/loadThenBitwiseOr(with:ordering:)":{"abstract":[{"type":"text","text":"Perform an atomic bitwise OR operation and return the original value, applying"},{"type":"text","text":" "},{"type":"text","text":"the specified memory ordering."}],"type":"topic","title":"loadThenBitwiseOr(with:ordering:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"loadThenBitwiseOr"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"with"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Atomics12UnsafeAtomicVA2A0C7IntegerRzrlE5Valuexmfp","kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"text":"ordering","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"AtomicUpdateOrdering","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Atomics12UnsafeAtomicVA2A0C7IntegerRzrlE5Valuexmfp","kind":"typeIdentifier","text":"Value"}],"conformance":{"constraints":[{"code":"Value","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"AtomicInteger"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"role":"symbol","url":"\/documentation\/atomics\/unsafeatomic\/loadthenbitwiseor(with:ordering:)","kind":"symbol","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomic\/loadThenBitwiseOr(with:ordering:)"},"doc://swift-atomics.Atomics/documentation/Atomics/UnsafeAtomic/loadThenLogicalXor(with:ordering:)":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"loadThenLogicalXor","kind":"identifier"},{"kind":"text","text":"("},{"text":"with","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics12UnsafeAtomicVAASbRszrlE5Valuexmfp"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"ordering"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics12UnsafeAtomicVAASbRszrlE5Valuexmfp"}],"type":"topic","abstract":[{"text":"Perform an atomic logical XOR operation and return the original value, applying","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the specified memory ordering."}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Value","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Bool","type":"codeVoice"},{"text":".","type":"text"}]},"url":"\/documentation\/atomics\/unsafeatomic\/loadthenlogicalxor(with:ordering:)","kind":"symbol","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomic\/loadThenLogicalXor(with:ordering:)","role":"symbol","title":"loadThenLogicalXor(with:ordering:)"},"doc://swift-atomics.Atomics/documentation/Atomics/UnsafeAtomic/logicalAndThenLoad(with:ordering:)":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"logicalAndThenLoad"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Value","preciseIdentifier":"s:7Atomics12UnsafeAtomicVAASbRszrlE5Valuexmfp","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"ordering"},{"kind":"text","text":": "},{"text":"AtomicUpdateOrdering","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"kind":"text","text":") -> "},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics12UnsafeAtomicVAASbRszrlE5Valuexmfp"}],"type":"topic","abstract":[{"text":"Perform an atomic logical AND operation and return the original value, applying","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the specified memory ordering."}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Value","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Bool","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"url":"\/documentation\/atomics\/unsafeatomic\/logicalandthenload(with:ordering:)","kind":"symbol","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomic\/logicalAndThenLoad(with:ordering:)","role":"symbol","title":"logicalAndThenLoad(with:ordering:)"},"doc://swift-atomics.Atomics/documentation/Atomics/UnsafeAtomic":{"url":"\/documentation\/atomics\/unsafeatomic","title":"UnsafeAtomic","navigatorTitle":[{"kind":"identifier","text":"UnsafeAtomic"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UnsafeAtomic"}],"abstract":[{"text":"An unsafe reference type holding an atomic value, requiring manual memory","type":"text"},{"type":"text","text":" "},{"text":"management of the underlying storage representation.","type":"text"}],"kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomic"},"doc://swift-atomics.Atomics/documentation/Atomics/UnsafeAtomic/store(_:ordering:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"store"},{"kind":"text","text":"("},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics12UnsafeAtomicV5Valuexmfp"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"ordering"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics19AtomicStoreOrderingV","text":"AtomicStoreOrdering"},{"kind":"text","text":")"}],"kind":"symbol","url":"\/documentation\/atomics\/unsafeatomic\/store(_:ordering:)","title":"store(_:ordering:)","role":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"AtomicValue"},{"text":" and ","type":"text"},{"code":"Value","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Value.AtomicRepresentation.Value"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"abstract":[{"type":"text","text":"Atomically sets the current value to "},{"code":"desired","type":"codeVoice"},{"text":", applying the specified","type":"text"},{"type":"text","text":" "},{"type":"text","text":"memory ordering."}],"type":"topic","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomic\/store(_:ordering:)"},"doc://swift-atomics.Atomics/documentation/Atomics/UnsafeAtomic/wrappingDecrement(by:ordering:)":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"wrappingDecrement","kind":"identifier"},{"kind":"text","text":"("},{"text":"by","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics12UnsafeAtomicVA2A0C7IntegerRzrlE5Valuexmfp","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"ordering"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering"},{"text":")","kind":"text"}],"url":"\/documentation\/atomics\/unsafeatomic\/wrappingdecrement(by:ordering:)","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomic\/wrappingDecrement(by:ordering:)","abstract":[{"type":"text","text":"Perform an atomic wrapping decrement operation applying the"},{"text":" ","type":"text"},{"type":"text","text":"specified memory ordering."}],"kind":"symbol","type":"topic","title":"wrappingDecrement(by:ordering:)","conformance":{"constraints":[{"type":"codeVoice","code":"Value"},{"text":" conforms to ","type":"text"},{"code":"AtomicInteger","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]}},"doc://swift-atomics.Atomics/documentation/Atomics/UnsafeAtomic/load(ordering:)":{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomic\/load(ordering:)","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"code":"AtomicValue","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Value"},{"text":" is ","type":"text"},{"code":"Value.AtomicRepresentation.Value","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"abstract":[{"text":"Atomically loads and returns the current value, applying the specified","type":"text"},{"type":"text","text":" "},{"text":"memory ordering.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"load","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"ordering"},{"text":": ","kind":"text"},{"text":"AtomicLoadOrdering","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics18AtomicLoadOrderingV"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Atomics12UnsafeAtomicV5Valuexmfp","kind":"typeIdentifier","text":"Value"}],"title":"load(ordering:)","url":"\/documentation\/atomics\/unsafeatomic\/load(ordering:)","type":"topic","role":"symbol","kind":"symbol"},"doc://swift-atomics.Atomics/documentation/Atomics/UnsafeAtomic/weakCompareExchange(expected:desired:successOrdering:failureOrdering:)":{"abstract":[{"text":"Perform an atomic weak compare and exchange operation on the current","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"value, applying the specified success\/failure memory orderings. This"},{"type":"text","text":" "},{"text":"compare-exchange variant is allowed to spuriously fail; it is designed to","type":"text"},{"type":"text","text":" "},{"text":"be called in a loop until it indicates a successful exchange has happened.","type":"text"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Value"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"AtomicValue"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Value"},{"type":"text","text":" is "},{"code":"Value.AtomicRepresentation.Value","type":"codeVoice"},{"type":"text","text":"."}]},"role":"symbol","url":"\/documentation\/atomics\/unsafeatomic\/weakcompareexchange(expected:desired:successordering:failureordering:)","type":"topic","title":"weakCompareExchange(expected:desired:successOrdering:failureOrdering:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"weakCompareExchange","kind":"identifier"},{"text":"(","kind":"text"},{"text":"expected","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Atomics12UnsafeAtomicV5Valuexmfp","text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"desired","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics12UnsafeAtomicV5Valuexmfp"},{"kind":"text","text":", "},{"text":"successOrdering","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"failureOrdering","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"AtomicLoadOrdering","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics18AtomicLoadOrderingV"},{"kind":"text","text":") -> (exchanged"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":", original","kind":"text"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Atomics12UnsafeAtomicV5Valuexmfp","text":"Value","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomic\/weakCompareExchange(expected:desired:successOrdering:failureOrdering:)"},"doc://swift-atomics.Atomics/documentation/Atomics/UnsafeAtomic/init(at:)":{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomic\/init(at:)","type":"topic","url":"\/documentation\/atomics\/unsafeatomic\/init(at:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"at","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sp","kind":"typeIdentifier","text":"UnsafeMutablePointer"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:7Atomics12UnsafeAtomicV7Storagea","kind":"typeIdentifier","text":"Storage"},{"text":">)","kind":"text"}],"abstract":[{"type":"text","text":"Initialize an unsafe atomic value that uses the supplied memory location"},{"type":"text","text":" "},{"text":"for storage. The storage location must already be initialized to","type":"text"},{"type":"text","text":" "},{"text":"represent a valid atomic value.","type":"text"}],"kind":"symbol","role":"symbol","title":"init(at:)"},"doc://swift-atomics.Atomics/documentation/Atomics/UnsafeAtomic/wrappingIncrement(by:ordering:)":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"wrappingIncrement","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"by"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics12UnsafeAtomicVA2A0C7IntegerRzrlE5Valuexmfp","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"ordering"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"text":")","kind":"text"}],"url":"\/documentation\/atomics\/unsafeatomic\/wrappingincrement(by:ordering:)","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomic\/wrappingIncrement(by:ordering:)","abstract":[{"type":"text","text":"Perform an atomic wrapping increment operation applying the"},{"text":" ","type":"text"},{"text":"specified memory ordering.","type":"text"}],"kind":"symbol","type":"topic","title":"wrappingIncrement(by:ordering:)","conformance":{"constraints":[{"code":"Value","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"AtomicInteger"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]}},"doc://swift-atomics.Atomics/documentation/Atomics/UnsafeAtomic/bitwiseOrThenLoad(with:ordering:)":{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomic\/bitwiseOrThenLoad(with:ordering:)","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Perform an atomic bitwise OR operation and return the new value, applying"},{"type":"text","text":" "},{"type":"text","text":"the specified memory ordering."}],"title":"bitwiseOrThenLoad(with:ordering:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"bitwiseOrThenLoad","kind":"identifier"},{"kind":"text","text":"("},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:7Atomics12UnsafeAtomicVA2A0C7IntegerRzrlE5Valuexmfp"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"ordering"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics12UnsafeAtomicVA2A0C7IntegerRzrlE5Valuexmfp","text":"Value"}],"url":"\/documentation\/atomics\/unsafeatomic\/bitwiseorthenload(with:ordering:)","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"AtomicInteger","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]}},"doc://swift-atomics.Atomics/documentation/Atomics/UnsafeAtomic/weakCompareExchange(expected:desired:ordering:)":{"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Perform an atomic weak compare and exchange operation on the current"},{"type":"text","text":" "},{"type":"text","text":"value, applying the memory ordering. This compare-exchange variant is"},{"text":" ","type":"text"},{"type":"text","text":"allowed to spuriously fail; it is designed to be called in a loop until"},{"text":" ","type":"text"},{"type":"text","text":"it indicates a successful exchange has happened."}],"role":"symbol","title":"weakCompareExchange(expected:desired:ordering:)","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomic\/weakCompareExchange(expected:desired:ordering:)","url":"\/documentation\/atomics\/unsafeatomic\/weakcompareexchange(expected:desired:ordering:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"weakCompareExchange","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"expected"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics12UnsafeAtomicV5Valuexmfp","text":"Value"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"desired"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Atomics12UnsafeAtomicV5Valuexmfp","text":"Value","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"ordering","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","kind":"typeIdentifier","text":"AtomicUpdateOrdering"},{"kind":"text","text":") -> (exchanged"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":", original","kind":"text"},{"text":": ","kind":"text"},{"text":"Value","preciseIdentifier":"s:7Atomics12UnsafeAtomicV5Valuexmfp","kind":"typeIdentifier"},{"kind":"text","text":")"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Value","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"AtomicValue"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Value"},{"text":" is ","type":"text"},{"code":"Value.AtomicRepresentation.Value","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]}},"doc://swift-atomics.Atomics/documentation/Atomics/ManagedAtomic":{"abstract":[{"type":"text","text":"A reference type holding an atomic value, with automatic memory management."}],"title":"ManagedAtomic","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/ManagedAtomic","url":"\/documentation\/atomics\/managedatomic","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"ManagedAtomic","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"ManagedAtomic","kind":"identifier"}],"role":"symbol","type":"topic"},"doc://swift-atomics.Atomics/documentation/Atomics/UnsafeAtomic/loadThenWrappingIncrement(by:ordering:)":{"title":"loadThenWrappingIncrement(by:ordering:)","kind":"symbol","abstract":[{"text":"Perform an atomic wrapping add operation and return the original value, applying","type":"text"},{"text":" ","type":"text"},{"text":"the specified memory ordering.","type":"text"}],"type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"loadThenWrappingIncrement"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"by"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics12UnsafeAtomicVA2A0C7IntegerRzrlE5Valuexmfp"},{"text":", ","kind":"text"},{"text":"ordering","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","kind":"typeIdentifier","text":"AtomicUpdateOrdering"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics12UnsafeAtomicVA2A0C7IntegerRzrlE5Valuexmfp","text":"Value"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"AtomicInteger"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"url":"\/documentation\/atomics\/unsafeatomic\/loadthenwrappingincrement(by:ordering:)","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomic\/loadThenWrappingIncrement(by:ordering:)"},"doc://swift-atomics.Atomics/documentation/Atomics/AtomicStorage/Value":{"type":"topic","abstract":[{"text":"The type whose values this storage representation is representing.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"associatedtype"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Value"}],"required":true,"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicStorage\/Value","kind":"symbol","url":"\/documentation\/atomics\/atomicstorage\/value","title":"Value"},"doc://swift-atomics.Atomics/documentation/Atomics/UnsafeAtomic/create(_:)":{"kind":"symbol","title":"create(_:)","url":"\/documentation\/atomics\/unsafeatomic\/create(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"create","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:7Atomics12UnsafeAtomicV5Valuexmfp","text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"UnsafeAtomic","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics12UnsafeAtomicV"},{"kind":"text","text":"<"},{"text":"Value","kind":"typeIdentifier"},{"text":">","kind":"text"}],"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomic\/create(_:)","abstract":[{"type":"text","text":"Create a new "},{"type":"codeVoice","code":"UnsafeAtomic"},{"type":"text","text":" value with the supplied initial value by"},{"text":" ","type":"text"},{"text":"dynamically allocating storage for it.","type":"text"}],"role":"symbol","type":"topic"},"doc://swift-atomics.Atomics/documentation/Atomics/UnsafeAtomic/compareExchange(expected:desired:successOrdering:failureOrdering:)":{"type":"topic","title":"compareExchange(expected:desired:successOrdering:failureOrdering:)","url":"\/documentation\/atomics\/unsafeatomic\/compareexchange(expected:desired:successordering:failureordering:)","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomic\/compareExchange(expected:desired:successOrdering:failureOrdering:)","abstract":[{"type":"text","text":"Perform an atomic compare and exchange operation on the current value,"},{"text":" ","type":"text"},{"text":"applying the specified success\/failure memory orderings.","type":"text"}],"kind":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Value"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"AtomicValue"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Value"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Value.AtomicRepresentation.Value"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"compareExchange","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"expected"},{"kind":"text","text":": "},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics12UnsafeAtomicV5Valuexmfp"},{"text":", ","kind":"text"},{"text":"desired","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics12UnsafeAtomicV5Valuexmfp"},{"kind":"text","text":", "},{"kind":"externalParam","text":"successOrdering"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"failureOrdering"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics18AtomicLoadOrderingV","text":"AtomicLoadOrdering"},{"text":") -> (exchanged","kind":"text"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"kind":"text","text":", original"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics12UnsafeAtomicV5Valuexmfp"},{"text":")","kind":"text"}]},"doc://swift-atomics.Atomics/documentation/Atomics/UnsafeAtomic/loadThenBitwiseAnd(with:ordering:)":{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomic\/loadThenBitwiseAnd(with:ordering:)","role":"symbol","kind":"symbol","abstract":[{"text":"Perform an atomic bitwise AND operation and return the original value, applying","type":"text"},{"type":"text","text":" "},{"text":"the specified memory ordering.","type":"text"}],"title":"loadThenBitwiseAnd(with:ordering:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"loadThenBitwiseAnd"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"with"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics12UnsafeAtomicVA2A0C7IntegerRzrlE5Valuexmfp","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"ordering"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering"},{"text":") -> ","kind":"text"},{"text":"Value","preciseIdentifier":"s:7Atomics12UnsafeAtomicVA2A0C7IntegerRzrlE5Valuexmfp","kind":"typeIdentifier"}],"url":"\/documentation\/atomics\/unsafeatomic\/loadthenbitwiseand(with:ordering:)","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"AtomicInteger","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]}},"doc://swift-atomics.Atomics/documentation/Atomics/UnsafeAtomic/exchange(_:ordering:)":{"title":"exchange(_:ordering:)","role":"symbol","kind":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Value"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"AtomicValue"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Value"},{"text":" is ","type":"text"},{"code":"Value.AtomicRepresentation.Value","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"abstract":[{"type":"text","text":"Atomically sets the current value to "},{"code":"desired","type":"codeVoice"},{"type":"text","text":" and returns the original"},{"text":" ","type":"text"},{"text":"value, applying the specified memory ordering.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"exchange"},{"kind":"text","text":"("},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics12UnsafeAtomicV5Valuexmfp"},{"text":", ","kind":"text"},{"text":"ordering","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics12UnsafeAtomicV5Valuexmfp"}],"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomic\/exchange(_:ordering:)","type":"topic","url":"\/documentation\/atomics\/unsafeatomic\/exchange(_:ordering:)"},"doc://swift-atomics.Atomics/documentation/Atomics/UnsafeAtomic/loadThenLogicalAnd(with:ordering:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"loadThenLogicalAnd","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics12UnsafeAtomicVAASbRszrlE5Valuexmfp","text":"Value"},{"text":", ","kind":"text"},{"text":"ordering","kind":"externalParam"},{"kind":"text","text":": "},{"text":"AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics12UnsafeAtomicVAASbRszrlE5Valuexmfp"}],"type":"topic","abstract":[{"text":"Perform an atomic logical AND operation and return the original value, applying","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the specified memory ordering."}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Value","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Bool","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"url":"\/documentation\/atomics\/unsafeatomic\/loadthenlogicaland(with:ordering:)","kind":"symbol","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomic\/loadThenLogicalAnd(with:ordering:)","role":"symbol","title":"loadThenLogicalAnd(with:ordering:)"},"doc://swift-atomics.Atomics/documentation/Atomics/UnsafeAtomic/wrappingDecrementThenLoad(by:ordering:)":{"title":"wrappingDecrementThenLoad(by:ordering:)","kind":"symbol","abstract":[{"text":"Perform an atomic wrapping subtract operation and return the new value, applying","type":"text"},{"text":" ","type":"text"},{"text":"the specified memory ordering.","type":"text"}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"wrappingDecrementThenLoad"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"by"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics12UnsafeAtomicVA2A0C7IntegerRzrlE5Valuexmfp"},{"text":", ","kind":"text"},{"text":"ordering","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","kind":"typeIdentifier","text":"AtomicUpdateOrdering"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics12UnsafeAtomicVA2A0C7IntegerRzrlE5Valuexmfp","text":"Value"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Value","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"AtomicInteger","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"url":"\/documentation\/atomics\/unsafeatomic\/wrappingdecrementthenload(by:ordering:)","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomic\/wrappingDecrementThenLoad(by:ordering:)"},"doc://swift-atomics.Atomics/documentation/Atomics/UnsafeAtomic/bitwiseAndThenLoad(with:ordering:)":{"title":"bitwiseAndThenLoad(with:ordering:)","kind":"symbol","abstract":[{"text":"Perform an atomic bitwise AND operation and return the new value, applying","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the specified memory ordering."}],"type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"bitwiseAndThenLoad","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics12UnsafeAtomicVA2A0C7IntegerRzrlE5Valuexmfp"},{"text":", ","kind":"text"},{"text":"ordering","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","kind":"typeIdentifier","text":"AtomicUpdateOrdering"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics12UnsafeAtomicVA2A0C7IntegerRzrlE5Valuexmfp","text":"Value"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"AtomicInteger"},{"type":"text","text":"."}]},"url":"\/documentation\/atomics\/unsafeatomic\/bitwiseandthenload(with:ordering:)","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomic\/bitwiseAndThenLoad(with:ordering:)"},"doc://swift-atomics.Atomics/documentation/Atomics/UnsafeAtomic/destroy()":{"abstract":[{"text":"Disposes of the current value of the storage location corresponding to","type":"text"},{"type":"text","text":" "},{"type":"text","text":"this unsafe atomic value, then deinitializes and deallocates the storage."}],"url":"\/documentation\/atomics\/unsafeatomic\/destroy()","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomic\/destroy()","type":"topic","title":"destroy()","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"destroy","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:7Atomics12UnsafeAtomicV5Valuexmfp"}],"role":"symbol"},"doc://swift-atomics.Atomics/documentation/Atomics/UnsafeAtomicLazyReference":{"type":"topic","abstract":[{"text":"An unsafe reference type holding a lazily initializable atomic","type":"text"},{"type":"text","text":" "},{"type":"text","text":"strong reference, requiring manual memory management of the"},{"text":" ","type":"text"},{"text":"underlying storage representation.","type":"text"}],"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomicLazyReference","navigatorTitle":[{"text":"UnsafeAtomicLazyReference","kind":"identifier"}],"kind":"symbol","title":"UnsafeAtomicLazyReference","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"UnsafeAtomicLazyReference","kind":"identifier"}],"url":"\/documentation\/atomics\/unsafeatomiclazyreference"},"doc://swift-atomics.Atomics/documentation/Atomics/UnsafeAtomic/Storage":{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomic\/Storage","role":"symbol","kind":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Storage"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"Storage"}],"abstract":[],"title":"UnsafeAtomic.Storage","url":"\/documentation\/atomics\/unsafeatomic\/storage"},"doc://swift-atomics.Atomics/documentation/Atomics/AtomicValue":{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicValue","title":"AtomicValue","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomicValue"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AtomicValue"}],"type":"topic","abstract":[{"text":"A type that supports atomic operations through a separate atomic storage","type":"text"},{"text":" ","type":"text"},{"text":"representation.","type":"text"}],"url":"\/documentation\/atomics\/atomicvalue","role":"symbol"},"doc://swift-atomics.Atomics/documentation/Atomics/UnsafeAtomic/compareExchange(expected:desired:ordering:)":{"title":"compareExchange(expected:desired:ordering:)","role":"symbol","kind":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Value","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"AtomicValue"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Value"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Value.AtomicRepresentation.Value"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"abstract":[{"text":"Perform an atomic compare and exchange operation on the current value,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"applying the specified memory ordering."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"compareExchange","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"expected"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics12UnsafeAtomicV5Valuexmfp"},{"text":", ","kind":"text"},{"text":"desired","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Atomics12UnsafeAtomicV5Valuexmfp","kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"ordering"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","kind":"typeIdentifier","text":"AtomicUpdateOrdering"},{"text":") -> (exchanged","kind":"text"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":", original"},{"text":": ","kind":"text"},{"text":"Value","preciseIdentifier":"s:7Atomics12UnsafeAtomicV5Valuexmfp","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomic\/compareExchange(expected:desired:ordering:)","url":"\/documentation\/atomics\/unsafeatomic\/compareexchange(expected:desired:ordering:)"},"doc://swift-atomics.Atomics/documentation/Atomics/UnsafeAtomic/logicalXorThenLoad(with:ordering:)":{"url":"\/documentation\/atomics\/unsafeatomic\/logicalxorthenload(with:ordering:)","abstract":[{"type":"text","text":"Perform an atomic logical XOR operation and return the original value, applying"},{"type":"text","text":" "},{"text":"the specified memory ordering.","type":"text"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Value","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Bool"},{"type":"text","text":"."}]},"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomic\/logicalXorThenLoad(with:ordering:)","type":"topic","kind":"symbol","title":"logicalXorThenLoad(with:ordering:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"logicalXorThenLoad","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Value","preciseIdentifier":"s:7Atomics12UnsafeAtomicVAASbRszrlE5Valuexmfp","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"ordering","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Atomics12UnsafeAtomicVAASbRszrlE5Valuexmfp","kind":"typeIdentifier","text":"Value"}],"role":"symbol"},"doc://swift-atomics.Atomics/documentation/Atomics/UnsafeAtomic/wrappingIncrementThenLoad(by:ordering:)":{"abstract":[{"type":"text","text":"Perform an atomic wrapping add operation and return the new value, applying"},{"type":"text","text":" "},{"text":"the specified memory ordering.","type":"text"}],"type":"topic","title":"wrappingIncrementThenLoad(by:ordering:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"wrappingIncrementThenLoad"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"by"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Atomics12UnsafeAtomicVA2A0C7IntegerRzrlE5Valuexmfp","kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"text":"ordering","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"AtomicUpdateOrdering","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Atomics12UnsafeAtomicVA2A0C7IntegerRzrlE5Valuexmfp","kind":"typeIdentifier","text":"Value"}],"conformance":{"constraints":[{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"AtomicInteger","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"role":"symbol","url":"\/documentation\/atomics\/unsafeatomic\/wrappingincrementthenload(by:ordering:)","kind":"symbol","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomic\/wrappingIncrementThenLoad(by:ordering:)"},"doc://swift-atomics.Atomics/documentation/Atomics":{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics","url":"\/documentation\/atomics","abstract":[{"type":"text","text":"An atomics library for Swift."}],"title":"Atomics","kind":"symbol","role":"collection","type":"topic"},"doc://swift-atomics.Atomics/documentation/Atomics/UnsafeAtomic/loadThenWrappingDecrement(by:ordering:)":{"abstract":[{"text":"Perform an atomic wrapping subtract operation and return the original value, applying","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the specified memory ordering."}],"type":"topic","title":"loadThenWrappingDecrement(by:ordering:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"loadThenWrappingDecrement","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"by"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Atomics12UnsafeAtomicVA2A0C7IntegerRzrlE5Valuexmfp","kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"text":"ordering","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"AtomicUpdateOrdering","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Atomics12UnsafeAtomicVA2A0C7IntegerRzrlE5Valuexmfp","kind":"typeIdentifier","text":"Value"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"AtomicInteger"},{"text":".","type":"text"}]},"role":"symbol","url":"\/documentation\/atomics\/unsafeatomic\/loadthenwrappingdecrement(by:ordering:)","kind":"symbol","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomic\/loadThenWrappingDecrement(by:ordering:)"},"doc://swift-atomics.Atomics/documentation/Atomics/ManagedAtomicLazyReference":{"role":"symbol","title":"ManagedAtomicLazyReference","abstract":[{"text":"A reference type holding a lazily initializable atomic","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"strong reference, with automatic memory management."}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ManagedAtomicLazyReference","kind":"identifier"}],"kind":"symbol","type":"topic","url":"\/documentation\/atomics\/managedatomiclazyreference","navigatorTitle":[{"kind":"identifier","text":"ManagedAtomicLazyReference"}],"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/ManagedAtomicLazyReference"},"doc://swift-atomics.Atomics/documentation/Atomics/AtomicValue/AtomicRepresentation":{"role":"symbol","url":"\/documentation\/atomics\/atomicvalue\/atomicrepresentation","title":"AtomicRepresentation","fragments":[{"kind":"keyword","text":"associatedtype"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomicRepresentation"},{"kind":"text","text":" : "},{"text":"AtomicStorage","preciseIdentifier":"s:7Atomics13AtomicStorageP","kind":"typeIdentifier"}],"abstract":[{"text":"The atomic storage representation for this value.","type":"text"}],"kind":"symbol","type":"topic","required":true,"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicValue\/AtomicRepresentation"},"doc://swift-atomics.Atomics/documentation/Atomics/UnsafeAtomic/bitwiseXorThenLoad(with:ordering:)":{"abstract":[{"text":"Perform an atomic bitwise XOR operation and return the new value, applying","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the specified memory ordering."}],"type":"topic","title":"bitwiseXorThenLoad(with:ordering:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"bitwiseXorThenLoad"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"with"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Atomics12UnsafeAtomicVA2A0C7IntegerRzrlE5Valuexmfp","kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"text":"ordering","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"AtomicUpdateOrdering","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Atomics12UnsafeAtomicVA2A0C7IntegerRzrlE5Valuexmfp","kind":"typeIdentifier","text":"Value"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Value"},{"text":" conforms to ","type":"text"},{"code":"AtomicInteger","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"role":"symbol","url":"\/documentation\/atomics\/unsafeatomic\/bitwisexorthenload(with:ordering:)","kind":"symbol","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomic\/bitwiseXorThenLoad(with:ordering:)"},"doc://swift-atomics.Atomics/documentation/Atomics/UnsafeAtomic/logicalOrThenLoad(with:ordering:)":{"url":"\/documentation\/atomics\/unsafeatomic\/logicalorthenload(with:ordering:)","abstract":[{"text":"Perform an atomic logical OR operation and return the original value, applying","type":"text"},{"text":" ","type":"text"},{"text":"the specified memory ordering.","type":"text"}],"conformance":{"constraints":[{"code":"Value","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Bool"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomic\/logicalOrThenLoad(with:ordering:)","type":"topic","title":"logicalOrThenLoad(with:ordering:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"logicalOrThenLoad","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics12UnsafeAtomicVAASbRszrlE5Valuexmfp"},{"text":", ","kind":"text"},{"text":"ordering","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"AtomicUpdateOrdering","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7Atomics12UnsafeAtomicVAASbRszrlE5Valuexmfp","text":"Value","kind":"typeIdentifier"}],"role":"symbol"},"doc://swift-atomics.Atomics/s8SendableP":{"identifier":"doc:\/\/swift-atomics.Atomics\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://swift-atomics.Atomics/s15BitwiseCopyableP":{"identifier":"doc:\/\/swift-atomics.Atomics\/s15BitwiseCopyableP","title":"Swift.BitwiseCopyable","type":"unresolvable"}}}