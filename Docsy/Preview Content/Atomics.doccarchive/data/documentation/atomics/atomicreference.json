{"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"url":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicReference","interfaceLanguage":"swift"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/swift-atomics.Atomics\/documentation\/Atomics"]]},"sections":[],"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicOptionalWrappable","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicValue"],"type":"inheritsFrom","title":"Inherits From"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atomics\/atomicreference"]}],"metadata":{"role":"symbol","symbolKind":"protocol","roleHeading":"Protocol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"AtomicReference","kind":"identifier"}],"modules":[{"name":"Atomics"}],"externalID":"s:7Atomics15AtomicReferenceP","navigatorTitle":[{"text":"AtomicReference","kind":"identifier"}],"title":"AtomicReference"},"abstract":[{"type":"text","text":"A class type that supports atomic strong references."}],"seeAlsoSections":[{"identifiers":["doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicValue","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicInteger","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicOptionalWrappable"],"anchor":"Atomic-Value-Protocols","generated":true,"title":"Atomic Value Protocols"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomicReference"},{"kind":"text","text":" : AnyObject, "},{"text":"AtomicOptionalWrappable","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicOptionalWrappable","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics23AtomicOptionalWrappableP"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"text":"Overview","type":"heading","anchor":"overview"},{"syntax":null,"code":["class MyObject: AtomicReference {}","","let object = MyObject()","let ref = ManagedAtomic<MyObject>(object)","","ref.load(ordering: .relaxed) \/\/ Returns `object`."],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"The conforming class is allowed to be non-final, but ","type":"text"},{"type":"codeVoice","code":"ManagedAtomic"},{"text":" and","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"UnsafeAtomic"},{"type":"text","text":" do not support using a subclass as their generic argument â€“"},{"text":" ","type":"text"},{"type":"text","text":"the type of an atomic reference must be precisely the same class that"},{"type":"text","text":" "},{"text":"originally conformed to the protocol.","type":"text"}]},{"type":"codeListing","code":["class Derived: MyObject {}","","let ref2: ManagedAtomic<Derived>","\/\/ error: 'ManagedAtomic' requires the types 'Derived' and 'Base' be equivalent"],"syntax":null},{"type":"paragraph","inlineContent":[{"text":"Note that this limitation only affects the static type of the","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"ManagedAtomic"},{"type":"text","text":"\/"},{"code":"UnsafeAtomic","type":"codeVoice"},{"type":"text","text":" variables. Such references still fully"},{"text":" ","type":"text"},{"type":"text","text":"support holding instances of subclasses of the conforming class. (Returned"},{"text":" ","type":"text"},{"type":"text","text":"may be downcasted from the base type after an "},{"code":"is","type":"codeVoice"},{"text":" check.)","type":"text"}]},{"code":["let child = Derived()","ref.store(child, ordering: .relaxed) \/\/ OK!","let value = ref.load(ordering: .relaxed)","\/\/ `value` is a variable of type `MyObject`, holding a `Derived` instance.","print(value is Derived) \/\/ Prints \"true\""],"syntax":null,"type":"codeListing"}]}],"references":{"doc://swift-atomics.Atomics/documentation/Atomics/AtomicOptionalWrappable":{"abstract":[{"type":"text","text":"An atomic value that also supports atomic operations when wrapped"},{"type":"text","text":" "},{"text":"in an ","type":"text"},{"code":"Optional","type":"codeVoice"},{"type":"text","text":". Atomic optional wrappable types come with a"},{"type":"text","text":" "},{"text":"standalone atomic representation for their optional-wrapped","type":"text"},{"type":"text","text":" "},{"type":"text","text":"variants."}],"title":"AtomicOptionalWrappable","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AtomicOptionalWrappable"}],"url":"\/documentation\/atomics\/atomicoptionalwrappable","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AtomicOptionalWrappable","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicOptionalWrappable"},"doc://swift-atomics.Atomics/documentation/Atomics/AtomicInteger":{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicInteger","title":"AtomicInteger","url":"\/documentation\/atomics\/atomicinteger","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomicInteger"}],"navigatorTitle":[{"text":"AtomicInteger","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"A type that supports atomic integer operations through a separate","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"atomic storage representation."}],"role":"symbol"},"doc://swift-atomics.Atomics/documentation/Atomics/AtomicValue":{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicValue","title":"AtomicValue","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomicValue"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AtomicValue"}],"type":"topic","abstract":[{"text":"A type that supports atomic operations through a separate atomic storage","type":"text"},{"text":" ","type":"text"},{"text":"representation.","type":"text"}],"url":"\/documentation\/atomics\/atomicvalue","role":"symbol"},"doc://swift-atomics.Atomics/documentation/Atomics":{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics","url":"\/documentation\/atomics","abstract":[{"type":"text","text":"An atomics library for Swift."}],"title":"Atomics","kind":"symbol","role":"collection","type":"topic"},"doc://swift-atomics.Atomics/documentation/Atomics/AtomicReference":{"navigatorTitle":[{"text":"AtomicReference","kind":"identifier"}],"url":"\/documentation\/atomics\/atomicreference","abstract":[{"type":"text","text":"A class type that supports atomic strong references."}],"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicReference","type":"topic","title":"AtomicReference","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"AtomicReference","kind":"identifier"}],"role":"symbol"}}}