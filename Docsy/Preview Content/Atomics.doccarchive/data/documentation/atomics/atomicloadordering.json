{"metadata":{"title":"AtomicLoadOrdering","externalID":"s:7Atomics18AtomicLoadOrderingV","role":"symbol","modules":[{"name":"Atomics"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomicLoadOrdering"}],"navigatorTitle":[{"kind":"identifier","text":"AtomicLoadOrdering"}],"symbolKind":"struct","roleHeading":"Structure"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/swift-atomics.Atomics\/documentation\/Atomics"]]},"abstract":[{"text":"Specifies the memory ordering semantics of an atomic load operation.","type":"text"}],"seeAlsoSections":[{"identifiers":["doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicStoreOrdering","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicUpdateOrdering"],"title":"Memory Orderings","generated":true,"anchor":"Memory-Orderings"}],"relationshipsSections":[{"type":"conformsTo","kind":"relationships","identifiers":["doc:\/\/swift-atomics.Atomics\/s15BitwiseCopyableP","doc:\/\/swift-atomics.Atomics\/s8CopyableP","doc:\/\/swift-atomics.Atomics\/s23CustomStringConvertibleP","doc:\/\/swift-atomics.Atomics\/SQ","doc:\/\/swift-atomics.Atomics\/SH","doc:\/\/swift-atomics.Atomics\/s8SendableP"],"title":"Conforms To"}],"sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"topicSections":[{"anchor":"Ordering-Values","title":"Ordering Values","identifiers":["doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicLoadOrdering\/relaxed","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicLoadOrdering\/acquiring","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicLoadOrdering\/sequentiallyConsistent"]},{"identifiers":["doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicLoadOrdering\/CustomStringConvertible-Implementations","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicLoadOrdering\/Equatable-Implementations","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicLoadOrdering\/Hashable-Implementations"],"title":"Default Implementations","generated":true,"anchor":"Default-Implementations"}],"variants":[{"paths":["\/documentation\/atomics\/atomicloadordering"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"@frozen","kind":"attribute"},{"text":" ","kind":"text"},{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomicLoadOrdering"}]}]}],"identifier":{"url":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicLoadOrdering","interfaceLanguage":"swift"},"references":{"doc://swift-atomics.Atomics/documentation/Atomics/AtomicLoadOrdering/acquiring":{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicLoadOrdering\/acquiring","url":"\/documentation\/atomics\/atomicloadordering\/acquiring","abstract":[{"type":"text","text":"An acquiring load synchronizes with a releasing operation whose"},{"type":"text","text":" "},{"text":"value its reads. It ensures that the releasing and acquiring","type":"text"},{"type":"text","text":" "},{"type":"text","text":"threads agree that all subsequent variable accesses on the"},{"text":" ","type":"text"},{"text":"acquiring thread happen after the atomic operation itself.","type":"text"}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"acquiring","kind":"identifier"},{"kind":"text","text":": `Self`"}],"title":"acquiring","kind":"symbol","role":"symbol","type":"topic"},"doc://swift-atomics.Atomics/documentation/Atomics/AtomicUpdateOrdering":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomicUpdateOrdering"}],"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicUpdateOrdering","url":"\/documentation\/atomics\/atomicupdateordering","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AtomicUpdateOrdering"}],"type":"topic","abstract":[{"text":"Specifies the memory ordering semantics of an atomic read-modify-write","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"operation."}],"title":"AtomicUpdateOrdering"},"doc://swift-atomics.Atomics/documentation/Atomics/AtomicLoadOrdering/Equatable-Implementations":{"url":"\/documentation\/atomics\/atomicloadordering\/equatable-implementations","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicLoadOrdering\/Equatable-Implementations","kind":"article","role":"collectionGroup","type":"topic","title":"Equatable Implementations","abstract":[]},"doc://swift-atomics.Atomics/documentation/Atomics/AtomicStoreOrdering":{"type":"topic","abstract":[{"type":"text","text":"Specifies the memory ordering semantics of an atomic store operation."}],"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicStoreOrdering","navigatorTitle":[{"text":"AtomicStoreOrdering","kind":"identifier"}],"kind":"symbol","title":"AtomicStoreOrdering","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomicStoreOrdering"}],"url":"\/documentation\/atomics\/atomicstoreordering"},"doc://swift-atomics.Atomics/s23CustomStringConvertibleP":{"title":"Swift.CustomStringConvertible","identifier":"doc:\/\/swift-atomics.Atomics\/s23CustomStringConvertibleP","type":"unresolvable"},"doc://swift-atomics.Atomics/documentation/Atomics/AtomicLoadOrdering/Hashable-Implementations":{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicLoadOrdering\/Hashable-Implementations","type":"topic","url":"\/documentation\/atomics\/atomicloadordering\/hashable-implementations","title":"Hashable Implementations","abstract":[],"role":"collectionGroup","kind":"article"},"doc://swift-atomics.Atomics/SH":{"title":"Swift.Hashable","identifier":"doc:\/\/swift-atomics.Atomics\/SH","type":"unresolvable"},"doc://swift-atomics.Atomics/SQ":{"title":"Swift.Equatable","identifier":"doc:\/\/swift-atomics.Atomics\/SQ","type":"unresolvable"},"doc://swift-atomics.Atomics/s15BitwiseCopyableP":{"title":"Swift.BitwiseCopyable","identifier":"doc:\/\/swift-atomics.Atomics\/s15BitwiseCopyableP","type":"unresolvable"},"doc://swift-atomics.Atomics/documentation/Atomics":{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics","url":"\/documentation\/atomics","abstract":[{"type":"text","text":"An atomics library for Swift."}],"title":"Atomics","kind":"symbol","role":"collection","type":"topic"},"doc://swift-atomics.Atomics/documentation/Atomics/AtomicLoadOrdering/relaxed":{"role":"symbol","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicLoadOrdering\/relaxed","title":"relaxed","kind":"symbol","url":"\/documentation\/atomics\/atomicloadordering\/relaxed","type":"topic","abstract":[{"type":"text","text":"Guarantees the atomicity of the specific operation on which it is applied,"},{"type":"text","text":" "},{"text":"but imposes no ordering constraints on any other variable accesses.","type":"text"}],"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"relaxed"},{"text":": `Self`","kind":"text"}]},"doc://swift-atomics.Atomics/documentation/Atomics/AtomicLoadOrdering":{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicLoadOrdering","url":"\/documentation\/atomics\/atomicloadordering","abstract":[{"text":"Specifies the memory ordering semantics of an atomic load operation.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AtomicLoadOrdering","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"AtomicLoadOrdering"}],"title":"AtomicLoadOrdering","kind":"symbol","role":"symbol","type":"topic"},"doc://swift-atomics.Atomics/s8SendableP":{"title":"Swift.Sendable","identifier":"doc:\/\/swift-atomics.Atomics\/s8SendableP","type":"unresolvable"},"doc://swift-atomics.Atomics/documentation/Atomics/AtomicLoadOrdering/sequentiallyConsistent":{"role":"symbol","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicLoadOrdering\/sequentiallyConsistent","title":"sequentiallyConsistent","kind":"symbol","url":"\/documentation\/atomics\/atomicloadordering\/sequentiallyconsistent","type":"topic","abstract":[{"type":"text","text":"A sequentially consistent load performs an acquiring load and"},{"text":" ","type":"text"},{"type":"text","text":"also guarantees that it and all other sequentially consistent"},{"type":"text","text":" "},{"text":"atomic operations (loads, stores, updates) appear to be executed","type":"text"},{"text":" ","type":"text"},{"text":"in a single, total sequential ordering.","type":"text"}],"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"sequentiallyConsistent"},{"text":": `Self`","kind":"text"}]},"doc://swift-atomics.Atomics/documentation/Atomics/AtomicLoadOrdering/CustomStringConvertible-Implementations":{"role":"collectionGroup","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicLoadOrdering\/CustomStringConvertible-Implementations","kind":"article","title":"CustomStringConvertible Implementations","type":"topic","abstract":[],"url":"\/documentation\/atomics\/atomicloadordering\/customstringconvertible-implementations"},"doc://swift-atomics.Atomics/s8CopyableP":{"title":"Swift.Copyable","identifier":"doc:\/\/swift-atomics.Atomics\/s8CopyableP","type":"unresolvable"}}}