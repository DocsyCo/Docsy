{"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"topicSections":[{"anchor":"Initializers","title":"Initializers","identifiers":["doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/ManagedAtomic\/init(_:)"]},{"title":"Atomic Operations","identifiers":["doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/ManagedAtomic\/load(ordering:)","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/ManagedAtomic\/store(_:ordering:)","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/ManagedAtomic\/exchange(_:ordering:)","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/ManagedAtomic\/compareExchange(expected:desired:ordering:)","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/ManagedAtomic\/compareExchange(expected:desired:successOrdering:failureOrdering:)","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/ManagedAtomic\/weakCompareExchange(expected:desired:ordering:)","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/ManagedAtomic\/weakCompareExchange(expected:desired:successOrdering:failureOrdering:)"],"anchor":"Atomic-Operations"},{"identifiers":["doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/ManagedAtomic\/wrappingIncrement(by:ordering:)","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/ManagedAtomic\/wrappingDecrement(by:ordering:)","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/ManagedAtomic\/loadThenWrappingIncrement(by:ordering:)","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/ManagedAtomic\/loadThenWrappingDecrement(by:ordering:)","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/ManagedAtomic\/loadThenBitwiseOr(with:ordering:)","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/ManagedAtomic\/loadThenBitwiseAnd(with:ordering:)","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/ManagedAtomic\/loadThenBitwiseXor(with:ordering:)","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/ManagedAtomic\/wrappingIncrementThenLoad(by:ordering:)","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/ManagedAtomic\/wrappingDecrementThenLoad(by:ordering:)","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/ManagedAtomic\/bitwiseOrThenLoad(with:ordering:)","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/ManagedAtomic\/bitwiseAndThenLoad(with:ordering:)","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/ManagedAtomic\/bitwiseXorThenLoad(with:ordering:)"],"anchor":"Atomic-Integer-Operations","title":"Atomic Integer Operations"},{"title":"Atomic Boolean Operations","anchor":"Atomic-Boolean-Operations","identifiers":["doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/ManagedAtomic\/logicalOrThenLoad(with:ordering:)","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/ManagedAtomic\/logicalAndThenLoad(with:ordering:)","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/ManagedAtomic\/logicalXorThenLoad(with:ordering:)","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/ManagedAtomic\/loadThenLogicalOr(with:ordering:)","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/ManagedAtomic\/loadThenLogicalAnd(with:ordering:)","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/ManagedAtomic\/loadThenLogicalXor(with:ordering:)"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"ManagedAtomic","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"AtomicValue","preciseIdentifier":"s:7Atomics11AtomicValueP","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicValue","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":" == "},{"text":"Value","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics11AtomicValueP0B14RepresentationQa","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicValue\/AtomicRepresentation","text":"AtomicRepresentation"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Atomics13AtomicStorageP5ValueQa","kind":"typeIdentifier","text":"Value","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicStorage\/Value"}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atomics\/managedatomic"]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/swift-atomics.Atomics\/documentation\/Atomics"]]},"abstract":[{"type":"text","text":"A reference type holding an atomic value, with automatic memory management."}],"relationshipsSections":[{"title":"Conforms To","identifiers":["doc:\/\/swift-atomics.Atomics\/s8SendableP"],"kind":"relationships","type":"conformsTo"}],"seeAlsoSections":[{"anchor":"Atomic-Container-Types","generated":true,"identifiers":["doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomic","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/ManagedAtomicLazyReference","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomicLazyReference"],"title":"Atomic Container Types"}],"metadata":{"externalID":"s:7Atomics13ManagedAtomicC","navigatorTitle":[{"text":"ManagedAtomic","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"ManagedAtomic","kind":"identifier"}],"roleHeading":"Class","title":"ManagedAtomic","role":"symbol","symbolKind":"class","modules":[{"name":"Atomics"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/ManagedAtomic"},"references":{"doc://swift-atomics.Atomics/documentation/Atomics/ManagedAtomic/loadThenLogicalXor(with:ordering:)":{"abstract":[{"text":"Perform an atomic logical XOR operation and return the original value, applying","type":"text"},{"type":"text","text":" "},{"text":"the specified memory ordering.","type":"text"}],"title":"loadThenLogicalXor(with:ordering:)","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/ManagedAtomic\/loadThenLogicalXor(with:ordering:)","role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"loadThenLogicalXor"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"text":"Value","preciseIdentifier":"s:7Atomics13ManagedAtomicCAASbRszrlE5Valuexmfp","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ordering","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"AtomicUpdateOrdering","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics13ManagedAtomicCAASbRszrlE5Valuexmfp","text":"Value"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Value","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Bool","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"url":"\/documentation\/atomics\/managedatomic\/loadthenlogicalxor(with:ordering:)","kind":"symbol"},"doc://swift-atomics.Atomics/documentation/Atomics/ManagedAtomic/logicalAndThenLoad(with:ordering:)":{"abstract":[{"type":"text","text":"Perform an atomic logical AND operation and return the original value, applying"},{"text":" ","type":"text"},{"text":"the specified memory ordering.","type":"text"}],"title":"logicalAndThenLoad(with:ordering:)","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/ManagedAtomic\/logicalAndThenLoad(with:ordering:)","role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"logicalAndThenLoad","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"text":"Value","preciseIdentifier":"s:7Atomics13ManagedAtomicCAASbRszrlE5Valuexmfp","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ordering","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Atomics13ManagedAtomicCAASbRszrlE5Valuexmfp","kind":"typeIdentifier","text":"Value"}],"conformance":{"constraints":[{"code":"Value","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Bool","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"url":"\/documentation\/atomics\/managedatomic\/logicalandthenload(with:ordering:)","kind":"symbol"},"doc://swift-atomics.Atomics/documentation/Atomics/UnsafeAtomic":{"url":"\/documentation\/atomics\/unsafeatomic","title":"UnsafeAtomic","navigatorTitle":[{"kind":"identifier","text":"UnsafeAtomic"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UnsafeAtomic"}],"abstract":[{"text":"An unsafe reference type holding an atomic value, requiring manual memory","type":"text"},{"type":"text","text":" "},{"text":"management of the underlying storage representation.","type":"text"}],"kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomic"},"doc://swift-atomics.Atomics/documentation/Atomics/AtomicValue":{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicValue","title":"AtomicValue","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomicValue"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AtomicValue"}],"type":"topic","abstract":[{"text":"A type that supports atomic operations through a separate atomic storage","type":"text"},{"text":" ","type":"text"},{"text":"representation.","type":"text"}],"url":"\/documentation\/atomics\/atomicvalue","role":"symbol"},"doc://swift-atomics.Atomics/documentation/Atomics/ManagedAtomic/loadThenBitwiseAnd(with:ordering:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"loadThenBitwiseAnd"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Atomics13ManagedAtomicCA2A0C7IntegerRzrlE5Valuexmfp","kind":"typeIdentifier","text":"Value"},{"text":", ","kind":"text"},{"text":"ordering","kind":"externalParam"},{"kind":"text","text":": "},{"text":"AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Atomics13ManagedAtomicCA2A0C7IntegerRzrlE5Valuexmfp","kind":"typeIdentifier","text":"Value"}],"url":"\/documentation\/atomics\/managedatomic\/loadthenbitwiseand(with:ordering:)","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/ManagedAtomic\/loadThenBitwiseAnd(with:ordering:)","kind":"symbol","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Perform an atomic bitwise AND operation and return the original value, applying"},{"text":" ","type":"text"},{"text":"the specified memory ordering.","type":"text"}],"title":"loadThenBitwiseAnd(with:ordering:)","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Value"},{"text":" conforms to ","type":"text"},{"code":"AtomicInteger","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]}},"doc://swift-atomics.Atomics/documentation/Atomics/ManagedAtomic/loadThenWrappingIncrement(by:ordering:)":{"role":"symbol","type":"topic","abstract":[{"text":"Perform an atomic wrapping add operation and return the original value, applying","type":"text"},{"type":"text","text":" "},{"text":"the specified memory ordering.","type":"text"}],"url":"\/documentation\/atomics\/managedatomic\/loadthenwrappingincrement(by:ordering:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"loadThenWrappingIncrement","kind":"identifier"},{"kind":"text","text":"("},{"text":"by","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics13ManagedAtomicCA2A0C7IntegerRzrlE5Valuexmfp","text":"Value"},{"text":", ","kind":"text"},{"text":"ordering","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics13ManagedAtomicCA2A0C7IntegerRzrlE5Valuexmfp","text":"Value"}],"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/ManagedAtomic\/loadThenWrappingIncrement(by:ordering:)","kind":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"code":"AtomicInteger","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"title":"loadThenWrappingIncrement(by:ordering:)"},"doc://swift-atomics.Atomics/documentation/Atomics/ManagedAtomic/loadThenWrappingDecrement(by:ordering:)":{"url":"\/documentation\/atomics\/managedatomic\/loadthenwrappingdecrement(by:ordering:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"loadThenWrappingDecrement"},{"kind":"text","text":"("},{"text":"by","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Atomics13ManagedAtomicCA2A0C7IntegerRzrlE5Valuexmfp","text":"Value","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"ordering"},{"text":": ","kind":"text"},{"text":"AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics13ManagedAtomicCA2A0C7IntegerRzrlE5Valuexmfp","text":"Value"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Value"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"AtomicInteger"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/ManagedAtomic\/loadThenWrappingDecrement(by:ordering:)","title":"loadThenWrappingDecrement(by:ordering:)","role":"symbol","abstract":[{"type":"text","text":"Perform an atomic wrapping subtract operation and return the original value, applying"},{"type":"text","text":" "},{"text":"the specified memory ordering.","type":"text"}],"kind":"symbol","type":"topic"},"doc://swift-atomics.Atomics/documentation/Atomics/ManagedAtomic/loadThenBitwiseOr(with:ordering:)":{"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"AtomicInteger","type":"codeVoice"},{"text":".","type":"text"}]},"title":"loadThenBitwiseOr(with:ordering:)","abstract":[{"type":"text","text":"Perform an atomic bitwise OR operation and return the original value, applying"},{"type":"text","text":" "},{"type":"text","text":"the specified memory ordering."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"loadThenBitwiseOr"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:7Atomics13ManagedAtomicCA2A0C7IntegerRzrlE5Valuexmfp"},{"kind":"text","text":", "},{"kind":"externalParam","text":"ordering"},{"text":": ","kind":"text"},{"text":"AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics13ManagedAtomicCA2A0C7IntegerRzrlE5Valuexmfp","text":"Value"}],"role":"symbol","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/ManagedAtomic\/loadThenBitwiseOr(with:ordering:)","url":"\/documentation\/atomics\/managedatomic\/loadthenbitwiseor(with:ordering:)","type":"topic"},"doc://swift-atomics.Atomics/documentation/Atomics/ManagedAtomic/wrappingDecrementThenLoad(by:ordering:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"Value"},{"text":" conforms to ","type":"text"},{"code":"AtomicInteger","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"title":"wrappingDecrementThenLoad(by:ordering:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"wrappingDecrementThenLoad","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"by"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Atomics13ManagedAtomicCA2A0C7IntegerRzrlE5Valuexmfp","text":"Value","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"ordering","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics13ManagedAtomicCA2A0C7IntegerRzrlE5Valuexmfp","text":"Value"}],"type":"topic","abstract":[{"text":"Perform an atomic wrapping subtract operation and return the new value, applying","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the specified memory ordering."}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/ManagedAtomic\/wrappingDecrementThenLoad(by:ordering:)","url":"\/documentation\/atomics\/managedatomic\/wrappingdecrementthenload(by:ordering:)"},"doc://swift-atomics.Atomics/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/swift-atomics.Atomics\/s8SendableP","title":"Swift.Sendable"},"doc://swift-atomics.Atomics/documentation/Atomics/ManagedAtomic/wrappingDecrement(by:ordering:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"wrappingDecrement"},{"text":"(","kind":"text"},{"text":"by","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics13ManagedAtomicCA2A0C7IntegerRzrlE5Valuexmfp","text":"Value"},{"text":", ","kind":"text"},{"text":"ordering","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"AtomicUpdateOrdering","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"text":")","kind":"text"}],"kind":"symbol","abstract":[{"type":"text","text":"Perform an atomic wrapping decrement operation applying the"},{"type":"text","text":" "},{"text":"specified memory ordering.","type":"text"}],"role":"symbol","type":"topic","url":"\/documentation\/atomics\/managedatomic\/wrappingdecrement(by:ordering:)","title":"wrappingDecrement(by:ordering:)","conformance":{"constraints":[{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"AtomicInteger","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/ManagedAtomic\/wrappingDecrement(by:ordering:)"},"doc://swift-atomics.Atomics/documentation/Atomics/ManagedAtomic/logicalXorThenLoad(with:ordering:)":{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/ManagedAtomic\/logicalXorThenLoad(with:ordering:)","url":"\/documentation\/atomics\/managedatomic\/logicalxorthenload(with:ordering:)","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Value"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Bool"},{"type":"text","text":"."}]},"title":"logicalXorThenLoad(with:ordering:)","kind":"symbol","role":"symbol","abstract":[{"text":"Perform an atomic logical XOR operation and return the original value, applying","type":"text"},{"type":"text","text":" "},{"text":"the specified memory ordering.","type":"text"}],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"logicalXorThenLoad","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics13ManagedAtomicCAASbRszrlE5Valuexmfp","text":"Value"},{"kind":"text","text":", "},{"text":"ordering","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7Atomics13ManagedAtomicCAASbRszrlE5Valuexmfp","text":"Value","kind":"typeIdentifier"}]},"doc://swift-atomics.Atomics/documentation/Atomics":{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics","url":"\/documentation\/atomics","abstract":[{"type":"text","text":"An atomics library for Swift."}],"title":"Atomics","kind":"symbol","role":"collection","type":"topic"},"doc://swift-atomics.Atomics/documentation/Atomics/ManagedAtomic/load(ordering:)":{"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"load","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"ordering"},{"kind":"text","text":": "},{"text":"AtomicLoadOrdering","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics18AtomicLoadOrderingV"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:7Atomics13ManagedAtomicC5Valuexmfp"}],"title":"load(ordering:)","kind":"symbol","role":"symbol","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/ManagedAtomic\/load(ordering:)","conformance":{"constraints":[{"type":"codeVoice","code":"Value"},{"text":" conforms to ","type":"text"},{"code":"AtomicValue","type":"codeVoice"},{"type":"text","text":" and "},{"code":"Value","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Value.AtomicRepresentation.Value","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"abstract":[{"text":"Atomically loads and returns the current value, applying the specified","type":"text"},{"text":" ","type":"text"},{"text":"memory ordering.","type":"text"}],"url":"\/documentation\/atomics\/managedatomic\/load(ordering:)"},"doc://swift-atomics.Atomics/documentation/Atomics/ManagedAtomic/exchange(_:ordering:)":{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/ManagedAtomic\/exchange(_:ordering:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"exchange"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics13ManagedAtomicC5Valuexmfp","text":"Value"},{"text":", ","kind":"text"},{"text":"ordering","kind":"externalParam"},{"kind":"text","text":": "},{"text":"AtomicUpdateOrdering","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:7Atomics13ManagedAtomicC5Valuexmfp"}],"url":"\/documentation\/atomics\/managedatomic\/exchange(_:ordering:)","conformance":{"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"AtomicValue"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Value"},{"text":" is ","type":"text"},{"code":"Value.AtomicRepresentation.Value","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"type":"topic","role":"symbol","kind":"symbol","title":"exchange(_:ordering:)","abstract":[{"type":"text","text":"Atomically sets the current value to "},{"code":"desired","type":"codeVoice"},{"text":" and returns the original","type":"text"},{"text":" ","type":"text"},{"text":"value, applying the specified memory ordering.","type":"text"}]},"doc://swift-atomics.Atomics/documentation/Atomics/ManagedAtomic/wrappingIncrementThenLoad(by:ordering:)":{"kind":"symbol","conformance":{"constraints":[{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"AtomicInteger","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"role":"symbol","type":"topic","url":"\/documentation\/atomics\/managedatomic\/wrappingincrementthenload(by:ordering:)","abstract":[{"type":"text","text":"Perform an atomic wrapping add operation and return the new value, applying"},{"text":" ","type":"text"},{"type":"text","text":"the specified memory ordering."}],"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/ManagedAtomic\/wrappingIncrementThenLoad(by:ordering:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"wrappingIncrementThenLoad"},{"kind":"text","text":"("},{"text":"by","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Atomics13ManagedAtomicCA2A0C7IntegerRzrlE5Valuexmfp","text":"Value","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"ordering"},{"kind":"text","text":": "},{"text":"AtomicUpdateOrdering","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"text":") -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics13ManagedAtomicCA2A0C7IntegerRzrlE5Valuexmfp"}],"title":"wrappingIncrementThenLoad(by:ordering:)"},"doc://swift-atomics.Atomics/documentation/Atomics/ManagedAtomic/compareExchange(expected:desired:successOrdering:failureOrdering:)":{"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"compareExchange"},{"kind":"text","text":"("},{"text":"expected","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics13ManagedAtomicC5Valuexmfp","text":"Value"},{"text":", ","kind":"text"},{"text":"desired","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Atomics13ManagedAtomicC5Valuexmfp","kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"text":"successOrdering","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"kind":"text","text":", "},{"text":"failureOrdering","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"AtomicLoadOrdering","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics18AtomicLoadOrderingV"},{"text":") -> (exchanged","kind":"text"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":", original","kind":"text"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics13ManagedAtomicC5Valuexmfp","text":"Value"},{"text":")","kind":"text"}],"abstract":[{"text":"Perform an atomic compare and exchange operation on the current value,","type":"text"},{"text":" ","type":"text"},{"text":"applying the specified success\/failure memory orderings.","type":"text"}],"url":"\/documentation\/atomics\/managedatomic\/compareexchange(expected:desired:successordering:failureordering:)","kind":"symbol","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/ManagedAtomic\/compareExchange(expected:desired:successOrdering:failureOrdering:)","title":"compareExchange(expected:desired:successOrdering:failureOrdering:)","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Value"},{"text":" conforms to ","type":"text"},{"code":"AtomicValue","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Value"},{"text":" is ","type":"text"},{"code":"Value.AtomicRepresentation.Value","type":"codeVoice"},{"type":"text","text":"."}]}},"doc://swift-atomics.Atomics/documentation/Atomics/ManagedAtomic/bitwiseAndThenLoad(with:ordering:)":{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/ManagedAtomic\/bitwiseAndThenLoad(with:ordering:)","type":"topic","url":"\/documentation\/atomics\/managedatomic\/bitwiseandthenload(with:ordering:)","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"AtomicInteger"},{"text":".","type":"text"}]},"kind":"symbol","abstract":[{"text":"Perform an atomic bitwise AND operation and return the new value, applying","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the specified memory ordering."}],"title":"bitwiseAndThenLoad(with:ordering:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"bitwiseAndThenLoad","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Atomics13ManagedAtomicCA2A0C7IntegerRzrlE5Valuexmfp","text":"Value","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"ordering","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics13ManagedAtomicCA2A0C7IntegerRzrlE5Valuexmfp","text":"Value"}]},"doc://swift-atomics.Atomics/documentation/Atomics/AtomicValue/AtomicRepresentation":{"role":"symbol","url":"\/documentation\/atomics\/atomicvalue\/atomicrepresentation","title":"AtomicRepresentation","fragments":[{"kind":"keyword","text":"associatedtype"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomicRepresentation"},{"kind":"text","text":" : "},{"text":"AtomicStorage","preciseIdentifier":"s:7Atomics13AtomicStorageP","kind":"typeIdentifier"}],"abstract":[{"text":"The atomic storage representation for this value.","type":"text"}],"kind":"symbol","type":"topic","required":true,"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicValue\/AtomicRepresentation"},"doc://swift-atomics.Atomics/documentation/Atomics/ManagedAtomicLazyReference":{"role":"symbol","title":"ManagedAtomicLazyReference","abstract":[{"text":"A reference type holding a lazily initializable atomic","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"strong reference, with automatic memory management."}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ManagedAtomicLazyReference","kind":"identifier"}],"kind":"symbol","type":"topic","url":"\/documentation\/atomics\/managedatomiclazyreference","navigatorTitle":[{"kind":"identifier","text":"ManagedAtomicLazyReference"}],"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/ManagedAtomicLazyReference"},"doc://swift-atomics.Atomics/documentation/Atomics/ManagedAtomic/weakCompareExchange(expected:desired:ordering:)":{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/ManagedAtomic\/weakCompareExchange(expected:desired:ordering:)","url":"\/documentation\/atomics\/managedatomic\/weakcompareexchange(expected:desired:ordering:)","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"AtomicValue","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Value"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Value.AtomicRepresentation.Value"},{"text":".","type":"text"}]},"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"weakCompareExchange"},{"text":"(","kind":"text"},{"text":"expected","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Atomics13ManagedAtomicC5Valuexmfp","kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"desired"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics13ManagedAtomicC5Valuexmfp","text":"Value"},{"kind":"text","text":", "},{"text":"ordering","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering"},{"kind":"text","text":") -> (exchanged"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":", original","kind":"text"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:7Atomics13ManagedAtomicC5Valuexmfp"},{"text":")","kind":"text"}],"title":"weakCompareExchange(expected:desired:ordering:)","type":"topic","abstract":[{"type":"text","text":"Perform an atomic weak compare and exchange operation on the current"},{"type":"text","text":" "},{"text":"value, applying the memory ordering. This compare-exchange variant is","type":"text"},{"type":"text","text":" "},{"text":"allowed to spuriously fail; it is designed to be called in a loop until","type":"text"},{"type":"text","text":" "},{"type":"text","text":"it indicates a successful exchange has happened."}]},"doc://swift-atomics.Atomics/documentation/Atomics/ManagedAtomic/bitwiseOrThenLoad(with:ordering:)":{"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"AtomicInteger","type":"codeVoice"},{"text":".","type":"text"}]},"title":"bitwiseOrThenLoad(with:ordering:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"bitwiseOrThenLoad","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:7Atomics13ManagedAtomicCA2A0C7IntegerRzrlE5Valuexmfp"},{"text":", ","kind":"text"},{"text":"ordering","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics13ManagedAtomicCA2A0C7IntegerRzrlE5Valuexmfp","text":"Value"}],"role":"symbol","url":"\/documentation\/atomics\/managedatomic\/bitwiseorthenload(with:ordering:)","abstract":[{"type":"text","text":"Perform an atomic bitwise OR operation and return the new value, applying"},{"type":"text","text":" "},{"type":"text","text":"the specified memory ordering."}],"kind":"symbol","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/ManagedAtomic\/bitwiseOrThenLoad(with:ordering:)","type":"topic"},"doc://swift-atomics.Atomics/documentation/Atomics/ManagedAtomic/loadThenLogicalAnd(with:ordering:)":{"url":"\/documentation\/atomics\/managedatomic\/loadthenlogicaland(with:ordering:)","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Perform an atomic logical AND operation and return the original value, applying"},{"type":"text","text":" "},{"type":"text","text":"the specified memory ordering."}],"kind":"symbol","title":"loadThenLogicalAnd(with:ordering:)","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/ManagedAtomic\/loadThenLogicalAnd(with:ordering:)","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Value","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Bool","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"loadThenLogicalAnd","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics13ManagedAtomicCAASbRszrlE5Valuexmfp","text":"Value"},{"text":", ","kind":"text"},{"text":"ordering","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"text":") -> ","kind":"text"},{"text":"Value","preciseIdentifier":"s:7Atomics13ManagedAtomicCAASbRszrlE5Valuexmfp","kind":"typeIdentifier"}]},"doc://swift-atomics.Atomics/documentation/Atomics/ManagedAtomic/compareExchange(expected:desired:ordering:)":{"abstract":[{"text":"Perform an atomic compare and exchange operation on the current value,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"applying the specified memory ordering."}],"title":"compareExchange(expected:desired:ordering:)","url":"\/documentation\/atomics\/managedatomic\/compareexchange(expected:desired:ordering:)","type":"topic","kind":"symbol","role":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"Value"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"AtomicValue"},{"text":" and ","type":"text"},{"code":"Value","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Value.AtomicRepresentation.Value","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"compareExchange"},{"kind":"text","text":"("},{"text":"expected","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Value","preciseIdentifier":"s:7Atomics13ManagedAtomicC5Valuexmfp","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"desired"},{"text":": ","kind":"text"},{"text":"Value","preciseIdentifier":"s:7Atomics13ManagedAtomicC5Valuexmfp","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"ordering"},{"text":": ","kind":"text"},{"text":"AtomicUpdateOrdering","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"kind":"text","text":") -> (exchanged"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":", original"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics13ManagedAtomicC5Valuexmfp","text":"Value"},{"text":")","kind":"text"}],"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/ManagedAtomic\/compareExchange(expected:desired:ordering:)"},"doc://swift-atomics.Atomics/documentation/Atomics/ManagedAtomic/wrappingIncrement(by:ordering:)":{"role":"symbol","type":"topic","url":"\/documentation\/atomics\/managedatomic\/wrappingincrement(by:ordering:)","kind":"symbol","conformance":{"constraints":[{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"AtomicInteger","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"title":"wrappingIncrement(by:ordering:)","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/ManagedAtomic\/wrappingIncrement(by:ordering:)","abstract":[{"type":"text","text":"Perform an atomic wrapping increment operation applying the"},{"type":"text","text":" "},{"text":"specified memory ordering.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"wrappingIncrement"},{"kind":"text","text":"("},{"kind":"externalParam","text":"by"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Atomics13ManagedAtomicCA2A0C7IntegerRzrlE5Valuexmfp","text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"ordering"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering"},{"text":")","kind":"text"}]},"doc://swift-atomics.Atomics/documentation/Atomics/AtomicStorage/Value":{"type":"topic","abstract":[{"text":"The type whose values this storage representation is representing.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"associatedtype"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Value"}],"required":true,"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicStorage\/Value","kind":"symbol","url":"\/documentation\/atomics\/atomicstorage\/value","title":"Value"},"doc://swift-atomics.Atomics/documentation/Atomics/ManagedAtomic/loadThenLogicalOr(with:ordering:)":{"abstract":[{"type":"text","text":"Perform an atomic logical OR operation and return the original value, applying"},{"type":"text","text":" "},{"text":"the specified memory ordering.","type":"text"}],"title":"loadThenLogicalOr(with:ordering:)","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/ManagedAtomic\/loadThenLogicalOr(with:ordering:)","role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"loadThenLogicalOr","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Value","preciseIdentifier":"s:7Atomics13ManagedAtomicCAASbRszrlE5Valuexmfp","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ordering","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7Atomics13ManagedAtomicCAASbRszrlE5Valuexmfp","kind":"typeIdentifier","text":"Value"}],"conformance":{"constraints":[{"code":"Value","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Bool"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"url":"\/documentation\/atomics\/managedatomic\/loadthenlogicalor(with:ordering:)","kind":"symbol"},"doc://swift-atomics.Atomics/documentation/Atomics/ManagedAtomic":{"abstract":[{"type":"text","text":"A reference type holding an atomic value, with automatic memory management."}],"title":"ManagedAtomic","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/ManagedAtomic","url":"\/documentation\/atomics\/managedatomic","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"ManagedAtomic","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"ManagedAtomic","kind":"identifier"}],"role":"symbol","type":"topic"},"doc://swift-atomics.Atomics/documentation/Atomics/ManagedAtomic/init(_:)":{"kind":"symbol","role":"symbol","type":"topic","url":"\/documentation\/atomics\/managedatomic\/init(_:)","abstract":[{"text":"Initialize a new managed atomic instance holding the specified initial","type":"text"},{"text":" ","type":"text"},{"text":"value.","type":"text"}],"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/ManagedAtomic\/init(_:)","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics13ManagedAtomicC5Valuexmfp"},{"kind":"text","text":")"}],"title":"init(_:)"},"doc://swift-atomics.Atomics/documentation/Atomics/ManagedAtomic/store(_:ordering:)":{"type":"topic","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/ManagedAtomic\/store(_:ordering:)","title":"store(_:ordering:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"store","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:7Atomics13ManagedAtomicC5Valuexmfp"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"ordering"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics19AtomicStoreOrderingV","text":"AtomicStoreOrdering"},{"kind":"text","text":")"}],"conformance":{"constraints":[{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"AtomicValue"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Value"},{"type":"text","text":" is "},{"code":"Value.AtomicRepresentation.Value","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"abstract":[{"text":"Atomically sets the current value to ","type":"text"},{"type":"codeVoice","code":"desired"},{"text":", applying the specified","type":"text"},{"type":"text","text":" "},{"type":"text","text":"memory ordering."}],"kind":"symbol","role":"symbol","url":"\/documentation\/atomics\/managedatomic\/store(_:ordering:)"},"doc://swift-atomics.Atomics/documentation/Atomics/ManagedAtomic/weakCompareExchange(expected:desired:successOrdering:failureOrdering:)":{"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"weakCompareExchange"},{"kind":"text","text":"("},{"text":"expected","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Atomics13ManagedAtomicC5Valuexmfp","kind":"typeIdentifier","text":"Value"},{"text":", ","kind":"text"},{"text":"desired","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Atomics13ManagedAtomicC5Valuexmfp","text":"Value","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"successOrdering"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","kind":"typeIdentifier","text":"AtomicUpdateOrdering"},{"text":", ","kind":"text"},{"text":"failureOrdering","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Atomics18AtomicLoadOrderingV","kind":"typeIdentifier","text":"AtomicLoadOrdering"},{"text":") -> (exchanged","kind":"text"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":", original","kind":"text"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics13ManagedAtomicC5Valuexmfp"},{"text":")","kind":"text"}],"title":"weakCompareExchange(expected:desired:successOrdering:failureOrdering:)","kind":"symbol","role":"symbol","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/ManagedAtomic\/weakCompareExchange(expected:desired:successOrdering:failureOrdering:)","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"AtomicValue","type":"codeVoice"},{"type":"text","text":" and "},{"code":"Value","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Value.AtomicRepresentation.Value","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"abstract":[{"text":"Perform an atomic weak compare and exchange operation on the current","type":"text"},{"type":"text","text":" "},{"type":"text","text":"value, applying the specified success\/failure memory orderings. This"},{"type":"text","text":" "},{"text":"compare-exchange variant is allowed to spuriously fail; it is designed to","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"be called in a loop until it indicates a successful exchange has happened."}],"url":"\/documentation\/atomics\/managedatomic\/weakcompareexchange(expected:desired:successordering:failureordering:)"},"doc://swift-atomics.Atomics/documentation/Atomics/ManagedAtomic/bitwiseXorThenLoad(with:ordering:)":{"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"AtomicInteger","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"title":"bitwiseXorThenLoad(with:ordering:)","abstract":[{"type":"text","text":"Perform an atomic bitwise XOR operation and return the new value, applying"},{"type":"text","text":" "},{"type":"text","text":"the specified memory ordering."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"bitwiseXorThenLoad"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:7Atomics13ManagedAtomicCA2A0C7IntegerRzrlE5Valuexmfp"},{"kind":"text","text":", "},{"kind":"externalParam","text":"ordering"},{"text":": ","kind":"text"},{"text":"AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics13ManagedAtomicCA2A0C7IntegerRzrlE5Valuexmfp","text":"Value"}],"role":"symbol","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/ManagedAtomic\/bitwiseXorThenLoad(with:ordering:)","url":"\/documentation\/atomics\/managedatomic\/bitwisexorthenload(with:ordering:)","type":"topic"},"doc://swift-atomics.Atomics/documentation/Atomics/ManagedAtomic/logicalOrThenLoad(with:ordering:)":{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/ManagedAtomic\/logicalOrThenLoad(with:ordering:)","url":"\/documentation\/atomics\/managedatomic\/logicalorthenload(with:ordering:)","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Value","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Bool"},{"text":".","type":"text"}]},"title":"logicalOrThenLoad(with:ordering:)","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Perform an atomic logical OR operation and return the original value, applying"},{"text":" ","type":"text"},{"type":"text","text":"the specified memory ordering."}],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"logicalOrThenLoad","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics13ManagedAtomicCAASbRszrlE5Valuexmfp"},{"text":", ","kind":"text"},{"text":"ordering","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics13ManagedAtomicCAASbRszrlE5Valuexmfp","text":"Value"}]},"doc://swift-atomics.Atomics/documentation/Atomics/ManagedAtomic/loadThenBitwiseXor(with:ordering:)":{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/ManagedAtomic\/loadThenBitwiseXor(with:ordering:)","kind":"symbol","url":"\/documentation\/atomics\/managedatomic\/loadthenbitwisexor(with:ordering:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"loadThenBitwiseXor","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:7Atomics13ManagedAtomicCA2A0C7IntegerRzrlE5Valuexmfp"},{"kind":"text","text":", "},{"text":"ordering","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics13ManagedAtomicCA2A0C7IntegerRzrlE5Valuexmfp","text":"Value"}],"role":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"AtomicInteger"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"abstract":[{"text":"Perform an atomic bitwise XOR operation and return the original value, applying","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the specified memory ordering."}],"type":"topic","title":"loadThenBitwiseXor(with:ordering:)"},"doc://swift-atomics.Atomics/documentation/Atomics/UnsafeAtomicLazyReference":{"type":"topic","abstract":[{"text":"An unsafe reference type holding a lazily initializable atomic","type":"text"},{"type":"text","text":" "},{"type":"text","text":"strong reference, requiring manual memory management of the"},{"text":" ","type":"text"},{"text":"underlying storage representation.","type":"text"}],"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomicLazyReference","navigatorTitle":[{"text":"UnsafeAtomicLazyReference","kind":"identifier"}],"kind":"symbol","title":"UnsafeAtomicLazyReference","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"UnsafeAtomicLazyReference","kind":"identifier"}],"url":"\/documentation\/atomics\/unsafeatomiclazyreference"}}}