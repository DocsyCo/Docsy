{"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"title":"atomicWeakCompareExchange(expected:desired:at:successOrdering:failureOrdering:)","modules":[{"name":"Atomics"}],"roleHeading":"Type Method","extendedModule":"Atomics","role":"symbol","externalID":"s:7Atomics10DoubleWordV20AtomicRepresentationV25atomicWeakCompareExchange8expected7desired2at15successOrdering07failureN0Sb9exchanged_AC8originaltAC_ACSpyAEGAA0d6UpdateN0VAA0d4LoadN0VtFZ","symbolKind":"method","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"atomicWeakCompareExchange","kind":"identifier"},{"kind":"text","text":"("},{"text":"expected","kind":"externalParam"},{"kind":"text","text":": "},{"text":"DoubleWord","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics10DoubleWordV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"desired"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Atomics10DoubleWordV","text":"DoubleWord","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"at","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UnsafeMutablePointer","kind":"typeIdentifier","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<`Self`"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"successOrdering"},{"kind":"text","text":": "},{"text":"AtomicUpdateOrdering","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"failureOrdering"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Atomics18AtomicLoadOrderingV","kind":"typeIdentifier","text":"AtomicLoadOrdering"},{"text":") -> (exchanged","kind":"text"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":", original"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Atomics10DoubleWordV","kind":"typeIdentifier","text":"DoubleWord"},{"kind":"text","text":")"}]},"identifier":{"url":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/DoubleWord\/AtomicRepresentation\/atomicWeakCompareExchange(expected:desired:at:successOrdering:failureOrdering:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Perform an atomic weak compare and exchange operation on the value"},{"type":"text","text":" "},{"text":"referenced by ","type":"text"},{"type":"codeVoice","code":"pointer"},{"text":", applying the specified success\/failure memory","type":"text"},{"type":"text","text":" "},{"text":"orderings. This compare-exchange variant is allowed to spuriously fail; it","type":"text"},{"type":"text","text":" "},{"text":"is designed to be called in a loop until it indicates a successful","type":"text"},{"type":"text","text":" "},{"text":"exchange has happened.","type":"text"}],"sections":[],"hierarchy":{"paths":[["doc:\/\/swift-atomics.Atomics\/documentation\/Atomics","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/DoubleWord","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/DoubleWord\/AtomicValue-Implementations","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/DoubleWord\/AtomicRepresentation","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/DoubleWord\/AtomicRepresentation\/AtomicStorage-Implementations"]]},"variants":[{"paths":["\/documentation\/atomics\/doubleword\/atomicrepresentation\/atomicweakcompareexchange(expected:desired:at:successordering:failureordering:)"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"atomicWeakCompareExchange"},{"text":"(","kind":"text"},{"text":"expected","kind":"externalParam"},{"kind":"text","text":": "},{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/DoubleWord","text":"DoubleWord","preciseIdentifier":"s:7Atomics10DoubleWordV","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"desired"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Atomics10DoubleWordV","text":"DoubleWord","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/DoubleWord","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"at"},{"kind":"text","text":" "},{"text":"pointer","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sp","text":"UnsafeMutablePointer","kind":"typeIdentifier"},{"kind":"text","text":"<`Self`"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"successOrdering"},{"kind":"text","text":": "},{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicUpdateOrdering","text":"AtomicUpdateOrdering","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"failureOrdering"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicLoadOrdering","text":"AtomicLoadOrdering","preciseIdentifier":"s:7Atomics18AtomicLoadOrderingV","kind":"typeIdentifier"},{"kind":"text","text":") -> (exchanged"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"kind":"text","text":", original"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Atomics10DoubleWordV","text":"DoubleWord","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/DoubleWord","kind":"typeIdentifier"},{"text":")","kind":"text"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The expected current value."}]}],"name":"expected"},{"name":"desired","content":[{"inlineContent":[{"type":"text","text":"The desired new value."}],"type":"paragraph"}]},{"name":"pointer","content":[{"inlineContent":[{"type":"text","text":"A memory location previously initialized with a value"},{"text":" ","type":"text"},{"text":"returned by ","type":"text"},{"code":"prepareAtomicRepresentation(for:)","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}]},{"name":"successOrdering","content":[{"type":"paragraph","inlineContent":[{"text":"The memory ordering to apply if this","type":"text"},{"type":"text","text":" "},{"text":"operation performs the exchange.","type":"text"}]}]},{"name":"failureOrdering","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The memory ordering to apply on this"},{"text":" ","type":"text"},{"type":"text","text":"operation does not perform the exchange."}]}]}]},{"content":[{"level":2,"type":"heading","text":"Return Value","anchor":"return-value"},{"inlineContent":[{"text":"A tuple ","type":"text"},{"code":"(exchanged, original)","type":"codeVoice"},{"type":"text","text":", where "},{"type":"codeVoice","code":"exchanged"},{"type":"text","text":" is true if"},{"type":"text","text":" "},{"text":"the exchange was successful, and ","type":"text"},{"type":"codeVoice","code":"original"},{"type":"text","text":" is the original value."}],"type":"paragraph"}],"kind":"content"},{"content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"This operation performs the following algorithm as a single atomic"},{"text":" ","type":"text"},{"type":"text","text":"transaction:"}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["atomic(self) { currentValue in","  let original = currentValue","  guard original == expected else { return (false, original) }","  currentValue = desired","  return (true, original)","}"]},{"inlineContent":[{"text":"(In this weak form, transient conditions may cause the ","type":"text"},{"type":"codeVoice","code":"original == expected"},{"type":"text","text":" check to sometimes return false when the two values are in fact"},{"type":"text","text":" "},{"text":"the same.)","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"successOrdering"},{"text":" argument specifies the memory ordering to use when the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"operation manages to update the current value, while "},{"type":"codeVoice","code":"failureOrdering"},{"text":" ","type":"text"},{"type":"text","text":"will be used when the operation leaves the value intact."}]}],"kind":"content"}],"kind":"symbol","references":{"doc://swift-atomics.Atomics/documentation/Atomics/AtomicUpdateOrdering":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomicUpdateOrdering"}],"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicUpdateOrdering","url":"\/documentation\/atomics\/atomicupdateordering","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AtomicUpdateOrdering"}],"type":"topic","abstract":[{"text":"Specifies the memory ordering semantics of an atomic read-modify-write","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"operation."}],"title":"AtomicUpdateOrdering"},"doc://swift-atomics.Atomics/documentation/Atomics/DoubleWord":{"type":"topic","title":"DoubleWord","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/DoubleWord","navigatorTitle":[{"text":"DoubleWord","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"DoubleWord","kind":"identifier"}],"abstract":[],"role":"symbol","url":"\/documentation\/atomics\/doubleword","kind":"symbol"},"doc://swift-atomics.Atomics/documentation/Atomics/DoubleWord/AtomicValue-Implementations":{"url":"\/documentation\/atomics\/doubleword\/atomicvalue-implementations","title":"AtomicValue Implementations","abstract":[],"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/DoubleWord\/AtomicValue-Implementations","kind":"article","role":"collectionGroup","type":"topic"},"doc://swift-atomics.Atomics/documentation/Atomics/DoubleWord/AtomicRepresentation":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AtomicRepresentation","kind":"identifier"}],"url":"\/documentation\/atomics\/doubleword\/atomicrepresentation","title":"DoubleWord.AtomicRepresentation","abstract":[{"type":"text","text":"The atomic storage representation for this value."}],"navigatorTitle":[{"kind":"identifier","text":"AtomicRepresentation"}],"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/DoubleWord\/AtomicRepresentation","kind":"symbol","type":"topic"},"doc://swift-atomics.Atomics/documentation/Atomics/DoubleWord/AtomicRepresentation/AtomicStorage-Implementations":{"role":"collectionGroup","kind":"article","url":"\/documentation\/atomics\/doubleword\/atomicrepresentation\/atomicstorage-implementations","title":"AtomicStorage Implementations","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/DoubleWord\/AtomicRepresentation\/AtomicStorage-Implementations","type":"topic","abstract":[]},"doc://swift-atomics.Atomics/documentation/Atomics/AtomicLoadOrdering":{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicLoadOrdering","url":"\/documentation\/atomics\/atomicloadordering","abstract":[{"text":"Specifies the memory ordering semantics of an atomic load operation.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AtomicLoadOrdering","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"AtomicLoadOrdering"}],"title":"AtomicLoadOrdering","kind":"symbol","role":"symbol","type":"topic"},"doc://swift-atomics.Atomics/documentation/Atomics/DoubleWord/AtomicRepresentation/atomicWeakCompareExchange(expected:desired:at:successOrdering:failureOrdering:)":{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/DoubleWord\/AtomicRepresentation\/atomicWeakCompareExchange(expected:desired:at:successOrdering:failureOrdering:)","role":"symbol","title":"atomicWeakCompareExchange(expected:desired:at:successOrdering:failureOrdering:)","abstract":[{"type":"text","text":"Perform an atomic weak compare and exchange operation on the value"},{"text":" ","type":"text"},{"type":"text","text":"referenced by "},{"type":"codeVoice","code":"pointer"},{"text":", applying the specified success\/failure memory","type":"text"},{"type":"text","text":" "},{"type":"text","text":"orderings. This compare-exchange variant is allowed to spuriously fail; it"},{"text":" ","type":"text"},{"text":"is designed to be called in a loop until it indicates a successful","type":"text"},{"text":" ","type":"text"},{"text":"exchange has happened.","type":"text"}],"type":"topic","kind":"symbol","url":"\/documentation\/atomics\/doubleword\/atomicrepresentation\/atomicweakcompareexchange(expected:desired:at:successordering:failureordering:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"atomicWeakCompareExchange"},{"kind":"text","text":"("},{"text":"expected","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"DoubleWord","preciseIdentifier":"s:7Atomics10DoubleWordV"},{"text":", ","kind":"text"},{"text":"desired","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"DoubleWord","preciseIdentifier":"s:7Atomics10DoubleWordV"},{"text":", ","kind":"text"},{"text":"at","kind":"externalParam"},{"kind":"text","text":": "},{"text":"UnsafeMutablePointer","kind":"typeIdentifier","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<`Self`"},{"text":">, ","kind":"text"},{"text":"successOrdering","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"failureOrdering"},{"text":": ","kind":"text"},{"text":"AtomicLoadOrdering","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics18AtomicLoadOrderingV"},{"kind":"text","text":") -> (exchanged"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":", original","kind":"text"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics10DoubleWordV","text":"DoubleWord"},{"text":")","kind":"text"}]},"doc://swift-atomics.Atomics/documentation/Atomics":{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics","url":"\/documentation\/atomics","abstract":[{"type":"text","text":"An atomics library for Swift."}],"title":"Atomics","kind":"symbol","role":"collection","type":"topic"}}}