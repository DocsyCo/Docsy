{"metadata":{"role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"ManagedAtomicLazyReference","kind":"identifier"}],"symbolKind":"class","modules":[{"name":"Atomics"}],"externalID":"s:7Atomics26ManagedAtomicLazyReferenceC","navigatorTitle":[{"text":"ManagedAtomicLazyReference","kind":"identifier"}],"title":"ManagedAtomicLazyReference","roleHeading":"Class"},"abstract":[{"text":"A reference type holding a lazily initializable atomic","type":"text"},{"type":"text","text":" "},{"type":"text","text":"strong reference, with automatic memory management."}],"hierarchy":{"paths":[["doc:\/\/swift-atomics.Atomics\/documentation\/Atomics"]]},"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/swift-atomics.Atomics\/s8SendableP"],"type":"conformsTo","title":"Conforms To"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ManagedAtomicLazyReference","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Instance"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Instance"},{"text":" : AnyObject","kind":"text"}],"languages":["swift"]}]},{"content":[{"type":"heading","level":2,"text":"Overview","anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"These values can be set (initialized) exactly once, but read many","type":"text"},{"text":" ","type":"text"},{"text":"times.","type":"text"}]}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/ManagedAtomicLazyReference"},"kind":"symbol","sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"topicSections":[{"title":"Related Types","anchor":"Related-Types","identifiers":["doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/ManagedAtomicLazyReference\/Value"]},{"identifiers":["doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/ManagedAtomicLazyReference\/init()"],"anchor":"Initializers","title":"Initializers"},{"anchor":"Atomic-Operations","title":"Atomic Operations","identifiers":["doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/ManagedAtomicLazyReference\/load()","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/ManagedAtomicLazyReference\/storeIfNilThenLoad(_:)"]}],"seeAlsoSections":[{"generated":true,"anchor":"Atomic-Container-Types","identifiers":["doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/ManagedAtomic","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomic","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomicLazyReference"],"title":"Atomic Container Types"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atomics\/managedatomiclazyreference"]}],"references":{"doc://swift-atomics.Atomics/documentation/Atomics/ManagedAtomicLazyReference/storeIfNilThenLoad(_:)":{"title":"storeIfNilThenLoad(_:)","type":"topic","url":"\/documentation\/atomics\/managedatomiclazyreference\/storeifnilthenload(_:)","abstract":[{"text":"Atomically initializes this reference if its current value is nil, then","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"returns the initialized value. If this reference is already initialized,"},{"type":"text","text":" "},{"type":"text","text":"then "},{"code":"storeIfNilThenLoad(_:)","type":"codeVoice"},{"text":" discards its supplied argument and returns","type":"text"},{"type":"text","text":" "},{"text":"the current value without updating it.","type":"text"}],"role":"symbol","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/ManagedAtomicLazyReference\/storeIfNilThenLoad(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"storeIfNilThenLoad"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics26ManagedAtomicLazyReferenceC8Instancexmfp","text":"Instance"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Atomics26ManagedAtomicLazyReferenceC8Instancexmfp","kind":"typeIdentifier","text":"Instance"}],"kind":"symbol"},"doc://swift-atomics.Atomics/documentation/Atomics/UnsafeAtomic":{"url":"\/documentation\/atomics\/unsafeatomic","title":"UnsafeAtomic","navigatorTitle":[{"kind":"identifier","text":"UnsafeAtomic"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UnsafeAtomic"}],"abstract":[{"text":"An unsafe reference type holding an atomic value, requiring manual memory","type":"text"},{"type":"text","text":" "},{"text":"management of the underlying storage representation.","type":"text"}],"kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomic"},"doc://swift-atomics.Atomics/documentation/Atomics/ManagedAtomicLazyReference/init()":{"url":"\/documentation\/atomics\/managedatomiclazyreference\/init()","role":"symbol","kind":"symbol","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/ManagedAtomicLazyReference\/init()","abstract":[{"type":"text","text":"Initializes a new managed atomic lazy reference with a nil value."}],"title":"init()","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}]},"doc://swift-atomics.Atomics/documentation/Atomics/ManagedAtomicLazyReference/Value":{"navigatorTitle":[{"kind":"identifier","text":"Value"}],"abstract":[{"text":"The value logically stored in an atomic lazy reference value.","type":"text"}],"url":"\/documentation\/atomics\/managedatomiclazyreference\/value","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/ManagedAtomicLazyReference\/Value","type":"topic","kind":"symbol","title":"ManagedAtomicLazyReference.Value","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"text":"Value","kind":"identifier"}],"role":"symbol"},"doc://swift-atomics.Atomics/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/swift-atomics.Atomics\/s8SendableP","title":"Swift.Sendable"},"doc://swift-atomics.Atomics/documentation/Atomics/ManagedAtomic":{"abstract":[{"type":"text","text":"A reference type holding an atomic value, with automatic memory management."}],"title":"ManagedAtomic","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/ManagedAtomic","url":"\/documentation\/atomics\/managedatomic","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"ManagedAtomic","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"ManagedAtomic","kind":"identifier"}],"role":"symbol","type":"topic"},"doc://swift-atomics.Atomics/documentation/Atomics/UnsafeAtomicLazyReference":{"type":"topic","abstract":[{"text":"An unsafe reference type holding a lazily initializable atomic","type":"text"},{"type":"text","text":" "},{"type":"text","text":"strong reference, requiring manual memory management of the"},{"text":" ","type":"text"},{"text":"underlying storage representation.","type":"text"}],"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomicLazyReference","navigatorTitle":[{"text":"UnsafeAtomicLazyReference","kind":"identifier"}],"kind":"symbol","title":"UnsafeAtomicLazyReference","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"UnsafeAtomicLazyReference","kind":"identifier"}],"url":"\/documentation\/atomics\/unsafeatomiclazyreference"},"doc://swift-atomics.Atomics/documentation/Atomics/ManagedAtomicLazyReference/load()":{"type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"load","kind":"identifier"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:7Atomics26ManagedAtomicLazyReferenceC8Instancexmfp","text":"Instance","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"title":"load()","kind":"symbol","url":"\/documentation\/atomics\/managedatomiclazyreference\/load()","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/ManagedAtomicLazyReference\/load()","abstract":[{"type":"text","text":"Atomically loads and returns the current value of this reference."}]},"doc://swift-atomics.Atomics/documentation/Atomics/ManagedAtomicLazyReference":{"role":"symbol","title":"ManagedAtomicLazyReference","abstract":[{"text":"A reference type holding a lazily initializable atomic","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"strong reference, with automatic memory management."}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ManagedAtomicLazyReference","kind":"identifier"}],"kind":"symbol","type":"topic","url":"\/documentation\/atomics\/managedatomiclazyreference","navigatorTitle":[{"kind":"identifier","text":"ManagedAtomicLazyReference"}],"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/ManagedAtomicLazyReference"},"doc://swift-atomics.Atomics/documentation/Atomics":{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics","url":"\/documentation\/atomics","abstract":[{"type":"text","text":"An atomics library for Swift."}],"title":"Atomics","kind":"symbol","role":"collection","type":"topic"}}}