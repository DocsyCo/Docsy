{"identifier":{"url":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicStorage\/atomicWeakCompareExchange(expected:desired:at:ordering:)-2et7j","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atomics\/atomicstorage\/atomicweakcompareexchange(expected:desired:at:ordering:)-2et7j"]}],"kind":"symbol","sections":[],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"atomicWeakCompareExchange"},{"kind":"text","text":"("},{"kind":"externalParam","text":"expected"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics13AtomicStorageP5ValueQa","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicStorage\/Value","text":"Value"},{"text":", ","kind":"text"},{"text":"desired","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Atomics13AtomicStorageP5ValueQa","kind":"typeIdentifier","text":"Value","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicStorage\/Value"},{"text":", ","kind":"text"},{"text":"at","kind":"externalParam"},{"kind":"text","text":" "},{"text":"pointer","kind":"internalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sp","text":"UnsafeMutablePointer","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"ordering"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering","kind":"typeIdentifier","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicUpdateOrdering"},{"text":") -> (exchanged","kind":"text"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":", original","kind":"text"},{"text":": ","kind":"text"},{"text":"Value","preciseIdentifier":"s:7Atomics13AtomicStorageP5ValueQa","kind":"typeIdentifier","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicStorage\/Value"},{"text":")","kind":"text"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"expected","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The expected current value."}]}]},{"name":"desired","content":[{"type":"paragraph","inlineContent":[{"text":"The desired new value.","type":"text"}]}]},{"name":"pointer","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A memory location previously initialized with a value"},{"type":"text","text":" "},{"text":"returned by ","type":"text"},{"code":"prepareAtomicRepresentation(for:)","type":"codeVoice"},{"type":"text","text":"."}]}]},{"name":"ordering","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The memory ordering to apply on this operation."}]}]}]},{"content":[{"anchor":"return-value","type":"heading","level":2,"text":"Return Value"},{"type":"paragraph","inlineContent":[{"text":"A tuple ","type":"text"},{"type":"codeVoice","code":"(exchanged, original)"},{"type":"text","text":", where "},{"code":"exchanged","type":"codeVoice"},{"text":" is true if","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the exchange was successful, and "},{"type":"codeVoice","code":"original"},{"type":"text","text":" is the original value."}]}],"kind":"content"},{"kind":"content","content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"This operation performs the following algorithm as a single atomic"},{"type":"text","text":" "},{"type":"text","text":"transaction:"}],"type":"paragraph"},{"code":["atomic(self) { currentValue in","  let original = currentValue","  guard original == expected else { return (false, original) }","  currentValue = desired","  return (true, original)","}"],"type":"codeListing","syntax":null},{"inlineContent":[{"type":"text","text":"(In this weak form, transient conditions may cause the "},{"code":"original == expected","type":"codeVoice"},{"text":" check to sometimes return false when the two values are in fact","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the same.)"}],"type":"paragraph"}]}],"abstract":[{"type":"text","text":"Perform an atomic weak compare and exchange operation on the value"},{"type":"text","text":" "},{"type":"text","text":"referenced by "},{"code":"pointer","type":"codeVoice"},{"type":"text","text":", applying the specified memory orderings."},{"text":" ","type":"text"},{"type":"text","text":"This compare-exchange variant is allowed to spuriously fail; it"},{"text":" ","type":"text"},{"text":"is designed to be called in a loop until it indicates a successful","type":"text"},{"type":"text","text":" "},{"text":"exchange has happened.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/swift-atomics.Atomics\/documentation\/Atomics","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicStorage","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicStorage\/atomicWeakCompareExchange(expected:desired:at:ordering:)-55229"]]},"metadata":{"role":"symbol","roleHeading":"Type Method","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"atomicWeakCompareExchange","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"expected"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:7Atomics13AtomicStorageP5ValueQa"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"desired"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Atomics13AtomicStorageP5ValueQa","kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"at"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sp","text":"UnsafeMutablePointer"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"ordering"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","kind":"typeIdentifier","text":"AtomicUpdateOrdering"},{"text":") -> (exchanged","kind":"text"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"kind":"text","text":", original"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Atomics13AtomicStorageP5ValueQa","text":"Value","kind":"typeIdentifier"},{"kind":"text","text":")"}],"extendedModule":"Atomics","externalID":"s:7Atomics13AtomicStoragePAAE25atomicWeakCompareExchange8expected7desired2at8orderingSb9exchanged_5ValueQz8originaltAK_AKnSpyxGAA0B14UpdateOrderingVtFZ","title":"atomicWeakCompareExchange(expected:desired:at:ordering:)","symbolKind":"method","modules":[{"name":"Atomics"}]},"references":{"doc://swift-atomics.Atomics/documentation/Atomics/AtomicStorage/atomicWeakCompareExchange(expected:desired:at:ordering:)-2et7j":{"type":"topic","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"atomicWeakCompareExchange","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"expected"},{"text":": ","kind":"text"},{"text":"Value","preciseIdentifier":"s:7Atomics13AtomicStorageP5ValueQa","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"desired"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Atomics13AtomicStorageP5ValueQa","text":"Value","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"at"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sp","text":"UnsafeMutablePointer","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"ordering"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering","kind":"typeIdentifier"},{"text":") -> (exchanged","kind":"text"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"kind":"text","text":", original"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics13AtomicStorageP5ValueQa","text":"Value"},{"kind":"text","text":")"}],"title":"atomicWeakCompareExchange(expected:desired:at:ordering:)","kind":"symbol","role":"symbol","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicStorage\/atomicWeakCompareExchange(expected:desired:at:ordering:)-2et7j","abstract":[{"type":"text","text":"Perform an atomic weak compare and exchange operation on the value"},{"text":" ","type":"text"},{"type":"text","text":"referenced by "},{"type":"codeVoice","code":"pointer"},{"text":", applying the specified memory orderings.","type":"text"},{"text":" ","type":"text"},{"text":"This compare-exchange variant is allowed to spuriously fail; it","type":"text"},{"type":"text","text":" "},{"type":"text","text":"is designed to be called in a loop until it indicates a successful"},{"type":"text","text":" "},{"text":"exchange has happened.","type":"text"}],"url":"\/documentation\/atomics\/atomicstorage\/atomicweakcompareexchange(expected:desired:at:ordering:)-2et7j"},"doc://swift-atomics.Atomics/documentation/Atomics/AtomicUpdateOrdering":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomicUpdateOrdering"}],"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicUpdateOrdering","url":"\/documentation\/atomics\/atomicupdateordering","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AtomicUpdateOrdering"}],"type":"topic","abstract":[{"text":"Specifies the memory ordering semantics of an atomic read-modify-write","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"operation."}],"title":"AtomicUpdateOrdering"},"doc://swift-atomics.Atomics/documentation/Atomics/AtomicStorage":{"role":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AtomicStorage","kind":"identifier"}],"abstract":[{"type":"text","text":"The storage representation for an atomic value, providing pointer-based"},{"text":" ","type":"text"},{"text":"atomic operations. This is a low-level implementation detail of atomic","type":"text"},{"type":"text","text":" "},{"type":"text","text":"types; instead of directly handling conforming types, it is usually better"},{"text":" ","type":"text"},{"text":"to use the ","type":"text"},{"code":"UnsafeAtomic","type":"codeVoice"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"ManagedAtomic"},{"text":" generics – these provide more","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"convenient and safer interfaces while also ensuring that the storage is"},{"type":"text","text":" "},{"text":"correctly constructed and destroyed.","type":"text"}],"url":"\/documentation\/atomics\/atomicstorage","kind":"symbol","navigatorTitle":[{"text":"AtomicStorage","kind":"identifier"}],"title":"AtomicStorage","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicStorage"},"doc://swift-atomics.Atomics/documentation/Atomics/AtomicStorage/Value":{"type":"topic","abstract":[{"text":"The type whose values this storage representation is representing.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"associatedtype"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Value"}],"required":true,"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicStorage\/Value","kind":"symbol","url":"\/documentation\/atomics\/atomicstorage\/value","title":"Value"},"doc://swift-atomics.Atomics/documentation/Atomics":{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics","url":"\/documentation\/atomics","abstract":[{"type":"text","text":"An atomics library for Swift."}],"title":"Atomics","kind":"symbol","role":"collection","type":"topic"},"doc://swift-atomics.Atomics/documentation/Atomics/AtomicStorage/atomicWeakCompareExchange(expected:desired:at:ordering:)-55229":{"role":"symbol","defaultImplementations":1,"type":"topic","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"atomicWeakCompareExchange"},{"kind":"text","text":"("},{"text":"expected","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Value","preciseIdentifier":"s:7Atomics13AtomicStorageP5ValueQa","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"desired","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:7Atomics13AtomicStorageP5ValueQa"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"at"},{"kind":"text","text":": "},{"text":"UnsafeMutablePointer","kind":"typeIdentifier","preciseIdentifier":"s:Sp"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"text":"ordering","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"text":") -> (exchanged","kind":"text"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":", original","kind":"text"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:7Atomics13AtomicStorageP5ValueQa"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"Perform an atomic weak compare and exchange operation on the value"},{"type":"text","text":" "},{"text":"referenced by ","type":"text"},{"type":"codeVoice","code":"pointer"},{"text":", applying the specified memory orderings.","type":"text"},{"type":"text","text":" "},{"text":"This compare-exchange variant is allowed to spuriously fail; it","type":"text"},{"type":"text","text":" "},{"text":"is designed to be called in a loop until it indicates a successful","type":"text"},{"type":"text","text":" "},{"type":"text","text":"exchange has happened."}],"url":"\/documentation\/atomics\/atomicstorage\/atomicweakcompareexchange(expected:desired:at:ordering:)-55229","kind":"symbol","title":"atomicWeakCompareExchange(expected:desired:at:ordering:)","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicStorage\/atomicWeakCompareExchange(expected:desired:at:ordering:)-55229","required":true}}}