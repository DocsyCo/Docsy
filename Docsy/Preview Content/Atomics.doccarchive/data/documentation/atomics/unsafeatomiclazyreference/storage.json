{"sections":[],"variants":[{"paths":["\/documentation\/atomics\/unsafeatomiclazyreference\/storage"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/swift-atomics.Atomics\/documentation\/Atomics","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomicLazyReference"]]},"metadata":{"title":"UnsafeAtomicLazyReference.Storage","role":"symbol","extendedModule":"Atomics","externalID":"s:7Atomics25UnsafeAtomicLazyReferenceV7StorageV","roleHeading":"Structure","symbolKind":"struct","navigatorTitle":[{"kind":"identifier","text":"Storage"}],"modules":[{"name":"Atomics"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Storage"}]},"identifier":{"url":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomicLazyReference\/Storage","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","abstract":[{"text":"The storage representation for an atomic lazy reference value.","type":"text"}],"topicSections":[{"anchor":"Initializers","title":"Initializers","generated":true,"identifiers":["doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomicLazyReference\/Storage\/init()"]},{"title":"Instance Methods","anchor":"Instance-Methods","generated":true,"identifiers":["doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomicLazyReference\/Storage\/dispose()"]}],"relationshipsSections":[{"type":"conformsTo","identifiers":["doc:\/\/swift-atomics.Atomics\/s15BitwiseCopyableP","doc:\/\/swift-atomics.Atomics\/s8SendableP"],"title":"Conforms To","kind":"relationships"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"@frozen","kind":"attribute"},{"text":" ","kind":"text"},{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Storage","kind":"identifier"}],"languages":["swift"],"platforms":["macOS"]}]}],"references":{"doc://swift-atomics.Atomics/s15BitwiseCopyableP":{"title":"Swift.BitwiseCopyable","type":"unresolvable","identifier":"doc:\/\/swift-atomics.Atomics\/s15BitwiseCopyableP"},"doc://swift-atomics.Atomics/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/swift-atomics.Atomics\/s8SendableP"},"doc://swift-atomics.Atomics/documentation/Atomics/UnsafeAtomicLazyReference/Storage/dispose()":{"url":"\/documentation\/atomics\/unsafeatomiclazyreference\/storage\/dispose()","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"dispose"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:7Atomics25UnsafeAtomicLazyReferenceV5Valuea","text":"Value","kind":"typeIdentifier"}],"kind":"symbol","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomicLazyReference\/Storage\/dispose()","abstract":[{"type":"text","text":"Prepare this atomic storage value for deinitialization, extracting the"},{"text":" ","type":"text"},{"type":"text","text":"logical value it represents. This invalidates this atomic storage; you"},{"type":"text","text":" "},{"text":"must not perform any operations on it after this call (except for","type":"text"},{"text":" ","type":"text"},{"text":"deinitialization).","type":"text"}],"title":"dispose()"},"doc://swift-atomics.Atomics/documentation/Atomics/UnsafeAtomicLazyReference":{"type":"topic","abstract":[{"text":"An unsafe reference type holding a lazily initializable atomic","type":"text"},{"type":"text","text":" "},{"type":"text","text":"strong reference, requiring manual memory management of the"},{"text":" ","type":"text"},{"text":"underlying storage representation.","type":"text"}],"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomicLazyReference","navigatorTitle":[{"text":"UnsafeAtomicLazyReference","kind":"identifier"}],"kind":"symbol","title":"UnsafeAtomicLazyReference","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"UnsafeAtomicLazyReference","kind":"identifier"}],"url":"\/documentation\/atomics\/unsafeatomiclazyreference"},"doc://swift-atomics.Atomics/documentation/Atomics/UnsafeAtomicLazyReference/Storage/init()":{"title":"init()","url":"\/documentation\/atomics\/unsafeatomiclazyreference\/storage\/init()","kind":"symbol","role":"symbol","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomicLazyReference\/Storage\/init()","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"()"}],"abstract":[{"text":"Initialize a new atomic lazy reference storage value holding ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"}],"type":"topic"},"doc://swift-atomics.Atomics/documentation/Atomics":{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics","url":"\/documentation\/atomics","abstract":[{"type":"text","text":"An atomics library for Swift."}],"title":"Atomics","kind":"symbol","role":"collection","type":"topic"},"doc://swift-atomics.Atomics/documentation/Atomics/UnsafeAtomicLazyReference/Storage":{"type":"topic","title":"UnsafeAtomicLazyReference.Storage","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomicLazyReference\/Storage","role":"symbol","abstract":[{"text":"The storage representation for an atomic lazy reference value.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"Storage","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Storage","kind":"identifier"}],"url":"\/documentation\/atomics\/unsafeatomiclazyreference\/storage"}}}