{"sections":[],"hierarchy":{"paths":[["doc:\/\/swift-atomics.Atomics\/documentation\/Atomics","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomicLazyReference"]]},"seeAlsoSections":[{"generated":true,"anchor":"Atomic-Operations","title":"Atomic Operations","identifiers":["doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomicLazyReference\/load()"]}],"kind":"symbol","schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"type":"text","text":"Atomically initializes this reference if its current value is nil, then"},{"type":"text","text":" "},{"type":"text","text":"returns the initialized value. If this reference is already initialized,"},{"type":"text","text":" "},{"type":"text","text":"then "},{"type":"codeVoice","code":"storeIfNilThenLoad(_:)"},{"type":"text","text":" discards its supplied argument and returns"},{"type":"text","text":" "},{"text":"the current value without updating it.","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomicLazyReference\/storeIfNilThenLoad(_:)"},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"storeIfNilThenLoad"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"desired","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Instance","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics25UnsafeAtomicLazyReferenceV8Instancexmfp"},{"text":") -> ","kind":"text"},{"text":"Instance","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics25UnsafeAtomicLazyReferenceV8Instancexmfp"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"inlineContent":[{"text":"The following example demonstrates how this can be used to implement a","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"thread-safe lazily initialized reference:"}],"type":"paragraph"},{"syntax":null,"code":["class Image {","  var _histogram: UnsafeAtomicLazyReference<Histogram> = .init()","","  \/\/ This is safe to call concurrently from multiple threads.","  var atomicLazyHistogram: Histogram {","    if let histogram = _histogram.load() { return histogram }","    \/\/ Note that code here may run concurrently on","    \/\/ multiple threads, but only one of them will get to","    \/\/ succeed setting the reference.","    let histogram = ...","    return _histogram.storeIfNilThenLoad(histogram)","}"],"type":"codeListing"},{"inlineContent":[{"text":"This operation uses acquiring-and-releasing memory ordering.","type":"text"}],"type":"paragraph"}]}],"variants":[{"paths":["\/documentation\/atomics\/unsafeatomiclazyreference\/storeifnilthenload(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"storeIfNilThenLoad","kind":"identifier"},{"kind":"text","text":"("},{"text":"Instance","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics25UnsafeAtomicLazyReferenceV8Instancexmfp"},{"kind":"text","text":") -> "},{"text":"Instance","preciseIdentifier":"s:7Atomics25UnsafeAtomicLazyReferenceV8Instancexmfp","kind":"typeIdentifier"}],"title":"storeIfNilThenLoad(_:)","modules":[{"name":"Atomics"}],"roleHeading":"Instance Method","symbolKind":"method","extendedModule":"Atomics","externalID":"s:7Atomics25UnsafeAtomicLazyReferenceV18storeIfNilThenLoadyxxnF","role":"symbol"},"references":{"doc://swift-atomics.Atomics/documentation/Atomics/UnsafeAtomicLazyReference/load()":{"kind":"symbol","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomicLazyReference\/load()","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"load","kind":"identifier"},{"kind":"text","text":"() -> "},{"text":"Instance","preciseIdentifier":"s:7Atomics25UnsafeAtomicLazyReferenceV8Instancexmfp","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"role":"symbol","title":"load()","url":"\/documentation\/atomics\/unsafeatomiclazyreference\/load()","abstract":[{"type":"text","text":"Atomically loads and returns the current value of this reference."}]},"doc://swift-atomics.Atomics/documentation/Atomics/UnsafeAtomicLazyReference/storeIfNilThenLoad(_:)":{"url":"\/documentation\/atomics\/unsafeatomiclazyreference\/storeifnilthenload(_:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"storeIfNilThenLoad","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Instance","preciseIdentifier":"s:7Atomics25UnsafeAtomicLazyReferenceV8Instancexmfp"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7Atomics25UnsafeAtomicLazyReferenceV8Instancexmfp","text":"Instance","kind":"typeIdentifier"}],"kind":"symbol","abstract":[{"type":"text","text":"Atomically initializes this reference if its current value is nil, then"},{"text":" ","type":"text"},{"text":"returns the initialized value. If this reference is already initialized,","type":"text"},{"text":" ","type":"text"},{"text":"then ","type":"text"},{"code":"storeIfNilThenLoad(_:)","type":"codeVoice"},{"text":" discards its supplied argument and returns","type":"text"},{"type":"text","text":" "},{"text":"the current value without updating it.","type":"text"}],"role":"symbol","title":"storeIfNilThenLoad(_:)","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomicLazyReference\/storeIfNilThenLoad(_:)"},"doc://swift-atomics.Atomics/documentation/Atomics/UnsafeAtomicLazyReference":{"type":"topic","abstract":[{"text":"An unsafe reference type holding a lazily initializable atomic","type":"text"},{"type":"text","text":" "},{"type":"text","text":"strong reference, requiring manual memory management of the"},{"text":" ","type":"text"},{"text":"underlying storage representation.","type":"text"}],"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomicLazyReference","navigatorTitle":[{"text":"UnsafeAtomicLazyReference","kind":"identifier"}],"kind":"symbol","title":"UnsafeAtomicLazyReference","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"UnsafeAtomicLazyReference","kind":"identifier"}],"url":"\/documentation\/atomics\/unsafeatomiclazyreference"},"doc://swift-atomics.Atomics/documentation/Atomics":{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics","url":"\/documentation\/atomics","abstract":[{"type":"text","text":"An atomics library for Swift."}],"title":"Atomics","kind":"symbol","role":"collection","type":"topic"}}}