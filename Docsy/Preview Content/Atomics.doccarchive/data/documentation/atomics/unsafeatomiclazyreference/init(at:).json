{"identifier":{"url":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomicLazyReference\/init(at:)","interfaceLanguage":"swift"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/swift-atomics.Atomics\/documentation\/Atomics","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomicLazyReference"]]},"abstract":[{"text":"Initialize an unsafe atomic lazy reference that uses the supplied memory","type":"text"},{"text":" ","type":"text"},{"text":"location for storage. The storage location must already be initialized to","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"represent a valid atomic value."}],"variants":[{"paths":["\/documentation\/atomics\/unsafeatomiclazyreference\/init(at:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"externalID":"s:7Atomics25UnsafeAtomicLazyReferenceV2atACyxGSpyAC7StorageVyx_GG_tcfc","symbolKind":"init","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"at"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sp","text":"UnsafeMutablePointer","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Storage","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics25UnsafeAtomicLazyReferenceV7StorageV"},{"text":">)","kind":"text"}],"modules":[{"name":"Atomics"}],"role":"symbol","title":"init(at:)","roleHeading":"Initializer"},"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"at","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"pointer"},{"text":": ","kind":"text"},{"text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Storage","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomicLazyReference\/Storage","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics25UnsafeAtomicLazyReferenceV7StorageV"},{"text":">)","kind":"text"}],"platforms":["macOS"]}]},{"content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"At the end of the lifetime of the atomic value, you must manually ensure","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"that the storage location is correctly "},{"code":"dispose()","type":"codeVoice"},{"type":"text","text":"d, deinitalized and"},{"text":" ","type":"text"},{"type":"text","text":"deallocated."}]},{"type":"paragraph","inlineContent":[{"text":"Note: This is not an atomic operation.","type":"text"}]}],"kind":"content"}],"references":{"doc://swift-atomics.Atomics/documentation/Atomics":{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics","url":"\/documentation\/atomics","abstract":[{"type":"text","text":"An atomics library for Swift."}],"title":"Atomics","kind":"symbol","role":"collection","type":"topic"},"doc://swift-atomics.Atomics/documentation/Atomics/UnsafeAtomicLazyReference":{"type":"topic","abstract":[{"text":"An unsafe reference type holding a lazily initializable atomic","type":"text"},{"type":"text","text":" "},{"type":"text","text":"strong reference, requiring manual memory management of the"},{"text":" ","type":"text"},{"text":"underlying storage representation.","type":"text"}],"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomicLazyReference","navigatorTitle":[{"text":"UnsafeAtomicLazyReference","kind":"identifier"}],"kind":"symbol","title":"UnsafeAtomicLazyReference","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"UnsafeAtomicLazyReference","kind":"identifier"}],"url":"\/documentation\/atomics\/unsafeatomiclazyreference"},"doc://swift-atomics.Atomics/documentation/Atomics/UnsafeAtomicLazyReference/init(at:)":{"abstract":[{"type":"text","text":"Initialize an unsafe atomic lazy reference that uses the supplied memory"},{"type":"text","text":" "},{"type":"text","text":"location for storage. The storage location must already be initialized to"},{"text":" ","type":"text"},{"text":"represent a valid atomic value.","type":"text"}],"url":"\/documentation\/atomics\/unsafeatomiclazyreference\/init(at:)","type":"topic","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomicLazyReference\/init(at:)","kind":"symbol","title":"init(at:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"at","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"text":"Storage","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics25UnsafeAtomicLazyReferenceV7StorageV"},{"text":">)","kind":"text"}],"role":"symbol"},"doc://swift-atomics.Atomics/documentation/Atomics/UnsafeAtomicLazyReference/Storage":{"type":"topic","title":"UnsafeAtomicLazyReference.Storage","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomicLazyReference\/Storage","role":"symbol","abstract":[{"text":"The storage representation for an atomic lazy reference value.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"Storage","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Storage","kind":"identifier"}],"url":"\/documentation\/atomics\/unsafeatomiclazyreference\/storage"}}}