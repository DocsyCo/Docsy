{"sections":[],"kind":"symbol","metadata":{"symbolKind":"method","externalID":"s:7Atomics37AtomicOptionalRawRepresentableStorageV21atomicCompareExchange8expected7desired2at8orderingSb9exchanged_xSg8originaltAJ_AJnSpyACyxGGAA0B14UpdateOrderingVtFZ","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"atomicCompareExchange"},{"kind":"text","text":"("},{"text":"expected","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Optional","preciseIdentifier":"s:Sq","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics37AtomicOptionalRawRepresentableStorageV7Wrappedxmfp","text":"Wrapped"},{"text":">, ","kind":"text"},{"text":"desired","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Optional","preciseIdentifier":"s:Sq","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Wrapped","preciseIdentifier":"s:7Atomics37AtomicOptionalRawRepresentableStorageV7Wrappedxmfp","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"at"},{"kind":"text","text":": "},{"text":"UnsafeMutablePointer","kind":"typeIdentifier","preciseIdentifier":"s:Sp"},{"text":"<`Self`","kind":"text"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"ordering"},{"text":": ","kind":"text"},{"text":"AtomicUpdateOrdering","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"text":") -> (exchanged","kind":"text"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":", original"},{"text":": ","kind":"text"},{"text":"Optional","kind":"typeIdentifier","preciseIdentifier":"s:Sq"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:7Atomics37AtomicOptionalRawRepresentableStorageV7Wrappedxmfp","text":"Wrapped","kind":"typeIdentifier"},{"text":">)","kind":"text"}],"modules":[{"name":"Atomics"}],"title":"atomicCompareExchange(expected:desired:at:ordering:)","roleHeading":"Type Method"},"hierarchy":{"paths":[["doc:\/\/swift-atomics.Atomics\/documentation\/Atomics","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicOptionalRawRepresentableStorage"]]},"abstract":[{"text":"Perform an atomic compare and exchange operation on the value referenced","type":"text"},{"type":"text","text":" "},{"text":"by ","type":"text"},{"type":"codeVoice","code":"pointer"},{"text":", applying the specified memory ordering.","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicOptionalRawRepresentableStorage\/atomicCompareExchange(expected:desired:at:ordering:)-3aodx"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"atomicCompareExchange"},{"text":"(","kind":"text"},{"text":"expected","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Optional","preciseIdentifier":"s:Sq"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:7Atomics37AtomicOptionalRawRepresentableStorageV7Wrappedxmfp","kind":"typeIdentifier","text":"Wrapped"},{"text":">, ","kind":"text"},{"text":"desired","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sq","text":"Optional"},{"kind":"text","text":"<"},{"text":"Wrapped","preciseIdentifier":"s:7Atomics37AtomicOptionalRawRepresentableStorageV7Wrappedxmfp","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"text":"at","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"pointer","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"UnsafeMutablePointer","kind":"typeIdentifier","preciseIdentifier":"s:Sp"},{"text":"<`Self`","kind":"text"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"ordering"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering"},{"text":") -> (exchanged","kind":"text"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":", original"},{"kind":"text","text":": "},{"text":"Optional","kind":"typeIdentifier","preciseIdentifier":"s:Sq"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics37AtomicOptionalRawRepresentableStorageV7Wrappedxmfp","text":"Wrapped"},{"text":">)","kind":"text"}]}]},{"parameters":[{"name":"expected","content":[{"inlineContent":[{"text":"The expected current value.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The desired new value."}]}],"name":"desired"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A memory location previously initialized with a value"},{"type":"text","text":" "},{"type":"text","text":"returned by "},{"code":"prepareAtomicRepresentation(for:)","type":"codeVoice"},{"text":".","type":"text"}]}],"name":"pointer"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The memory ordering to apply on this operation."}]}],"name":"ordering"}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"return-value","text":"Return Value"},{"inlineContent":[{"text":"A tuple ","type":"text"},{"code":"(exchanged, original)","type":"codeVoice"},{"text":", where ","type":"text"},{"code":"exchanged","type":"codeVoice"},{"text":" is true if","type":"text"},{"type":"text","text":" "},{"text":"the exchange was successful, and ","type":"text"},{"type":"codeVoice","code":"original"},{"type":"text","text":" is the original value."}],"type":"paragraph"}]},{"kind":"content","content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This operation performs the following algorithm as a single atomic"},{"text":" ","type":"text"},{"text":"transaction:","type":"text"}]},{"syntax":null,"code":["atomic(self) { currentValue in","  let original = currentValue","  guard original == expected else { return (false, original) }","  currentValue = desired","  return (true, original)","}"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"This method implements a “strong” compare and exchange operation","type":"text"},{"type":"text","text":" "},{"type":"text","text":"that does not permit spurious failures."}]}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"paths":["\/documentation\/atomics\/atomicoptionalrawrepresentablestorage\/atomiccompareexchange(expected:desired:at:ordering:)-3aodx"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://swift-atomics.Atomics/documentation/Atomics/AtomicUpdateOrdering":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomicUpdateOrdering"}],"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicUpdateOrdering","url":"\/documentation\/atomics\/atomicupdateordering","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AtomicUpdateOrdering"}],"type":"topic","abstract":[{"text":"Specifies the memory ordering semantics of an atomic read-modify-write","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"operation."}],"title":"AtomicUpdateOrdering"},"doc://swift-atomics.Atomics/documentation/Atomics/AtomicOptionalRawRepresentableStorage/atomicCompareExchange(expected:desired:at:ordering:)-3aodx":{"url":"\/documentation\/atomics\/atomicoptionalrawrepresentablestorage\/atomiccompareexchange(expected:desired:at:ordering:)-3aodx","kind":"symbol","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicOptionalRawRepresentableStorage\/atomicCompareExchange(expected:desired:at:ordering:)-3aodx","abstract":[{"type":"text","text":"Perform an atomic compare and exchange operation on the value referenced"},{"type":"text","text":" "},{"text":"by ","type":"text"},{"type":"codeVoice","code":"pointer"},{"type":"text","text":", applying the specified memory ordering."}],"type":"topic","role":"symbol","title":"atomicCompareExchange(expected:desired:at:ordering:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"atomicCompareExchange","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"expected"},{"kind":"text","text":": "},{"text":"Optional","preciseIdentifier":"s:Sq","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Wrapped","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics37AtomicOptionalRawRepresentableStorageV7Wrappedxmfp"},{"text":">, ","kind":"text"},{"text":"desired","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sq","text":"Optional","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Wrapped","preciseIdentifier":"s:7Atomics37AtomicOptionalRawRepresentableStorageV7Wrappedxmfp","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"text":"at","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sp","text":"UnsafeMutablePointer"},{"text":"<`Self`","kind":"text"},{"text":">, ","kind":"text"},{"text":"ordering","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering"},{"text":") -> (exchanged","kind":"text"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":", original"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sq","kind":"typeIdentifier","text":"Optional"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Wrapped","preciseIdentifier":"s:7Atomics37AtomicOptionalRawRepresentableStorageV7Wrappedxmfp"},{"text":">)","kind":"text"}]},"doc://swift-atomics.Atomics/documentation/Atomics/AtomicOptionalRawRepresentableStorage":{"navigatorTitle":[{"text":"AtomicOptionalRawRepresentableStorage","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AtomicOptionalRawRepresentableStorage","kind":"identifier"}],"title":"AtomicOptionalRawRepresentableStorage","role":"symbol","url":"\/documentation\/atomics\/atomicoptionalrawrepresentablestorage","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicOptionalRawRepresentableStorage","abstract":[{"type":"text","text":"A default atomic storage representation for a "},{"type":"codeVoice","code":"RawRepresentable"},{"text":" type","type":"text"},{"type":"text","text":" "},{"type":"text","text":"whose "},{"type":"codeVoice","code":"RawValue"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"AtomicOptionalWrappable"},{"type":"text","text":"."}],"kind":"symbol","type":"topic"},"doc://swift-atomics.Atomics/documentation/Atomics":{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics","url":"\/documentation\/atomics","abstract":[{"type":"text","text":"An atomics library for Swift."}],"title":"Atomics","kind":"symbol","role":"collection","type":"topic"}}}