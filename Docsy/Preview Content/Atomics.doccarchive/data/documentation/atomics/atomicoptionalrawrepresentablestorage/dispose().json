{"metadata":{"externalID":"s:7Atomics37AtomicOptionalRawRepresentableStorageV7disposexSgyF","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"dispose"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","text":"Optional","preciseIdentifier":"s:Sq"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:7Atomics37AtomicOptionalRawRepresentableStorageV7Wrappedxmfp","kind":"typeIdentifier","text":"Wrapped"},{"text":">","kind":"text"}],"modules":[{"name":"Atomics"}],"role":"symbol","title":"dispose()","roleHeading":"Instance Method"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"dispose","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:Sq","text":"Optional","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:7Atomics37AtomicOptionalRawRepresentableStorageV7Wrappedxmfp","kind":"typeIdentifier","text":"Wrapped"},{"text":">","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"inlineContent":[{"type":"text","text":"This call prevents resource leaks when destroying the storage"},{"type":"text","text":" "},{"type":"text","text":"representation of certain "},{"code":"AtomicValue","type":"codeVoice"},{"text":" types. (In particular, ones that","type":"text"},{"text":" ","type":"text"},{"text":"model strong references.)","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note: This is not an atomic operation. Logically, it implements a custom"},{"text":" ","type":"text"},{"type":"text","text":"destructor for the underlying non-copiable value."}]}]}],"kind":"symbol","abstract":[{"type":"text","text":"Prepare this atomic storage value for deinitialization, extracting the"},{"type":"text","text":" "},{"text":"logical value it represents. This invalidates this atomic storage; you","type":"text"},{"text":" ","type":"text"},{"text":"must not perform any operations on it after this call (except for","type":"text"},{"text":" ","type":"text"},{"text":"deinitialization).","type":"text"}],"sections":[],"hierarchy":{"paths":[["doc:\/\/swift-atomics.Atomics\/documentation\/Atomics","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicOptionalRawRepresentableStorage"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicOptionalRawRepresentableStorage\/dispose()"},"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"paths":["\/documentation\/atomics\/atomicoptionalrawrepresentablestorage\/dispose()"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://swift-atomics.Atomics/documentation/Atomics":{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics","url":"\/documentation\/atomics","abstract":[{"type":"text","text":"An atomics library for Swift."}],"title":"Atomics","kind":"symbol","role":"collection","type":"topic"},"doc://swift-atomics.Atomics/documentation/Atomics/AtomicOptionalRawRepresentableStorage/dispose()":{"type":"topic","abstract":[{"text":"Prepare this atomic storage value for deinitialization, extracting the","type":"text"},{"type":"text","text":" "},{"text":"logical value it represents. This invalidates this atomic storage; you","type":"text"},{"text":" ","type":"text"},{"text":"must not perform any operations on it after this call (except for","type":"text"},{"type":"text","text":" "},{"text":"deinitialization).","type":"text"}],"kind":"symbol","url":"\/documentation\/atomics\/atomicoptionalrawrepresentablestorage\/dispose()","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicOptionalRawRepresentableStorage\/dispose()","title":"dispose()","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"dispose","kind":"identifier"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Optional","preciseIdentifier":"s:Sq"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics37AtomicOptionalRawRepresentableStorageV7Wrappedxmfp","text":"Wrapped"},{"text":">","kind":"text"}]},"doc://swift-atomics.Atomics/documentation/Atomics/AtomicOptionalRawRepresentableStorage":{"navigatorTitle":[{"text":"AtomicOptionalRawRepresentableStorage","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AtomicOptionalRawRepresentableStorage","kind":"identifier"}],"title":"AtomicOptionalRawRepresentableStorage","role":"symbol","url":"\/documentation\/atomics\/atomicoptionalrawrepresentablestorage","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicOptionalRawRepresentableStorage","abstract":[{"type":"text","text":"A default atomic storage representation for a "},{"type":"codeVoice","code":"RawRepresentable"},{"text":" type","type":"text"},{"type":"text","text":" "},{"type":"text","text":"whose "},{"type":"codeVoice","code":"RawValue"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"AtomicOptionalWrappable"},{"type":"text","text":"."}],"kind":"symbol","type":"topic"}}}