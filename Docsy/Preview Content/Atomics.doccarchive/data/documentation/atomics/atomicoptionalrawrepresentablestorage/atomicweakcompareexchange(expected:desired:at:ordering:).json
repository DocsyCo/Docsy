{"hierarchy":{"paths":[["doc:\/\/swift-atomics.Atomics\/documentation\/Atomics","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicOptionalRawRepresentableStorage","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicOptionalRawRepresentableStorage\/AtomicStorage-Implementations"]]},"kind":"symbol","sections":[],"metadata":{"extendedModule":"Atomics","symbolKind":"method","externalID":"s:7Atomics13AtomicStoragePAAE25atomicWeakCompareExchange8expected7desired2at8orderingSb9exchanged_5ValueQz8originaltAK_AKnSpyxGAA0B14UpdateOrderingVtFZ::SYNTHESIZED::s:7Atomics37AtomicOptionalRawRepresentableStorageV","roleHeading":"Type Method","role":"symbol","title":"atomicWeakCompareExchange(expected:desired:at:ordering:)","modules":[{"name":"Atomics"}],"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"atomicWeakCompareExchange"},{"text":"(","kind":"text"},{"text":"expected","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics13AtomicStorageP5ValueQa"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"desired"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Atomics13AtomicStorageP5ValueQa","kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"at"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sp","kind":"typeIdentifier","text":"UnsafeMutablePointer"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"ordering"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","kind":"typeIdentifier","text":"AtomicUpdateOrdering"},{"kind":"text","text":") -> (exchanged"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":", original","kind":"text"},{"kind":"text","text":": "},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics13AtomicStorageP5ValueQa"},{"text":")","kind":"text"}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atomics\/atomicoptionalrawrepresentablestorage\/atomicweakcompareexchange(expected:desired:at:ordering:)"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"type":"text","text":"Perform an atomic weak compare and exchange operation on the value"},{"text":" ","type":"text"},{"type":"text","text":"referenced by "},{"type":"codeVoice","code":"pointer"},{"text":", applying the specified memory orderings.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"This compare-exchange variant is allowed to spuriously fail; it"},{"type":"text","text":" "},{"type":"text","text":"is designed to be called in a loop until it indicates a successful"},{"text":" ","type":"text"},{"type":"text","text":"exchange has happened."}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"atomicWeakCompareExchange"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"expected"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Atomics13AtomicStorageP5ValueQa","text":"Value","kind":"typeIdentifier","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicStorage\/Value"},{"kind":"text","text":", "},{"text":"desired","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics13AtomicStorageP5ValueQa","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicStorage\/Value"},{"kind":"text","text":", "},{"text":"at","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"pointer","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sp","text":"UnsafeMutablePointer"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"ordering"},{"kind":"text","text":": "},{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicUpdateOrdering","kind":"typeIdentifier","text":"AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"text":") -> (exchanged","kind":"text"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":", original","kind":"text"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Value","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicStorage\/Value","preciseIdentifier":"s:7Atomics13AtomicStorageP5ValueQa"},{"text":")","kind":"text"}]}],"kind":"declarations"},{"parameters":[{"name":"expected","content":[{"inlineContent":[{"type":"text","text":"The expected current value."}],"type":"paragraph"}]},{"name":"desired","content":[{"inlineContent":[{"text":"The desired new value.","type":"text"}],"type":"paragraph"}]},{"name":"pointer","content":[{"type":"paragraph","inlineContent":[{"text":"A memory location previously initialized with a value","type":"text"},{"type":"text","text":" "},{"text":"returned by ","type":"text"},{"code":"prepareAtomicRepresentation(for:)","type":"codeVoice"},{"type":"text","text":"."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"The memory ordering to apply on this operation.","type":"text"}]}],"name":"ordering"}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"type":"heading","text":"Return Value","anchor":"return-value"},{"inlineContent":[{"text":"A tuple ","type":"text"},{"code":"(exchanged, original)","type":"codeVoice"},{"text":", where ","type":"text"},{"code":"exchanged","type":"codeVoice"},{"text":" is true if","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the exchange was successful, and "},{"code":"original","type":"codeVoice"},{"type":"text","text":" is the original value."}],"type":"paragraph"}]},{"kind":"content","content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"inlineContent":[{"text":"This operation performs the following algorithm as a single atomic","type":"text"},{"type":"text","text":" "},{"type":"text","text":"transaction:"}],"type":"paragraph"},{"code":["atomic(self) { currentValue in","  let original = currentValue","  guard original == expected else { return (false, original) }","  currentValue = desired","  return (true, original)","}"],"syntax":null,"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"(In this weak form, transient conditions may cause the "},{"code":"original == expected","type":"codeVoice"},{"type":"text","text":" check to sometimes return false when the two values are in fact"},{"type":"text","text":" "},{"text":"the same.)","type":"text"}]}]}],"identifier":{"url":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicOptionalRawRepresentableStorage\/atomicWeakCompareExchange(expected:desired:at:ordering:)","interfaceLanguage":"swift"},"references":{"doc://swift-atomics.Atomics/documentation/Atomics":{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics","url":"\/documentation\/atomics","abstract":[{"type":"text","text":"An atomics library for Swift."}],"title":"Atomics","kind":"symbol","role":"collection","type":"topic"},"doc://swift-atomics.Atomics/documentation/Atomics/AtomicStorage/Value":{"type":"topic","abstract":[{"text":"The type whose values this storage representation is representing.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"associatedtype"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Value"}],"required":true,"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicStorage\/Value","kind":"symbol","url":"\/documentation\/atomics\/atomicstorage\/value","title":"Value"},"doc://swift-atomics.Atomics/documentation/Atomics/AtomicUpdateOrdering":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomicUpdateOrdering"}],"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicUpdateOrdering","url":"\/documentation\/atomics\/atomicupdateordering","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AtomicUpdateOrdering"}],"type":"topic","abstract":[{"text":"Specifies the memory ordering semantics of an atomic read-modify-write","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"operation."}],"title":"AtomicUpdateOrdering"},"doc://swift-atomics.Atomics/documentation/Atomics/AtomicOptionalRawRepresentableStorage/atomicWeakCompareExchange(expected:desired:at:ordering:)":{"title":"atomicWeakCompareExchange(expected:desired:at:ordering:)","abstract":[{"type":"text","text":"Perform an atomic weak compare and exchange operation on the value"},{"type":"text","text":" "},{"text":"referenced by ","type":"text"},{"type":"codeVoice","code":"pointer"},{"text":", applying the specified memory orderings.","type":"text"},{"type":"text","text":" "},{"text":"This compare-exchange variant is allowed to spuriously fail; it","type":"text"},{"text":" ","type":"text"},{"text":"is designed to be called in a loop until it indicates a successful","type":"text"},{"type":"text","text":" "},{"text":"exchange has happened.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"atomicWeakCompareExchange"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"expected"},{"text":": ","kind":"text"},{"text":"Value","preciseIdentifier":"s:7Atomics13AtomicStorageP5ValueQa","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"desired"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:7Atomics13AtomicStorageP5ValueQa"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"at"},{"text":": ","kind":"text"},{"text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"text":"ordering","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"kind":"text","text":") -> (exchanged"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":", original"},{"kind":"text","text":": "},{"text":"Value","preciseIdentifier":"s:7Atomics13AtomicStorageP5ValueQa","kind":"typeIdentifier"},{"kind":"text","text":")"}],"role":"symbol","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicOptionalRawRepresentableStorage\/atomicWeakCompareExchange(expected:desired:at:ordering:)","url":"\/documentation\/atomics\/atomicoptionalrawrepresentablestorage\/atomicweakcompareexchange(expected:desired:at:ordering:)","type":"topic"},"doc://swift-atomics.Atomics/documentation/Atomics/AtomicOptionalRawRepresentableStorage/AtomicStorage-Implementations":{"url":"\/documentation\/atomics\/atomicoptionalrawrepresentablestorage\/atomicstorage-implementations","kind":"article","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicOptionalRawRepresentableStorage\/AtomicStorage-Implementations","type":"topic","role":"collectionGroup","title":"AtomicStorage Implementations","abstract":[]},"doc://swift-atomics.Atomics/documentation/Atomics/AtomicOptionalRawRepresentableStorage":{"navigatorTitle":[{"text":"AtomicOptionalRawRepresentableStorage","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AtomicOptionalRawRepresentableStorage","kind":"identifier"}],"title":"AtomicOptionalRawRepresentableStorage","role":"symbol","url":"\/documentation\/atomics\/atomicoptionalrawrepresentablestorage","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicOptionalRawRepresentableStorage","abstract":[{"type":"text","text":"A default atomic storage representation for a "},{"type":"codeVoice","code":"RawRepresentable"},{"text":" type","type":"text"},{"type":"text","text":" "},{"type":"text","text":"whose "},{"type":"codeVoice","code":"RawValue"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"AtomicOptionalWrappable"},{"type":"text","text":"."}],"kind":"symbol","type":"topic"}}}