{"metadata":{"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"atomicCompareExchange","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"expected"},{"text":": ","kind":"text"},{"text":"Optional","kind":"typeIdentifier","preciseIdentifier":"s:Sq"},{"kind":"text","text":"<"},{"text":"Wrapped","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics37AtomicOptionalRawRepresentableStorageV7Wrappedxmfp"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"desired"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sq","kind":"typeIdentifier","text":"Optional"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Wrapped","preciseIdentifier":"s:7Atomics37AtomicOptionalRawRepresentableStorageV7Wrappedxmfp"},{"text":">, ","kind":"text"},{"text":"at","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp","kind":"typeIdentifier"},{"kind":"text","text":"<`Self`"},{"text":">, ","kind":"text"},{"text":"successOrdering","kind":"externalParam"},{"kind":"text","text":": "},{"text":"AtomicUpdateOrdering","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"text":", ","kind":"text"},{"text":"failureOrdering","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics18AtomicLoadOrderingV","text":"AtomicLoadOrdering"},{"kind":"text","text":") -> (exchanged"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":", original"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sq","kind":"typeIdentifier","text":"Optional"},{"kind":"text","text":"<"},{"text":"Wrapped","preciseIdentifier":"s:7Atomics37AtomicOptionalRawRepresentableStorageV7Wrappedxmfp","kind":"typeIdentifier"},{"text":">)","kind":"text"}],"symbolKind":"method","role":"symbol","modules":[{"name":"Atomics"}],"externalID":"s:7Atomics37AtomicOptionalRawRepresentableStorageV21atomicCompareExchange8expected7desired2at15successOrdering07failureN0Sb9exchanged_xSg8originaltAK_AKnSpyACyxGGAA0b6UpdateN0VAA0b4LoadN0VtFZ","title":"atomicCompareExchange(expected:desired:at:successOrdering:failureOrdering:)","roleHeading":"Type Method"},"variants":[{"paths":["\/documentation\/atomics\/atomicoptionalrawrepresentablestorage\/atomiccompareexchange(expected:desired:at:successordering:failureordering:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicOptionalRawRepresentableStorage\/atomicCompareExchange(expected:desired:at:successOrdering:failureOrdering:)"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"atomicCompareExchange"},{"kind":"text","text":"("},{"kind":"externalParam","text":"expected"},{"kind":"text","text":": "},{"text":"Optional","preciseIdentifier":"s:Sq","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Wrapped","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics37AtomicOptionalRawRepresentableStorageV7Wrappedxmfp"},{"text":">, ","kind":"text"},{"text":"desired","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Optional","kind":"typeIdentifier","preciseIdentifier":"s:Sq"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics37AtomicOptionalRawRepresentableStorageV7Wrappedxmfp","text":"Wrapped"},{"text":">, ","kind":"text"},{"text":"at","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"pointer","kind":"internalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sp","text":"UnsafeMutablePointer","kind":"typeIdentifier"},{"kind":"text","text":"<`Self`"},{"text":">, ","kind":"text"},{"text":"successOrdering","kind":"externalParam"},{"kind":"text","text":": "},{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicUpdateOrdering","text":"AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"failureOrdering","kind":"externalParam"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicLoadOrdering","preciseIdentifier":"s:7Atomics18AtomicLoadOrderingV","kind":"typeIdentifier","text":"AtomicLoadOrdering"},{"kind":"text","text":") -> (exchanged"},{"kind":"text","text":": "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":", original","kind":"text"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sq","text":"Optional","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Wrapped","preciseIdentifier":"s:7Atomics37AtomicOptionalRawRepresentableStorageV7Wrappedxmfp","kind":"typeIdentifier"},{"kind":"text","text":">)"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The expected current value."}]}],"name":"expected"},{"name":"desired","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The desired new value."}]}]},{"name":"pointer","content":[{"inlineContent":[{"text":"A memory location previously initialized with a value","type":"text"},{"type":"text","text":" "},{"type":"text","text":"returned by "},{"code":"prepareSelf(for:)","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}]},{"name":"successOrdering","content":[{"type":"paragraph","inlineContent":[{"text":"The memory ordering to apply if this","type":"text"},{"type":"text","text":" "},{"text":"operation performs the exchange.","type":"text"}]}]},{"name":"failureOrdering","content":[{"inlineContent":[{"type":"text","text":"The memory ordering to apply on this"},{"type":"text","text":" "},{"text":"operation does not perform the exchange.","type":"text"}],"type":"paragraph"}]}]},{"kind":"content","content":[{"text":"Return Value","type":"heading","anchor":"return-value","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"A tuple "},{"code":"(exchanged, original)","type":"codeVoice"},{"type":"text","text":", where "},{"code":"exchanged","type":"codeVoice"},{"text":" is true if","type":"text"},{"type":"text","text":" "},{"text":"the exchange was successful, and ","type":"text"},{"type":"codeVoice","code":"original"},{"type":"text","text":" is the original value."}]}]},{"content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"This operation performs the following algorithm as a single atomic"},{"type":"text","text":" "},{"type":"text","text":"transaction:"}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["atomic(self) { currentValue in","  let original = currentValue","  guard original == expected else { return (false, original) }","  currentValue = desired","  return (true, original)","}"]},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"code":"successOrdering","type":"codeVoice"},{"type":"text","text":" argument specifies the memory ordering to use when"},{"type":"text","text":" "},{"text":"the operation manages to update the current value, while ","type":"text"},{"code":"failureOrdering","type":"codeVoice"},{"text":" ","type":"text"},{"text":"will be used when the operation leaves the value intact.","type":"text"}]},{"inlineContent":[{"text":"This method implements a “strong” compare and exchange operation","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"that does not permit spurious failures."}],"type":"paragraph"}],"kind":"content"}],"abstract":[{"type":"text","text":"Perform an atomic compare and exchange operation on the value referenced"},{"text":" ","type":"text"},{"type":"text","text":"by "},{"type":"codeVoice","code":"pointer"},{"type":"text","text":", applying the specified success\/failure memory orderings."}],"hierarchy":{"paths":[["doc:\/\/swift-atomics.Atomics\/documentation\/Atomics","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicOptionalRawRepresentableStorage"]]},"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://swift-atomics.Atomics/documentation/Atomics":{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics","url":"\/documentation\/atomics","abstract":[{"type":"text","text":"An atomics library for Swift."}],"title":"Atomics","kind":"symbol","role":"collection","type":"topic"},"doc://swift-atomics.Atomics/documentation/Atomics/AtomicUpdateOrdering":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomicUpdateOrdering"}],"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicUpdateOrdering","url":"\/documentation\/atomics\/atomicupdateordering","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AtomicUpdateOrdering"}],"type":"topic","abstract":[{"text":"Specifies the memory ordering semantics of an atomic read-modify-write","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"operation."}],"title":"AtomicUpdateOrdering"},"doc://swift-atomics.Atomics/documentation/Atomics/AtomicLoadOrdering":{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicLoadOrdering","url":"\/documentation\/atomics\/atomicloadordering","abstract":[{"text":"Specifies the memory ordering semantics of an atomic load operation.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AtomicLoadOrdering","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"AtomicLoadOrdering"}],"title":"AtomicLoadOrdering","kind":"symbol","role":"symbol","type":"topic"},"doc://swift-atomics.Atomics/documentation/Atomics/AtomicOptionalRawRepresentableStorage/atomicCompareExchange(expected:desired:at:successOrdering:failureOrdering:)":{"type":"topic","kind":"symbol","url":"\/documentation\/atomics\/atomicoptionalrawrepresentablestorage\/atomiccompareexchange(expected:desired:at:successordering:failureordering:)","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicOptionalRawRepresentableStorage\/atomicCompareExchange(expected:desired:at:successOrdering:failureOrdering:)","abstract":[{"text":"Perform an atomic compare and exchange operation on the value referenced","type":"text"},{"type":"text","text":" "},{"text":"by ","type":"text"},{"type":"codeVoice","code":"pointer"},{"text":", applying the specified success\/failure memory orderings.","type":"text"}],"title":"atomicCompareExchange(expected:desired:at:successOrdering:failureOrdering:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"atomicCompareExchange"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"expected"},{"kind":"text","text":": "},{"text":"Optional","kind":"typeIdentifier","preciseIdentifier":"s:Sq"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics37AtomicOptionalRawRepresentableStorageV7Wrappedxmfp","text":"Wrapped"},{"text":">, ","kind":"text"},{"text":"desired","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sq","text":"Optional"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:7Atomics37AtomicOptionalRawRepresentableStorageV7Wrappedxmfp","kind":"typeIdentifier","text":"Wrapped"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"at"},{"text":": ","kind":"text"},{"text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp","kind":"typeIdentifier"},{"kind":"text","text":"<`Self`"},{"text":">, ","kind":"text"},{"text":"successOrdering","kind":"externalParam"},{"kind":"text","text":": "},{"text":"AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"failureOrdering"},{"kind":"text","text":": "},{"text":"AtomicLoadOrdering","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics18AtomicLoadOrderingV"},{"kind":"text","text":") -> (exchanged"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"kind":"text","text":", original"},{"text":": ","kind":"text"},{"text":"Optional","preciseIdentifier":"s:Sq","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Wrapped","preciseIdentifier":"s:7Atomics37AtomicOptionalRawRepresentableStorageV7Wrappedxmfp"},{"text":">)","kind":"text"}],"role":"symbol"},"doc://swift-atomics.Atomics/documentation/Atomics/AtomicOptionalRawRepresentableStorage":{"navigatorTitle":[{"text":"AtomicOptionalRawRepresentableStorage","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AtomicOptionalRawRepresentableStorage","kind":"identifier"}],"title":"AtomicOptionalRawRepresentableStorage","role":"symbol","url":"\/documentation\/atomics\/atomicoptionalrawrepresentablestorage","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicOptionalRawRepresentableStorage","abstract":[{"type":"text","text":"A default atomic storage representation for a "},{"type":"codeVoice","code":"RawRepresentable"},{"text":" type","type":"text"},{"type":"text","text":" "},{"type":"text","text":"whose "},{"type":"codeVoice","code":"RawValue"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"AtomicOptionalWrappable"},{"type":"text","text":"."}],"kind":"symbol","type":"topic"}}}