{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"atomicMemoryFence","kind":"identifier"},{"text":"(","kind":"text"},{"text":"ordering","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"AtomicUpdateOrdering","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicUpdateOrdering","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"kind":"text","text":")"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"A relaxed fence has no effect."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"An acquiring fence ties to any preceding atomic operation that","type":"text"},{"type":"text","text":" "},{"type":"text","text":"reads a value, and synchronizes with any releasing operation whose"},{"type":"text","text":" "},{"type":"text","text":"value was read."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"A releasing fence ties to any subsequent atomic operation that","type":"text"},{"text":" ","type":"text"},{"text":"modifies a value, and synchronizes with any acquiring operation","type":"text"},{"type":"text","text":" "},{"type":"text","text":"that reads the result."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"An acquiring and releasing fence is a combination of an"},{"type":"text","text":" "},{"type":"text","text":"acquiring and a releasing fence."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A sequentially consistent fence behaves like an acquiring and"},{"type":"text","text":" "},{"type":"text","text":"releasing fence, and ensures that the fence itself is part of"},{"text":" ","type":"text"},{"text":"the single, total ordering for all sequentially consistent","type":"text"},{"type":"text","text":" "},{"type":"text","text":"operations."}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This operation corresponds to "},{"code":"std::atomic_thread_fence","type":"codeVoice"},{"type":"text","text":" in C++."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Be aware that Thread Sanitizer does not support fences and may report"},{"text":" ","type":"text"},{"text":"false-positive races for data protected by a fence.","type":"text"}]}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"symbolKind":"func","modules":[{"name":"Atomics"}],"role":"symbol","roleHeading":"Function","externalID":"s:7Atomics17atomicMemoryFence8orderingyAA20AtomicUpdateOrderingV_tF","title":"atomicMemoryFence(ordering:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"atomicMemoryFence"},{"text":"(","kind":"text"},{"text":"ordering","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering"},{"kind":"text","text":")"}]},"abstract":[{"text":"Establishes a memory ordering without associating it with a","type":"text"},{"text":" ","type":"text"},{"text":"particular atomic operation.","type":"text"}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/swift-atomics.Atomics\/documentation\/Atomics"]]},"identifier":{"url":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/atomicMemoryFence(ordering:)","interfaceLanguage":"swift"},"sections":[],"variants":[{"paths":["\/documentation\/atomics\/atomicmemoryfence(ordering:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://swift-atomics.Atomics/documentation/Atomics/atomicMemoryFence(ordering:)":{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/atomicMemoryFence(ordering:)","url":"\/documentation\/atomics\/atomicmemoryfence(ordering:)","type":"topic","kind":"symbol","abstract":[{"text":"Establishes a memory ordering without associating it with a","type":"text"},{"text":" ","type":"text"},{"text":"particular atomic operation.","type":"text"}],"title":"atomicMemoryFence(ordering:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"atomicMemoryFence","kind":"identifier"},{"kind":"text","text":"("},{"text":"ordering","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering"},{"text":")","kind":"text"}],"role":"symbol"},"doc://swift-atomics.Atomics/documentation/Atomics":{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics","url":"\/documentation\/atomics","abstract":[{"type":"text","text":"An atomics library for Swift."}],"title":"Atomics","kind":"symbol","role":"collection","type":"topic"},"doc://swift-atomics.Atomics/documentation/Atomics/AtomicUpdateOrdering":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomicUpdateOrdering"}],"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicUpdateOrdering","url":"\/documentation\/atomics\/atomicupdateordering","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AtomicUpdateOrdering"}],"type":"topic","abstract":[{"text":"Specifies the memory ordering semantics of an atomic read-modify-write","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"operation."}],"title":"AtomicUpdateOrdering"}}}