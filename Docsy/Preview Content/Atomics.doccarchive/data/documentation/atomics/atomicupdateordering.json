{"kind":"symbol","abstract":[{"text":"Specifies the memory ordering semantics of an atomic read-modify-write","type":"text"},{"type":"text","text":" "},{"type":"text","text":"operation."}],"topicSections":[{"identifiers":["doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicUpdateOrdering\/relaxed","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicUpdateOrdering\/acquiring","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicUpdateOrdering\/releasing","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicUpdateOrdering\/acquiringAndReleasing","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicUpdateOrdering\/sequentiallyConsistent"],"anchor":"Ordering-Values","title":"Ordering Values"},{"title":"Default Implementations","anchor":"Default-Implementations","generated":true,"identifiers":["doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicUpdateOrdering\/CustomStringConvertible-Implementations","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicUpdateOrdering\/Equatable-Implementations","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicUpdateOrdering\/Hashable-Implementations"]}],"sections":[],"seeAlsoSections":[{"generated":true,"anchor":"Memory-Orderings","identifiers":["doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicLoadOrdering","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicStoreOrdering"],"title":"Memory Orderings"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicUpdateOrdering"},"hierarchy":{"paths":[["doc:\/\/swift-atomics.Atomics\/documentation\/Atomics"]]},"relationshipsSections":[{"kind":"relationships","title":"Conforms To","type":"conformsTo","identifiers":["doc:\/\/swift-atomics.Atomics\/s15BitwiseCopyableP","doc:\/\/swift-atomics.Atomics\/s8CopyableP","doc:\/\/swift-atomics.Atomics\/s23CustomStringConvertibleP","doc:\/\/swift-atomics.Atomics\/SQ","doc:\/\/swift-atomics.Atomics\/SH","doc:\/\/swift-atomics.Atomics\/s8SendableP"]}],"metadata":{"symbolKind":"struct","navigatorTitle":[{"kind":"identifier","text":"AtomicUpdateOrdering"}],"modules":[{"name":"Atomics"}],"roleHeading":"Structure","externalID":"s:7Atomics20AtomicUpdateOrderingV","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomicUpdateOrdering"}],"title":"AtomicUpdateOrdering"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"attribute","text":"@frozen"},{"text":" ","kind":"text"},{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomicUpdateOrdering"}]}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"paths":["\/documentation\/atomics\/atomicupdateordering"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://swift-atomics.Atomics/s15BitwiseCopyableP":{"identifier":"doc:\/\/swift-atomics.Atomics\/s15BitwiseCopyableP","title":"Swift.BitwiseCopyable","type":"unresolvable"},"doc://swift-atomics.Atomics/documentation/Atomics/AtomicUpdateOrdering/Equatable-Implementations":{"url":"\/documentation\/atomics\/atomicupdateordering\/equatable-implementations","type":"topic","kind":"article","abstract":[],"role":"collectionGroup","title":"Equatable Implementations","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicUpdateOrdering\/Equatable-Implementations"},"doc://swift-atomics.Atomics/SH":{"identifier":"doc:\/\/swift-atomics.Atomics\/SH","title":"Swift.Hashable","type":"unresolvable"},"doc://swift-atomics.Atomics/documentation/Atomics/AtomicUpdateOrdering/releasing":{"url":"\/documentation\/atomics\/atomicupdateordering\/releasing","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"releasing"},{"text":": `Self`","kind":"text"}],"kind":"symbol","abstract":[{"type":"text","text":"A releasing update synchronizes with acquiring operations that"},{"type":"text","text":" "},{"type":"text","text":"read the value it stores. It ensures that the releasing and"},{"text":" ","type":"text"},{"type":"text","text":"acquiring threads agree that all preceding variable accesses on"},{"type":"text","text":" "},{"text":"the releasing thread happen before the atomic operation itself.","type":"text"}],"role":"symbol","title":"releasing","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicUpdateOrdering\/releasing"},"doc://swift-atomics.Atomics/s8SendableP":{"identifier":"doc:\/\/swift-atomics.Atomics\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://swift-atomics.Atomics/documentation/Atomics":{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics","url":"\/documentation\/atomics","abstract":[{"type":"text","text":"An atomics library for Swift."}],"title":"Atomics","kind":"symbol","role":"collection","type":"topic"},"doc://swift-atomics.Atomics/documentation/Atomics/AtomicStoreOrdering":{"type":"topic","abstract":[{"type":"text","text":"Specifies the memory ordering semantics of an atomic store operation."}],"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicStoreOrdering","navigatorTitle":[{"text":"AtomicStoreOrdering","kind":"identifier"}],"kind":"symbol","title":"AtomicStoreOrdering","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomicStoreOrdering"}],"url":"\/documentation\/atomics\/atomicstoreordering"},"doc://swift-atomics.Atomics/documentation/Atomics/AtomicUpdateOrdering/acquiring":{"kind":"symbol","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicUpdateOrdering\/acquiring","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"acquiring","kind":"identifier"},{"text":": `Self`","kind":"text"}],"role":"symbol","title":"acquiring","url":"\/documentation\/atomics\/atomicupdateordering\/acquiring","abstract":[{"type":"text","text":"An acquiring update synchronizes with a releasing operation"},{"type":"text","text":" "},{"type":"text","text":"whose value its reads. It ensures that the releasing and"},{"text":" ","type":"text"},{"type":"text","text":"acquiring threads agree that all subsequent variable accesses on"},{"type":"text","text":" "},{"text":"the acquring thread happen after the atomic operation itself.","type":"text"}]},"doc://swift-atomics.Atomics/s8CopyableP":{"identifier":"doc:\/\/swift-atomics.Atomics\/s8CopyableP","title":"Swift.Copyable","type":"unresolvable"},"doc://swift-atomics.Atomics/s23CustomStringConvertibleP":{"identifier":"doc:\/\/swift-atomics.Atomics\/s23CustomStringConvertibleP","title":"Swift.CustomStringConvertible","type":"unresolvable"},"doc://swift-atomics.Atomics/documentation/Atomics/AtomicUpdateOrdering/sequentiallyConsistent":{"url":"\/documentation\/atomics\/atomicupdateordering\/sequentiallyconsistent","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"sequentiallyConsistent","kind":"identifier"},{"text":": `Self`","kind":"text"}],"kind":"symbol","abstract":[{"text":"A sequentially consistent update performs an","type":"text"},{"type":"text","text":" "},{"type":"text","text":"acquiring-and-releasing update and also guarantees that it and"},{"text":" ","type":"text"},{"type":"text","text":"all other sequentially consistent atomic operations (loads, stores,"},{"type":"text","text":" "},{"type":"text","text":"updates) appear to be executed in a single, total sequential"},{"text":" ","type":"text"},{"type":"text","text":"ordering."}],"role":"symbol","title":"sequentiallyConsistent","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicUpdateOrdering\/sequentiallyConsistent"},"doc://swift-atomics.Atomics/SQ":{"identifier":"doc:\/\/swift-atomics.Atomics\/SQ","title":"Swift.Equatable","type":"unresolvable"},"doc://swift-atomics.Atomics/documentation/Atomics/AtomicUpdateOrdering/Hashable-Implementations":{"url":"\/documentation\/atomics\/atomicupdateordering\/hashable-implementations","type":"topic","kind":"article","abstract":[],"title":"Hashable Implementations","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicUpdateOrdering\/Hashable-Implementations","role":"collectionGroup"},"doc://swift-atomics.Atomics/documentation/Atomics/AtomicUpdateOrdering/relaxed":{"kind":"symbol","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicUpdateOrdering\/relaxed","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"relaxed","kind":"identifier"},{"kind":"text","text":": `Self`"}],"role":"symbol","title":"relaxed","url":"\/documentation\/atomics\/atomicupdateordering\/relaxed","abstract":[{"text":"Guarantees the atomicity of the specific operation on which it is applied,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"but imposes no ordering constraints on any other variable accesses."}]},"doc://swift-atomics.Atomics/documentation/Atomics/AtomicUpdateOrdering/CustomStringConvertible-Implementations":{"type":"topic","role":"collectionGroup","kind":"article","title":"CustomStringConvertible Implementations","abstract":[],"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicUpdateOrdering\/CustomStringConvertible-Implementations","url":"\/documentation\/atomics\/atomicupdateordering\/customstringconvertible-implementations"},"doc://swift-atomics.Atomics/documentation/Atomics/AtomicUpdateOrdering":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomicUpdateOrdering"}],"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicUpdateOrdering","url":"\/documentation\/atomics\/atomicupdateordering","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AtomicUpdateOrdering"}],"type":"topic","abstract":[{"text":"Specifies the memory ordering semantics of an atomic read-modify-write","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"operation."}],"title":"AtomicUpdateOrdering"},"doc://swift-atomics.Atomics/documentation/Atomics/AtomicLoadOrdering":{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicLoadOrdering","url":"\/documentation\/atomics\/atomicloadordering","abstract":[{"text":"Specifies the memory ordering semantics of an atomic load operation.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AtomicLoadOrdering","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"AtomicLoadOrdering"}],"title":"AtomicLoadOrdering","kind":"symbol","role":"symbol","type":"topic"},"doc://swift-atomics.Atomics/documentation/Atomics/AtomicUpdateOrdering/acquiringAndReleasing":{"url":"\/documentation\/atomics\/atomicupdateordering\/acquiringandreleasing","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"acquiringAndReleasing"},{"text":": `Self`","kind":"text"}],"kind":"symbol","abstract":[{"type":"text","text":"An acquiring-and-releasing operation is a combination of"},{"type":"text","text":" "},{"code":".acquiring","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":".releasing"},{"type":"text","text":" operation on the same variable."}],"role":"symbol","title":"acquiringAndReleasing","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicUpdateOrdering\/acquiringAndReleasing"}}}