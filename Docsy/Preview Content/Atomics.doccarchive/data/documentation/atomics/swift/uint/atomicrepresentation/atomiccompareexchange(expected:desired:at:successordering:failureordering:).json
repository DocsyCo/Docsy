{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atomics\/swift\/uint\/atomicrepresentation\/atomiccompareexchange(expected:desired:at:successordering:failureordering:)"]}],"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"atomicCompareExchange"},{"kind":"text","text":"("},{"text":"expected","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"desired"},{"kind":"text","text":": "},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"kind":"text","text":", "},{"kind":"externalParam","text":"at"},{"text":" ","kind":"text"},{"text":"pointer","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp","kind":"typeIdentifier"},{"text":"<`Self`","kind":"text"},{"kind":"text","text":">, "},{"text":"successOrdering","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","kind":"typeIdentifier","text":"AtomicUpdateOrdering","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicUpdateOrdering"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"failureOrdering"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicLoadOrdering","preciseIdentifier":"s:7Atomics18AtomicLoadOrderingV","text":"AtomicLoadOrdering"},{"text":") -> (exchanged","kind":"text"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":", original"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"kind":"text","text":")"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The expected current value.","type":"text"}]}],"name":"expected"},{"name":"desired","content":[{"inlineContent":[{"type":"text","text":"The desired new value."}],"type":"paragraph"}]},{"name":"pointer","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A memory location previously initialized with a value"},{"text":" ","type":"text"},{"text":"returned by ","type":"text"},{"code":"prepareSelf(for:)","type":"codeVoice"},{"type":"text","text":"."}]}]},{"content":[{"inlineContent":[{"text":"The memory ordering to apply if this","type":"text"},{"type":"text","text":" "},{"type":"text","text":"operation performs the exchange."}],"type":"paragraph"}],"name":"successOrdering"},{"content":[{"inlineContent":[{"text":"The memory ordering to apply on this","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"operation does not perform the exchange."}],"type":"paragraph"}],"name":"failureOrdering"}]},{"content":[{"type":"heading","anchor":"return-value","text":"Return Value","level":2},{"inlineContent":[{"type":"text","text":"A tuple "},{"code":"(exchanged, original)","type":"codeVoice"},{"type":"text","text":", where "},{"code":"exchanged","type":"codeVoice"},{"type":"text","text":" is true if"},{"type":"text","text":" "},{"type":"text","text":"the exchange was successful, and "},{"code":"original","type":"codeVoice"},{"text":" is the original value.","type":"text"}],"type":"paragraph"}],"kind":"content"},{"kind":"content","content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"This operation performs the following algorithm as a single atomic","type":"text"},{"type":"text","text":" "},{"text":"transaction:","type":"text"}]},{"type":"codeListing","syntax":null,"code":["atomic(self) { currentValue in","  let original = currentValue","  guard original == expected else { return (false, original) }","  currentValue = desired","  return (true, original)","}"]},{"inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"successOrdering"},{"text":" argument specifies the memory ordering to use when","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the operation manages to update the current value, while "},{"type":"codeVoice","code":"failureOrdering"},{"text":" ","type":"text"},{"text":"will be used when the operation leaves the value intact.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method implements a “strong” compare and exchange operation"},{"text":" ","type":"text"},{"type":"text","text":"that does not permit spurious failures."}]}]}],"abstract":[{"text":"Perform an atomic compare and exchange operation on the value referenced","type":"text"},{"type":"text","text":" "},{"type":"text","text":"by "},{"type":"codeVoice","code":"pointer"},{"text":", applying the specified success\/failure memory orderings.","type":"text"}],"kind":"symbol","metadata":{"symbolKind":"method","roleHeading":"Type Method","modules":[{"name":"Atomics"}],"title":"atomicCompareExchange(expected:desired:at:successOrdering:failureOrdering:)","role":"symbol","extendedModule":"Atomics","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"atomicCompareExchange"},{"text":"(","kind":"text"},{"text":"expected","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"text":", ","kind":"text"},{"text":"desired","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"kind":"text","text":", "},{"text":"at","kind":"externalParam"},{"kind":"text","text":": "},{"text":"UnsafeMutablePointer","kind":"typeIdentifier","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<`Self`"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"successOrdering"},{"kind":"text","text":": "},{"text":"AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"failureOrdering","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AtomicLoadOrdering","preciseIdentifier":"s:7Atomics18AtomicLoadOrderingV"},{"kind":"text","text":") -> (exchanged"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":", original","kind":"text"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Su","kind":"typeIdentifier","text":"UInt"},{"kind":"text","text":")"}],"externalID":"s:Su7AtomicsE20AtomicRepresentationV21atomicCompareExchange8expected7desired2at15successOrdering07failureK0Sb9exchanged_Su8originaltSu_SuSpyACGAA0b6UpdateK0VAA0b4LoadK0VtFZ"},"schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"url":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UInt\/AtomicRepresentation\/atomicCompareExchange(expected:desired:at:successOrdering:failureOrdering:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/swift-atomics.Atomics\/documentation\/Atomics","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UInt","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UInt\/AtomicValue-Implementations","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UInt\/AtomicRepresentation","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UInt\/AtomicRepresentation\/AtomicStorage-Implementations"]]},"references":{"doc://swift-atomics.Atomics/documentation/Atomics/Swift":{"type":"topic","abstract":[],"role":"collection","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift","url":"\/documentation\/atomics\/swift","kind":"symbol","title":"Swift"},"doc://swift-atomics.Atomics/documentation/Atomics":{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics","url":"\/documentation\/atomics","abstract":[{"type":"text","text":"An atomics library for Swift."}],"title":"Atomics","kind":"symbol","role":"collection","type":"topic"},"doc://swift-atomics.Atomics/documentation/Atomics/Swift/UInt/AtomicRepresentation/atomicCompareExchange(expected:desired:at:successOrdering:failureOrdering:)":{"type":"topic","abstract":[{"text":"Perform an atomic compare and exchange operation on the value referenced","type":"text"},{"type":"text","text":" "},{"text":"by ","type":"text"},{"code":"pointer","type":"codeVoice"},{"text":", applying the specified success\/failure memory orderings.","type":"text"}],"role":"symbol","url":"\/documentation\/atomics\/swift\/uint\/atomicrepresentation\/atomiccompareexchange(expected:desired:at:successordering:failureordering:)","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UInt\/AtomicRepresentation\/atomicCompareExchange(expected:desired:at:successOrdering:failureOrdering:)","title":"atomicCompareExchange(expected:desired:at:successOrdering:failureOrdering:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"atomicCompareExchange"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"expected"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"kind":"text","text":", "},{"kind":"externalParam","text":"desired"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"at","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sp","text":"UnsafeMutablePointer"},{"kind":"text","text":"<`Self`"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"successOrdering"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering"},{"text":", ","kind":"text"},{"text":"failureOrdering","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Atomics18AtomicLoadOrderingV","text":"AtomicLoadOrdering","kind":"typeIdentifier"},{"text":") -> (exchanged","kind":"text"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":", original"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"text":")","kind":"text"}],"kind":"symbol"},"doc://swift-atomics.Atomics/documentation/Atomics/AtomicUpdateOrdering":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomicUpdateOrdering"}],"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicUpdateOrdering","url":"\/documentation\/atomics\/atomicupdateordering","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AtomicUpdateOrdering"}],"type":"topic","abstract":[{"text":"Specifies the memory ordering semantics of an atomic read-modify-write","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"operation."}],"title":"AtomicUpdateOrdering"},"doc://swift-atomics.Atomics/documentation/Atomics/Swift/UInt/AtomicRepresentation/AtomicStorage-Implementations":{"url":"\/documentation\/atomics\/swift\/uint\/atomicrepresentation\/atomicstorage-implementations","role":"collectionGroup","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UInt\/AtomicRepresentation\/AtomicStorage-Implementations","title":"AtomicStorage Implementations","type":"topic","kind":"article","abstract":[]},"doc://swift-atomics.Atomics/documentation/Atomics/Swift/UInt":{"type":"topic","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UInt","title":"UInt","role":"symbol","fragments":[{"text":"extension","kind":"keyword"},{"kind":"text","text":" "},{"text":"UInt","preciseIdentifier":"s:Su","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"UInt"}],"url":"\/documentation\/atomics\/swift\/uint","kind":"symbol","abstract":[]},"doc://swift-atomics.Atomics/documentation/Atomics/AtomicLoadOrdering":{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicLoadOrdering","url":"\/documentation\/atomics\/atomicloadordering","abstract":[{"text":"Specifies the memory ordering semantics of an atomic load operation.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AtomicLoadOrdering","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"AtomicLoadOrdering"}],"title":"AtomicLoadOrdering","kind":"symbol","role":"symbol","type":"topic"},"doc://swift-atomics.Atomics/documentation/Atomics/Swift/UInt/AtomicValue-Implementations":{"url":"\/documentation\/atomics\/swift\/uint\/atomicvalue-implementations","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UInt\/AtomicValue-Implementations","title":"AtomicValue Implementations","abstract":[],"type":"topic","role":"collectionGroup","kind":"article"},"doc://swift-atomics.Atomics/documentation/Atomics/Swift/UInt/AtomicRepresentation":{"url":"\/documentation\/atomics\/swift\/uint\/atomicrepresentation","role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UInt\/AtomicRepresentation","abstract":[{"text":"The atomic storage representation for this value.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomicRepresentation"}],"title":"UInt.AtomicRepresentation","navigatorTitle":[{"text":"AtomicRepresentation","kind":"identifier"}]}}}