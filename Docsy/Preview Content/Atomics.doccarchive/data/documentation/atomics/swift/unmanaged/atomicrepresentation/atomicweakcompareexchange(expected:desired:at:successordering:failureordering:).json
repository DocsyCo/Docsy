{"abstract":[{"type":"text","text":"Perform an atomic weak compare and exchange operation on the value"},{"text":" ","type":"text"},{"text":"referenced by ","type":"text"},{"code":"pointer","type":"codeVoice"},{"text":", applying the specified success\/failure memory","type":"text"},{"type":"text","text":" "},{"text":"orderings. This compare-exchange variant is allowed to spuriously fail; it","type":"text"},{"type":"text","text":" "},{"text":"is designed to be called in a loop until it indicates a successful","type":"text"},{"type":"text","text":" "},{"type":"text","text":"exchange has happened."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atomics\/swift\/unmanaged\/atomicrepresentation\/atomicweakcompareexchange(expected:desired:at:successordering:failureordering:)"]}],"metadata":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"atomicWeakCompareExchange"},{"text":"(","kind":"text"},{"text":"expected","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:s9UnmanagedV7AtomicsE20AtomicRepresentationV5Valuea"},{"text":", ","kind":"text"},{"text":"desired","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Value","preciseIdentifier":"s:s9UnmanagedV7AtomicsE20AtomicRepresentationV5Valuea","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"at"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sp","text":"UnsafeMutablePointer","kind":"typeIdentifier"},{"text":"<`Self`","kind":"text"},{"kind":"text","text":">, "},{"text":"successOrdering","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"AtomicUpdateOrdering","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"kind":"text","text":", "},{"text":"failureOrdering","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"AtomicLoadOrdering","preciseIdentifier":"s:7Atomics18AtomicLoadOrderingV"},{"text":") -> (exchanged","kind":"text"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":", original","kind":"text"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s9UnmanagedV7AtomicsE20AtomicRepresentationV5Valuea","kind":"typeIdentifier","text":"Value"},{"kind":"text","text":")"}],"title":"atomicWeakCompareExchange(expected:desired:at:successOrdering:failureOrdering:)","modules":[{"name":"Atomics"}],"roleHeading":"Type Method","symbolKind":"method","extendedModule":"Atomics","role":"symbol","externalID":"s:s9UnmanagedV7AtomicsE20AtomicRepresentationV25atomicWeakCompareExchange8expected7desired2at15successOrdering07failureM0Sb9exchanged_AByxG8originaltAM_AMSpyAEyx_GGAC0c6UpdateM0VAC0c4LoadM0VtFZ"},"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"atomicWeakCompareExchange"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"expected"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/Unmanaged\/AtomicRepresentation\/Value","text":"Value","preciseIdentifier":"s:s9UnmanagedV7AtomicsE20AtomicRepresentationV5Valuea","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"desired","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s9UnmanagedV7AtomicsE20AtomicRepresentationV5Valuea","kind":"typeIdentifier","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/Unmanaged\/AtomicRepresentation\/Value","text":"Value"},{"text":", ","kind":"text"},{"text":"at","kind":"externalParam"},{"kind":"text","text":" "},{"text":"pointer","kind":"internalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sp","text":"UnsafeMutablePointer","kind":"typeIdentifier"},{"text":"<`Self`","kind":"text"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"successOrdering"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicUpdateOrdering"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"failureOrdering"},{"kind":"text","text":": "},{"text":"AtomicLoadOrdering","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics18AtomicLoadOrderingV","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicLoadOrdering"},{"text":") -> (exchanged","kind":"text"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":", original","kind":"text"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s9UnmanagedV7AtomicsE20AtomicRepresentationV5Valuea","text":"Value","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/Unmanaged\/AtomicRepresentation\/Value"},{"text":")","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"name":"expected","content":[{"type":"paragraph","inlineContent":[{"text":"The expected current value.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The desired new value."}]}],"name":"desired"},{"content":[{"type":"paragraph","inlineContent":[{"text":"A memory location previously initialized with a value","type":"text"},{"type":"text","text":" "},{"text":"returned by ","type":"text"},{"type":"codeVoice","code":"prepareAtomicRepresentation(for:)"},{"type":"text","text":"."}]}],"name":"pointer"},{"name":"successOrdering","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The memory ordering to apply if this"},{"type":"text","text":" "},{"type":"text","text":"operation performs the exchange."}]}]},{"name":"failureOrdering","content":[{"type":"paragraph","inlineContent":[{"text":"The memory ordering to apply on this","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"operation does not perform the exchange."}]}]}],"kind":"parameters"},{"kind":"content","content":[{"text":"Return Value","anchor":"return-value","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"A tuple "},{"code":"(exchanged, original)","type":"codeVoice"},{"text":", where ","type":"text"},{"type":"codeVoice","code":"exchanged"},{"type":"text","text":" is true if"},{"type":"text","text":" "},{"text":"the exchange was successful, and ","type":"text"},{"code":"original","type":"codeVoice"},{"type":"text","text":" is the original value."}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"inlineContent":[{"type":"text","text":"This operation performs the following algorithm as a single atomic"},{"type":"text","text":" "},{"text":"transaction:","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["atomic(self) { currentValue in","  let original = currentValue","  guard original == expected else { return (false, original) }","  currentValue = desired","  return (true, original)","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"(In this weak form, transient conditions may cause the "},{"code":"original == expected","type":"codeVoice"},{"type":"text","text":" check to sometimes return false when the two values are in fact"},{"text":" ","type":"text"},{"type":"text","text":"the same.)"}]},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"successOrdering"},{"type":"text","text":" argument specifies the memory ordering to use when the"},{"type":"text","text":" "},{"text":"operation manages to update the current value, while ","type":"text"},{"type":"codeVoice","code":"failureOrdering"},{"type":"text","text":" "},{"type":"text","text":"will be used when the operation leaves the value intact."}]}]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/swift-atomics.Atomics\/documentation\/Atomics","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/Unmanaged","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/Unmanaged\/AtomicValue-Implementations","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/Unmanaged\/AtomicRepresentation","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/Unmanaged\/AtomicRepresentation\/AtomicStorage-Implementations"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/Unmanaged\/AtomicRepresentation\/atomicWeakCompareExchange(expected:desired:at:successOrdering:failureOrdering:)"},"references":{"doc://swift-atomics.Atomics/documentation/Atomics/AtomicLoadOrdering":{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicLoadOrdering","url":"\/documentation\/atomics\/atomicloadordering","abstract":[{"text":"Specifies the memory ordering semantics of an atomic load operation.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AtomicLoadOrdering","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"AtomicLoadOrdering"}],"title":"AtomicLoadOrdering","kind":"symbol","role":"symbol","type":"topic"},"doc://swift-atomics.Atomics/documentation/Atomics/Swift/Unmanaged/AtomicRepresentation":{"navigatorTitle":[{"text":"AtomicRepresentation","kind":"identifier"}],"abstract":[{"type":"text","text":"The atomic storage representation for this value."}],"role":"symbol","type":"topic","url":"\/documentation\/atomics\/swift\/unmanaged\/atomicrepresentation","title":"Unmanaged.AtomicRepresentation","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AtomicRepresentation","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/Unmanaged\/AtomicRepresentation"},"doc://swift-atomics.Atomics/documentation/Atomics/Swift":{"type":"topic","abstract":[],"role":"collection","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift","url":"\/documentation\/atomics\/swift","kind":"symbol","title":"Swift"},"doc://swift-atomics.Atomics/documentation/Atomics/AtomicUpdateOrdering":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomicUpdateOrdering"}],"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicUpdateOrdering","url":"\/documentation\/atomics\/atomicupdateordering","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AtomicUpdateOrdering"}],"type":"topic","abstract":[{"text":"Specifies the memory ordering semantics of an atomic read-modify-write","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"operation."}],"title":"AtomicUpdateOrdering"},"doc://swift-atomics.Atomics/documentation/Atomics":{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics","url":"\/documentation\/atomics","abstract":[{"type":"text","text":"An atomics library for Swift."}],"title":"Atomics","kind":"symbol","role":"collection","type":"topic"},"doc://swift-atomics.Atomics/documentation/Atomics/Swift/Unmanaged/AtomicRepresentation/Value":{"navigatorTitle":[{"text":"Value","kind":"identifier"}],"abstract":[{"type":"text","text":"The type whose values this storage representation is representing."}],"role":"symbol","type":"topic","url":"\/documentation\/atomics\/swift\/unmanaged\/atomicrepresentation\/value","title":"Unmanaged.AtomicRepresentation.Value","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"text":"Value","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/Unmanaged\/AtomicRepresentation\/Value"},"doc://swift-atomics.Atomics/documentation/Atomics/Swift/Unmanaged/AtomicValue-Implementations":{"kind":"article","type":"topic","role":"collectionGroup","abstract":[],"title":"AtomicValue Implementations","url":"\/documentation\/atomics\/swift\/unmanaged\/atomicvalue-implementations","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/Unmanaged\/AtomicValue-Implementations"},"doc://swift-atomics.Atomics/documentation/Atomics/Swift/Unmanaged":{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/Unmanaged","title":"Unmanaged","navigatorTitle":[{"kind":"identifier","text":"Unmanaged"}],"abstract":[],"kind":"symbol","fragments":[{"text":"extension","kind":"keyword"},{"kind":"text","text":" "},{"preciseIdentifier":"s:s9UnmanagedV","kind":"identifier","text":"Unmanaged"}],"url":"\/documentation\/atomics\/swift\/unmanaged","type":"topic","role":"symbol"},"doc://swift-atomics.Atomics/documentation/Atomics/Swift/Unmanaged/AtomicRepresentation/atomicWeakCompareExchange(expected:desired:at:successOrdering:failureOrdering:)":{"type":"topic","kind":"symbol","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/Unmanaged\/AtomicRepresentation\/atomicWeakCompareExchange(expected:desired:at:successOrdering:failureOrdering:)","abstract":[{"text":"Perform an atomic weak compare and exchange operation on the value","type":"text"},{"type":"text","text":" "},{"type":"text","text":"referenced by "},{"type":"codeVoice","code":"pointer"},{"type":"text","text":", applying the specified success\/failure memory"},{"text":" ","type":"text"},{"type":"text","text":"orderings. This compare-exchange variant is allowed to spuriously fail; it"},{"type":"text","text":" "},{"type":"text","text":"is designed to be called in a loop until it indicates a successful"},{"text":" ","type":"text"},{"type":"text","text":"exchange has happened."}],"title":"atomicWeakCompareExchange(expected:desired:at:successOrdering:failureOrdering:)","role":"symbol","url":"\/documentation\/atomics\/swift\/unmanaged\/atomicrepresentation\/atomicweakcompareexchange(expected:desired:at:successordering:failureordering:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"atomicWeakCompareExchange"},{"text":"(","kind":"text"},{"text":"expected","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s9UnmanagedV7AtomicsE20AtomicRepresentationV5Valuea","text":"Value","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"desired"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s9UnmanagedV7AtomicsE20AtomicRepresentationV5Valuea","kind":"typeIdentifier","text":"Value"},{"text":", ","kind":"text"},{"text":"at","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sp","text":"UnsafeMutablePointer","kind":"typeIdentifier"},{"text":"<`Self`","kind":"text"},{"kind":"text","text":">, "},{"text":"successOrdering","kind":"externalParam"},{"kind":"text","text":": "},{"text":"AtomicUpdateOrdering","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"kind":"text","text":", "},{"text":"failureOrdering","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"AtomicLoadOrdering","preciseIdentifier":"s:7Atomics18AtomicLoadOrderingV"},{"text":") -> (exchanged","kind":"text"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":", original","kind":"text"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s9UnmanagedV7AtomicsE20AtomicRepresentationV5Valuea","text":"Value","kind":"typeIdentifier"},{"kind":"text","text":")"}]},"doc://swift-atomics.Atomics/documentation/Atomics/Swift/Unmanaged/AtomicRepresentation/AtomicStorage-Implementations":{"type":"topic","title":"AtomicStorage Implementations","url":"\/documentation\/atomics\/swift\/unmanaged\/atomicrepresentation\/atomicstorage-implementations","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/Unmanaged\/AtomicRepresentation\/AtomicStorage-Implementations","abstract":[],"kind":"article","role":"collectionGroup"}}}