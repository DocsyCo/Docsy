{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"atomicCompareExchange","kind":"identifier"},{"text":"(","kind":"text"},{"text":"expected","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Value","preciseIdentifier":"s:7Atomics13AtomicStorageP5ValueQa","kind":"typeIdentifier","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicStorage\/Value"},{"kind":"text","text":", "},{"text":"desired","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Value","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicStorage\/Value","preciseIdentifier":"s:7Atomics13AtomicStorageP5ValueQa","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"at","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"pointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":">, ","kind":"text"},{"text":"ordering","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicUpdateOrdering","text":"AtomicUpdateOrdering","kind":"typeIdentifier"},{"text":") -> (exchanged","kind":"text"},{"kind":"text","text":": "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":", original","kind":"text"},{"kind":"text","text":": "},{"text":"Value","kind":"typeIdentifier","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicStorage\/Value","preciseIdentifier":"s:7Atomics13AtomicStorageP5ValueQa"},{"kind":"text","text":")"}]}]},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The expected current value."}],"type":"paragraph"}],"name":"expected"},{"content":[{"type":"paragraph","inlineContent":[{"text":"The desired new value.","type":"text"}]}],"name":"desired"},{"name":"pointer","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A memory location previously initialized with a value"},{"type":"text","text":" "},{"type":"text","text":"returned by "},{"type":"codeVoice","code":"prepareAtomicRepresentation(for:)"},{"text":".","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"The memory ordering to apply on this operation.","type":"text"}]}],"name":"ordering"}],"kind":"parameters"},{"kind":"content","content":[{"text":"Return Value","level":2,"anchor":"return-value","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"A tuple ","type":"text"},{"code":"(exchanged, original)","type":"codeVoice"},{"text":", where ","type":"text"},{"type":"codeVoice","code":"exchanged"},{"type":"text","text":" is true if"},{"type":"text","text":" "},{"text":"the exchange was successful, and ","type":"text"},{"type":"codeVoice","code":"original"},{"type":"text","text":" is the original value."}]}]},{"content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"inlineContent":[{"text":"This operation performs the following algorithm as a single atomic","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"transaction:"}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["atomic(self) { currentValue in","  let original = currentValue","  guard original == expected else { return (false, original) }","  currentValue = desired","  return (true, original)","}"]},{"inlineContent":[{"text":"This method implements a “strong” compare and exchange operation","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"that does not permit spurious failures."}],"type":"paragraph"}],"kind":"content"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","metadata":{"symbolKind":"method","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"atomicCompareExchange"},{"kind":"text","text":"("},{"kind":"externalParam","text":"expected"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics13AtomicStorageP5ValueQa"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"desired"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics13AtomicStorageP5ValueQa","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"at"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sp","text":"UnsafeMutablePointer","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"ordering"},{"kind":"text","text":": "},{"text":"AtomicUpdateOrdering","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"kind":"text","text":") -> (exchanged"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":", original","kind":"text"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Atomics13AtomicStorageP5ValueQa","text":"Value","kind":"typeIdentifier"},{"kind":"text","text":")"}],"title":"atomicCompareExchange(expected:desired:at:ordering:)","modules":[{"name":"Atomics"}],"role":"symbol","extendedModule":"Atomics","roleHeading":"Type Method","externalID":"s:7Atomics13AtomicStoragePAAE21atomicCompareExchange8expected7desired2at8orderingSb9exchanged_5ValueQz8originaltAK_AKnSpyxGAA0B14UpdateOrderingVtFZ::SYNTHESIZED::s:Sv7AtomicsE28AtomicOptionalRepresentationV"},"abstract":[{"type":"text","text":"Perform an atomic compare and exchange operation on the value referenced"},{"type":"text","text":" "},{"text":"by ","type":"text"},{"code":"pointer","type":"codeVoice"},{"type":"text","text":", applying the specified memory ordering."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atomics\/swift\/unsafemutablerawpointer\/atomicoptionalrepresentation\/atomiccompareexchange(expected:desired:at:ordering:)-5c0gf"]}],"hierarchy":{"paths":[["doc:\/\/swift-atomics.Atomics\/documentation\/Atomics","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafeMutableRawPointer","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafeMutableRawPointer\/AtomicOptionalWrappable-Implementations","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafeMutableRawPointer\/AtomicOptionalRepresentation","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafeMutableRawPointer\/AtomicOptionalRepresentation\/AtomicStorage-Implementations"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafeMutableRawPointer\/AtomicOptionalRepresentation\/atomicCompareExchange(expected:desired:at:ordering:)-5c0gf"},"sections":[],"references":{"doc://swift-atomics.Atomics/documentation/Atomics":{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics","url":"\/documentation\/atomics","abstract":[{"type":"text","text":"An atomics library for Swift."}],"title":"Atomics","kind":"symbol","role":"collection","type":"topic"},"doc://swift-atomics.Atomics/documentation/Atomics/Swift/UnsafeMutableRawPointer/AtomicOptionalRepresentation":{"kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"The atomic storage representation for "},{"code":"Optional<Self>","type":"codeVoice"},{"text":".","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AtomicOptionalRepresentation","kind":"identifier"}],"url":"\/documentation\/atomics\/swift\/unsafemutablerawpointer\/atomicoptionalrepresentation","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafeMutableRawPointer\/AtomicOptionalRepresentation","navigatorTitle":[{"text":"AtomicOptionalRepresentation","kind":"identifier"}],"title":"UnsafeMutableRawPointer.AtomicOptionalRepresentation","type":"topic"},"doc://swift-atomics.Atomics/documentation/Atomics/Swift/UnsafeMutableRawPointer":{"kind":"symbol","role":"symbol","abstract":[],"fragments":[{"text":"extension","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:Sv","text":"UnsafeMutableRawPointer","kind":"identifier"}],"url":"\/documentation\/atomics\/swift\/unsafemutablerawpointer","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafeMutableRawPointer","navigatorTitle":[{"text":"UnsafeMutableRawPointer","kind":"identifier"}],"title":"UnsafeMutableRawPointer","type":"topic"},"doc://swift-atomics.Atomics/documentation/Atomics/Swift":{"type":"topic","abstract":[],"role":"collection","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift","url":"\/documentation\/atomics\/swift","kind":"symbol","title":"Swift"},"doc://swift-atomics.Atomics/documentation/Atomics/Swift/UnsafeMutableRawPointer/AtomicOptionalWrappable-Implementations":{"kind":"article","role":"collectionGroup","abstract":[],"url":"\/documentation\/atomics\/swift\/unsafemutablerawpointer\/atomicoptionalwrappable-implementations","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafeMutableRawPointer\/AtomicOptionalWrappable-Implementations","title":"AtomicOptionalWrappable Implementations","type":"topic"},"doc://swift-atomics.Atomics/documentation/Atomics/Swift/UnsafeMutableRawPointer/AtomicOptionalRepresentation/atomicCompareExchange(expected:desired:at:ordering:)-5c0gf":{"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"atomicCompareExchange","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"expected"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics13AtomicStorageP5ValueQa","text":"Value"},{"kind":"text","text":", "},{"text":"desired","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics13AtomicStorageP5ValueQa"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"at"},{"text":": ","kind":"text"},{"text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"ordering"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering","kind":"typeIdentifier"},{"kind":"text","text":") -> (exchanged"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":", original","kind":"text"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics13AtomicStorageP5ValueQa","text":"Value"},{"text":")","kind":"text"}],"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafeMutableRawPointer\/AtomicOptionalRepresentation\/atomicCompareExchange(expected:desired:at:ordering:)-5c0gf","url":"\/documentation\/atomics\/swift\/unsafemutablerawpointer\/atomicoptionalrepresentation\/atomiccompareexchange(expected:desired:at:ordering:)-5c0gf","kind":"symbol","role":"symbol","type":"topic","title":"atomicCompareExchange(expected:desired:at:ordering:)","abstract":[{"type":"text","text":"Perform an atomic compare and exchange operation on the value referenced"},{"text":" ","type":"text"},{"text":"by ","type":"text"},{"code":"pointer","type":"codeVoice"},{"type":"text","text":", applying the specified memory ordering."}]},"doc://swift-atomics.Atomics/documentation/Atomics/AtomicStorage/Value":{"type":"topic","abstract":[{"text":"The type whose values this storage representation is representing.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"associatedtype"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Value"}],"required":true,"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicStorage\/Value","kind":"symbol","url":"\/documentation\/atomics\/atomicstorage\/value","title":"Value"},"doc://swift-atomics.Atomics/documentation/Atomics/AtomicUpdateOrdering":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomicUpdateOrdering"}],"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicUpdateOrdering","url":"\/documentation\/atomics\/atomicupdateordering","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AtomicUpdateOrdering"}],"type":"topic","abstract":[{"text":"Specifies the memory ordering semantics of an atomic read-modify-write","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"operation."}],"title":"AtomicUpdateOrdering"},"doc://swift-atomics.Atomics/documentation/Atomics/Swift/UnsafeMutableRawPointer/AtomicOptionalRepresentation/AtomicStorage-Implementations":{"kind":"article","role":"collectionGroup","abstract":[],"url":"\/documentation\/atomics\/swift\/unsafemutablerawpointer\/atomicoptionalrepresentation\/atomicstorage-implementations","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafeMutableRawPointer\/AtomicOptionalRepresentation\/AtomicStorage-Implementations","title":"AtomicStorage Implementations","type":"topic"}}}