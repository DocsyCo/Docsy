{"schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"text":"Perform an atomic compare and exchange operation on the value referenced","type":"text"},{"type":"text","text":" "},{"text":"by ","type":"text"},{"code":"pointer","type":"codeVoice"},{"text":", applying the specified success\/failure memory orderings.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/swift-atomics.Atomics\/documentation\/Atomics","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafeMutableRawPointer","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafeMutableRawPointer\/AtomicValue-Implementations","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafeMutableRawPointer\/AtomicRepresentation","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafeMutableRawPointer\/AtomicRepresentation\/AtomicStorage-Implementations"]]},"sections":[],"variants":[{"paths":["\/documentation\/atomics\/swift\/unsafemutablerawpointer\/atomicrepresentation\/atomiccompareexchange(expected:desired:at:successordering:failureordering:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafeMutableRawPointer\/AtomicRepresentation\/atomicCompareExchange(expected:desired:at:successOrdering:failureOrdering:)"},"kind":"symbol","metadata":{"externalID":"s:Sv7AtomicsE20AtomicRepresentationV21atomicCompareExchange8expected7desired2at15successOrdering07failureK0Sb9exchanged_Sv8originaltSv_SvSpyACGAA0b6UpdateK0VAA0b4LoadK0VtFZ","modules":[{"name":"Atomics"}],"title":"atomicCompareExchange(expected:desired:at:successOrdering:failureOrdering:)","symbolKind":"method","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"atomicCompareExchange","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"expected"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sv7AtomicsE20AtomicRepresentationV5Valuea","text":"Value"},{"kind":"text","text":", "},{"text":"desired","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sv7AtomicsE20AtomicRepresentationV5Valuea","text":"Value"},{"text":", ","kind":"text"},{"text":"at","kind":"externalParam"},{"kind":"text","text":": "},{"text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp","kind":"typeIdentifier"},{"text":"<`Self`","kind":"text"},{"text":">, ","kind":"text"},{"text":"successOrdering","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"text":", ","kind":"text"},{"text":"failureOrdering","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Atomics18AtomicLoadOrderingV","text":"AtomicLoadOrdering","kind":"typeIdentifier"},{"text":") -> (exchanged","kind":"text"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":", original"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sv7AtomicsE20AtomicRepresentationV5Valuea","text":"Value"},{"text":")","kind":"text"}],"roleHeading":"Type Method","extendedModule":"Atomics"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"atomicCompareExchange","kind":"identifier"},{"text":"(","kind":"text"},{"text":"expected","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Value","kind":"typeIdentifier","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafeMutableRawPointer\/AtomicRepresentation\/Value","preciseIdentifier":"s:Sv7AtomicsE20AtomicRepresentationV5Valuea"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"desired"},{"kind":"text","text":": "},{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafeMutableRawPointer\/AtomicRepresentation\/Value","kind":"typeIdentifier","preciseIdentifier":"s:Sv7AtomicsE20AtomicRepresentationV5Valuea","text":"Value"},{"text":", ","kind":"text"},{"text":"at","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"pointer"},{"text":": ","kind":"text"},{"text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp","kind":"typeIdentifier"},{"text":"<`Self`","kind":"text"},{"kind":"text","text":">, "},{"text":"successOrdering","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"AtomicUpdateOrdering","kind":"typeIdentifier","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"failureOrdering"},{"kind":"text","text":": "},{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicLoadOrdering","text":"AtomicLoadOrdering","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics18AtomicLoadOrderingV"},{"text":") -> (exchanged","kind":"text"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":", original","kind":"text"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafeMutableRawPointer\/AtomicRepresentation\/Value","preciseIdentifier":"s:Sv7AtomicsE20AtomicRepresentationV5Valuea"},{"text":")","kind":"text"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The expected current value."}],"type":"paragraph"}],"name":"expected"},{"name":"desired","content":[{"inlineContent":[{"text":"The desired new value.","type":"text"}],"type":"paragraph"}]},{"name":"pointer","content":[{"inlineContent":[{"type":"text","text":"A memory location previously initialized with a value"},{"type":"text","text":" "},{"type":"text","text":"returned by "},{"type":"codeVoice","code":"prepareSelf(for:)"},{"text":".","type":"text"}],"type":"paragraph"}]},{"name":"successOrdering","content":[{"inlineContent":[{"text":"The memory ordering to apply if this","type":"text"},{"type":"text","text":" "},{"type":"text","text":"operation performs the exchange."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"The memory ordering to apply on this","type":"text"},{"text":" ","type":"text"},{"text":"operation does not perform the exchange.","type":"text"}]}],"name":"failureOrdering"}]},{"content":[{"level":2,"anchor":"return-value","text":"Return Value","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A tuple "},{"type":"codeVoice","code":"(exchanged, original)"},{"type":"text","text":", where "},{"type":"codeVoice","code":"exchanged"},{"type":"text","text":" is true if"},{"text":" ","type":"text"},{"text":"the exchange was successful, and ","type":"text"},{"code":"original","type":"codeVoice"},{"type":"text","text":" is the original value."}]}],"kind":"content"},{"content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This operation performs the following algorithm as a single atomic"},{"type":"text","text":" "},{"text":"transaction:","type":"text"}]},{"code":["atomic(self) { currentValue in","  let original = currentValue","  guard original == expected else { return (false, original) }","  currentValue = desired","  return (true, original)","}"],"type":"codeListing","syntax":null},{"inlineContent":[{"text":"The ","type":"text"},{"code":"successOrdering","type":"codeVoice"},{"text":" argument specifies the memory ordering to use when","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the operation manages to update the current value, while "},{"code":"failureOrdering","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"will be used when the operation leaves the value intact."}],"type":"paragraph"},{"inlineContent":[{"text":"This method implements a “strong” compare and exchange operation","type":"text"},{"type":"text","text":" "},{"type":"text","text":"that does not permit spurious failures."}],"type":"paragraph"}],"kind":"content"}],"references":{"doc://swift-atomics.Atomics/documentation/Atomics/Swift/UnsafeMutableRawPointer/AtomicRepresentation/AtomicStorage-Implementations":{"type":"topic","abstract":[],"kind":"article","title":"AtomicStorage Implementations","role":"collectionGroup","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafeMutableRawPointer\/AtomicRepresentation\/AtomicStorage-Implementations","url":"\/documentation\/atomics\/swift\/unsafemutablerawpointer\/atomicrepresentation\/atomicstorage-implementations"},"doc://swift-atomics.Atomics/documentation/Atomics/Swift/UnsafeMutableRawPointer/AtomicRepresentation":{"type":"topic","title":"UnsafeMutableRawPointer.AtomicRepresentation","url":"\/documentation\/atomics\/swift\/unsafemutablerawpointer\/atomicrepresentation","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafeMutableRawPointer\/AtomicRepresentation","navigatorTitle":[{"kind":"identifier","text":"AtomicRepresentation"}],"abstract":[{"text":"The atomic storage representation for this value.","type":"text"}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AtomicRepresentation","kind":"identifier"}]},"doc://swift-atomics.Atomics/documentation/Atomics/Swift":{"type":"topic","abstract":[],"role":"collection","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift","url":"\/documentation\/atomics\/swift","kind":"symbol","title":"Swift"},"doc://swift-atomics.Atomics/documentation/Atomics/Swift/UnsafeMutableRawPointer/AtomicRepresentation/Value":{"type":"topic","abstract":[{"type":"text","text":"The type whose values this storage representation is representing."}],"kind":"symbol","title":"UnsafeMutableRawPointer.AtomicRepresentation.Value","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"Value","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Value"}],"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafeMutableRawPointer\/AtomicRepresentation\/Value","url":"\/documentation\/atomics\/swift\/unsafemutablerawpointer\/atomicrepresentation\/value"},"doc://swift-atomics.Atomics/documentation/Atomics/AtomicUpdateOrdering":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomicUpdateOrdering"}],"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicUpdateOrdering","url":"\/documentation\/atomics\/atomicupdateordering","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AtomicUpdateOrdering"}],"type":"topic","abstract":[{"text":"Specifies the memory ordering semantics of an atomic read-modify-write","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"operation."}],"title":"AtomicUpdateOrdering"},"doc://swift-atomics.Atomics/documentation/Atomics/Swift/UnsafeMutableRawPointer/AtomicValue-Implementations":{"url":"\/documentation\/atomics\/swift\/unsafemutablerawpointer\/atomicvalue-implementations","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafeMutableRawPointer\/AtomicValue-Implementations","title":"AtomicValue Implementations","role":"collectionGroup","abstract":[],"kind":"article","type":"topic"},"doc://swift-atomics.Atomics/documentation/Atomics/Swift/UnsafeMutableRawPointer/AtomicRepresentation/atomicCompareExchange(expected:desired:at:successOrdering:failureOrdering:)":{"type":"topic","title":"atomicCompareExchange(expected:desired:at:successOrdering:failureOrdering:)","url":"\/documentation\/atomics\/swift\/unsafemutablerawpointer\/atomicrepresentation\/atomiccompareexchange(expected:desired:at:successordering:failureordering:)","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafeMutableRawPointer\/AtomicRepresentation\/atomicCompareExchange(expected:desired:at:successOrdering:failureOrdering:)","abstract":[{"text":"Perform an atomic compare and exchange operation on the value referenced","type":"text"},{"text":" ","type":"text"},{"text":"by ","type":"text"},{"code":"pointer","type":"codeVoice"},{"type":"text","text":", applying the specified success\/failure memory orderings."}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"atomicCompareExchange","kind":"identifier"},{"kind":"text","text":"("},{"text":"expected","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Value","preciseIdentifier":"s:Sv7AtomicsE20AtomicRepresentationV5Valuea","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"desired"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:Sv7AtomicsE20AtomicRepresentationV5Valuea"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"at"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sp","text":"UnsafeMutablePointer","kind":"typeIdentifier"},{"text":"<`Self`","kind":"text"},{"text":">, ","kind":"text"},{"text":"successOrdering","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering"},{"text":", ","kind":"text"},{"text":"failureOrdering","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Atomics18AtomicLoadOrderingV","kind":"typeIdentifier","text":"AtomicLoadOrdering"},{"kind":"text","text":") -> (exchanged"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":", original"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:Sv7AtomicsE20AtomicRepresentationV5Valuea"},{"text":")","kind":"text"}]},"doc://swift-atomics.Atomics/documentation/Atomics/Swift/UnsafeMutableRawPointer":{"kind":"symbol","role":"symbol","abstract":[],"fragments":[{"text":"extension","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:Sv","text":"UnsafeMutableRawPointer","kind":"identifier"}],"url":"\/documentation\/atomics\/swift\/unsafemutablerawpointer","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafeMutableRawPointer","navigatorTitle":[{"text":"UnsafeMutableRawPointer","kind":"identifier"}],"title":"UnsafeMutableRawPointer","type":"topic"},"doc://swift-atomics.Atomics/documentation/Atomics/AtomicLoadOrdering":{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicLoadOrdering","url":"\/documentation\/atomics\/atomicloadordering","abstract":[{"text":"Specifies the memory ordering semantics of an atomic load operation.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AtomicLoadOrdering","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"AtomicLoadOrdering"}],"title":"AtomicLoadOrdering","kind":"symbol","role":"symbol","type":"topic"},"doc://swift-atomics.Atomics/documentation/Atomics":{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics","url":"\/documentation\/atomics","abstract":[{"type":"text","text":"An atomics library for Swift."}],"title":"Atomics","kind":"symbol","role":"collection","type":"topic"}}}