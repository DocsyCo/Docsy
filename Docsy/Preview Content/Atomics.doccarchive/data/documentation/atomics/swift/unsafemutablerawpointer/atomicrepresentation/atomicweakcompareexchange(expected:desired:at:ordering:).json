{"identifier":{"url":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafeMutableRawPointer\/AtomicRepresentation\/atomicWeakCompareExchange(expected:desired:at:ordering:)","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/atomics\/swift\/unsafemutablerawpointer\/atomicrepresentation\/atomicweakcompareexchange(expected:desired:at:ordering:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"title":"atomicWeakCompareExchange(expected:desired:at:ordering:)","modules":[{"name":"Atomics"}],"roleHeading":"Type Method","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"atomicWeakCompareExchange"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"expected"},{"kind":"text","text":": "},{"text":"Value","preciseIdentifier":"s:7Atomics13AtomicStorageP5ValueQa","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"desired","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics13AtomicStorageP5ValueQa"},{"kind":"text","text":", "},{"text":"at","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sp","text":"UnsafeMutablePointer","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"text":"ordering","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"text":") -> (exchanged","kind":"text"},{"kind":"text","text":": "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":", original","kind":"text"},{"kind":"text","text":": "},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics13AtomicStorageP5ValueQa"},{"text":")","kind":"text"}],"extendedModule":"Atomics","symbolKind":"method","externalID":"s:7Atomics13AtomicStoragePAAE25atomicWeakCompareExchange8expected7desired2at8orderingSb9exchanged_5ValueQz8originaltAK_AKnSpyxGAA0B14UpdateOrderingVtFZ::SYNTHESIZED::s:Sv7AtomicsE20AtomicRepresentationV","role":"symbol"},"sections":[],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"atomicWeakCompareExchange","kind":"identifier"},{"text":"(","kind":"text"},{"text":"expected","kind":"externalParam"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicStorage\/Value","preciseIdentifier":"s:7Atomics13AtomicStorageP5ValueQa","kind":"typeIdentifier","text":"Value"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"desired"},{"text":": ","kind":"text"},{"text":"Value","preciseIdentifier":"s:7Atomics13AtomicStorageP5ValueQa","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicStorage\/Value","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"at","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"pointer"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sp","text":"UnsafeMutablePointer","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":">, ","kind":"text"},{"text":"ordering","kind":"externalParam"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering","kind":"typeIdentifier"},{"kind":"text","text":") -> (exchanged"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":", original","kind":"text"},{"text":": ","kind":"text"},{"text":"Value","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicStorage\/Value","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics13AtomicStorageP5ValueQa"},{"kind":"text","text":")"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"expected","content":[{"inlineContent":[{"type":"text","text":"The expected current value."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The desired new value."}]}],"name":"desired"},{"name":"pointer","content":[{"type":"paragraph","inlineContent":[{"text":"A memory location previously initialized with a value","type":"text"},{"type":"text","text":" "},{"type":"text","text":"returned by "},{"code":"prepareAtomicRepresentation(for:)","type":"codeVoice"},{"text":".","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The memory ordering to apply on this operation."}]}],"name":"ordering"}]},{"kind":"content","content":[{"type":"heading","anchor":"return-value","text":"Return Value","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"A tuple "},{"type":"codeVoice","code":"(exchanged, original)"},{"type":"text","text":", where "},{"code":"exchanged","type":"codeVoice"},{"text":" is true if","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the exchange was successful, and "},{"type":"codeVoice","code":"original"},{"type":"text","text":" is the original value."}]}]},{"content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This operation performs the following algorithm as a single atomic"},{"type":"text","text":" "},{"type":"text","text":"transaction:"}]},{"syntax":null,"code":["atomic(self) { currentValue in","  let original = currentValue","  guard original == expected else { return (false, original) }","  currentValue = desired","  return (true, original)","}"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"(In this weak form, transient conditions may cause the ","type":"text"},{"code":"original == expected","type":"codeVoice"},{"type":"text","text":" check to sometimes return false when the two values are in fact"},{"text":" ","type":"text"},{"type":"text","text":"the same.)"}]}],"kind":"content"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"text":"Perform an atomic weak compare and exchange operation on the value","type":"text"},{"type":"text","text":" "},{"text":"referenced by ","type":"text"},{"code":"pointer","type":"codeVoice"},{"text":", applying the specified memory orderings.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"This compare-exchange variant is allowed to spuriously fail; it"},{"text":" ","type":"text"},{"text":"is designed to be called in a loop until it indicates a successful","type":"text"},{"type":"text","text":" "},{"text":"exchange has happened.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/swift-atomics.Atomics\/documentation\/Atomics","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafeMutableRawPointer","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafeMutableRawPointer\/AtomicValue-Implementations","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafeMutableRawPointer\/AtomicRepresentation","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafeMutableRawPointer\/AtomicRepresentation\/AtomicStorage-Implementations"]]},"kind":"symbol","references":{"doc://swift-atomics.Atomics/documentation/Atomics/Swift/UnsafeMutableRawPointer/AtomicRepresentation":{"type":"topic","title":"UnsafeMutableRawPointer.AtomicRepresentation","url":"\/documentation\/atomics\/swift\/unsafemutablerawpointer\/atomicrepresentation","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafeMutableRawPointer\/AtomicRepresentation","navigatorTitle":[{"kind":"identifier","text":"AtomicRepresentation"}],"abstract":[{"text":"The atomic storage representation for this value.","type":"text"}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AtomicRepresentation","kind":"identifier"}]},"doc://swift-atomics.Atomics/documentation/Atomics/Swift/UnsafeMutableRawPointer/AtomicRepresentation/atomicWeakCompareExchange(expected:desired:at:ordering:)":{"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"atomicWeakCompareExchange","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"expected"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics13AtomicStorageP5ValueQa"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"desired"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics13AtomicStorageP5ValueQa","text":"Value"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"at"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sp","text":"UnsafeMutablePointer","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"ordering"},{"kind":"text","text":": "},{"text":"AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","kind":"typeIdentifier"},{"text":") -> (exchanged","kind":"text"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":", original"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics13AtomicStorageP5ValueQa","text":"Value"},{"kind":"text","text":")"}],"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafeMutableRawPointer\/AtomicRepresentation\/atomicWeakCompareExchange(expected:desired:at:ordering:)","url":"\/documentation\/atomics\/swift\/unsafemutablerawpointer\/atomicrepresentation\/atomicweakcompareexchange(expected:desired:at:ordering:)","kind":"symbol","role":"symbol","type":"topic","title":"atomicWeakCompareExchange(expected:desired:at:ordering:)","abstract":[{"type":"text","text":"Perform an atomic weak compare and exchange operation on the value"},{"type":"text","text":" "},{"text":"referenced by ","type":"text"},{"code":"pointer","type":"codeVoice"},{"type":"text","text":", applying the specified memory orderings."},{"text":" ","type":"text"},{"text":"This compare-exchange variant is allowed to spuriously fail; it","type":"text"},{"text":" ","type":"text"},{"text":"is designed to be called in a loop until it indicates a successful","type":"text"},{"type":"text","text":" "},{"type":"text","text":"exchange has happened."}]},"doc://swift-atomics.Atomics/documentation/Atomics/Swift/UnsafeMutableRawPointer":{"kind":"symbol","role":"symbol","abstract":[],"fragments":[{"text":"extension","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:Sv","text":"UnsafeMutableRawPointer","kind":"identifier"}],"url":"\/documentation\/atomics\/swift\/unsafemutablerawpointer","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafeMutableRawPointer","navigatorTitle":[{"text":"UnsafeMutableRawPointer","kind":"identifier"}],"title":"UnsafeMutableRawPointer","type":"topic"},"doc://swift-atomics.Atomics/documentation/Atomics/AtomicStorage/Value":{"type":"topic","abstract":[{"text":"The type whose values this storage representation is representing.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"associatedtype"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Value"}],"required":true,"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicStorage\/Value","kind":"symbol","url":"\/documentation\/atomics\/atomicstorage\/value","title":"Value"},"doc://swift-atomics.Atomics/documentation/Atomics/AtomicUpdateOrdering":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomicUpdateOrdering"}],"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicUpdateOrdering","url":"\/documentation\/atomics\/atomicupdateordering","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AtomicUpdateOrdering"}],"type":"topic","abstract":[{"text":"Specifies the memory ordering semantics of an atomic read-modify-write","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"operation."}],"title":"AtomicUpdateOrdering"},"doc://swift-atomics.Atomics/documentation/Atomics/Swift":{"type":"topic","abstract":[],"role":"collection","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift","url":"\/documentation\/atomics\/swift","kind":"symbol","title":"Swift"},"doc://swift-atomics.Atomics/documentation/Atomics/Swift/UnsafeMutableRawPointer/AtomicRepresentation/AtomicStorage-Implementations":{"type":"topic","abstract":[],"kind":"article","title":"AtomicStorage Implementations","role":"collectionGroup","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafeMutableRawPointer\/AtomicRepresentation\/AtomicStorage-Implementations","url":"\/documentation\/atomics\/swift\/unsafemutablerawpointer\/atomicrepresentation\/atomicstorage-implementations"},"doc://swift-atomics.Atomics/documentation/Atomics":{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics","url":"\/documentation\/atomics","abstract":[{"type":"text","text":"An atomics library for Swift."}],"title":"Atomics","kind":"symbol","role":"collection","type":"topic"},"doc://swift-atomics.Atomics/documentation/Atomics/Swift/UnsafeMutableRawPointer/AtomicValue-Implementations":{"url":"\/documentation\/atomics\/swift\/unsafemutablerawpointer\/atomicvalue-implementations","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafeMutableRawPointer\/AtomicValue-Implementations","title":"AtomicValue Implementations","role":"collectionGroup","abstract":[],"kind":"article","type":"topic"}}}