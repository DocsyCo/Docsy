{"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"url":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/Int32\/AtomicRepresentation\/atomicCompareExchange(expected:desired:at:ordering:)-25prs","interfaceLanguage":"swift"},"metadata":{"extendedModule":"Atomics","externalID":"s:s5Int32V7AtomicsE20AtomicRepresentationV21atomicCompareExchange8expected7desired2at8orderingSb9exchanged_AB8originaltAB_ABSpyAEGAC0C14UpdateOrderingVtFZ","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"atomicCompareExchange"},{"kind":"text","text":"("},{"kind":"externalParam","text":"expected"},{"text":": ","kind":"text"},{"text":"Int32","kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"desired"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V","text":"Int32"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"at"},{"text":": ","kind":"text"},{"text":"UnsafeMutablePointer","kind":"typeIdentifier","preciseIdentifier":"s:Sp"},{"text":"<`Self`","kind":"text"},{"text":">, ","kind":"text"},{"text":"ordering","kind":"externalParam"},{"kind":"text","text":": "},{"text":"AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","kind":"typeIdentifier"},{"text":") -> (exchanged","kind":"text"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":", original","kind":"text"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V","text":"Int32"},{"text":")","kind":"text"}],"role":"symbol","roleHeading":"Type Method","symbolKind":"method","modules":[{"name":"Atomics"}],"title":"atomicCompareExchange(expected:desired:at:ordering:)"},"hierarchy":{"paths":[["doc:\/\/swift-atomics.Atomics\/documentation\/Atomics","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/Int32","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/Int32\/AtomicValue-Implementations","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/Int32\/AtomicRepresentation","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/Int32\/AtomicRepresentation\/AtomicStorage-Implementations"]]},"abstract":[{"type":"text","text":"Perform an atomic compare and exchange operation on the value referenced"},{"text":" ","type":"text"},{"type":"text","text":"by "},{"type":"codeVoice","code":"pointer"},{"type":"text","text":", applying the specified memory ordering."}],"sections":[],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atomics\/swift\/int32\/atomicrepresentation\/atomiccompareexchange(expected:desired:at:ordering:)-25prs"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"atomicCompareExchange","kind":"identifier"},{"kind":"text","text":"("},{"text":"expected","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier","text":"Int32"},{"kind":"text","text":", "},{"kind":"externalParam","text":"desired"},{"text":": ","kind":"text"},{"text":"Int32","preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"at","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"pointer"},{"text":": ","kind":"text"},{"text":"UnsafeMutablePointer","kind":"typeIdentifier","preciseIdentifier":"s:Sp"},{"text":"<`Self`","kind":"text"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"ordering"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","kind":"typeIdentifier","text":"AtomicUpdateOrdering"},{"kind":"text","text":") -> (exchanged"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":", original"},{"kind":"text","text":": "},{"text":"Int32","kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V"},{"text":")","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The expected current value.","type":"text"}]}],"name":"expected"},{"name":"desired","content":[{"type":"paragraph","inlineContent":[{"text":"The desired new value.","type":"text"}]}]},{"name":"pointer","content":[{"type":"paragraph","inlineContent":[{"text":"A memory location previously initialized with a value","type":"text"},{"text":" ","type":"text"},{"text":"returned by ","type":"text"},{"code":"prepareAtomicRepresentation(for:)","type":"codeVoice"},{"text":".","type":"text"}]}]},{"name":"ordering","content":[{"inlineContent":[{"text":"The memory ordering to apply on this operation.","type":"text"}],"type":"paragraph"}]}]},{"content":[{"level":2,"text":"Return Value","anchor":"return-value","type":"heading"},{"inlineContent":[{"text":"A tuple ","type":"text"},{"code":"(exchanged, original)","type":"codeVoice"},{"type":"text","text":", where "},{"type":"codeVoice","code":"exchanged"},{"type":"text","text":" is true if"},{"type":"text","text":" "},{"type":"text","text":"the exchange was successful, and "},{"code":"original","type":"codeVoice"},{"type":"text","text":" is the original value."}],"type":"paragraph"}],"kind":"content"},{"content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This operation performs the following algorithm as a single atomic"},{"text":" ","type":"text"},{"text":"transaction:","type":"text"}]},{"syntax":null,"code":["atomic(self) { currentValue in","  let original = currentValue","  guard original == expected else { return (false, original) }","  currentValue = desired","  return (true, original)","}"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"This method implements a “strong” compare and exchange operation","type":"text"},{"type":"text","text":" "},{"type":"text","text":"that does not permit spurious failures."}]}],"kind":"content"}],"references":{"doc://swift-atomics.Atomics/documentation/Atomics/Swift":{"type":"topic","abstract":[],"role":"collection","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift","url":"\/documentation\/atomics\/swift","kind":"symbol","title":"Swift"},"doc://swift-atomics.Atomics/documentation/Atomics/Swift/Int32":{"navigatorTitle":[{"kind":"identifier","text":"Int32"}],"abstract":[],"url":"\/documentation\/atomics\/swift\/int32","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/Int32","type":"topic","kind":"symbol","title":"Int32","fragments":[{"kind":"keyword","text":"extension"},{"text":" ","kind":"text"},{"text":"Int32","kind":"identifier","preciseIdentifier":"s:s5Int32V"}],"role":"symbol"},"doc://swift-atomics.Atomics/documentation/Atomics/Swift/Int32/AtomicRepresentation/AtomicStorage-Implementations":{"type":"topic","abstract":[],"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/Int32\/AtomicRepresentation\/AtomicStorage-Implementations","kind":"article","title":"AtomicStorage Implementations","role":"collectionGroup","url":"\/documentation\/atomics\/swift\/int32\/atomicrepresentation\/atomicstorage-implementations"},"doc://swift-atomics.Atomics/documentation/Atomics/Swift/Int32/AtomicValue-Implementations":{"abstract":[],"url":"\/documentation\/atomics\/swift\/int32\/atomicvalue-implementations","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/Int32\/AtomicValue-Implementations","type":"topic","kind":"article","title":"AtomicValue Implementations","role":"collectionGroup"},"doc://swift-atomics.Atomics/documentation/Atomics/Swift/Int32/AtomicRepresentation/atomicCompareExchange(expected:desired:at:ordering:)-25prs":{"type":"topic","url":"\/documentation\/atomics\/swift\/int32\/atomicrepresentation\/atomiccompareexchange(expected:desired:at:ordering:)-25prs","role":"symbol","kind":"symbol","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/Int32\/AtomicRepresentation\/atomicCompareExchange(expected:desired:at:ordering:)-25prs","abstract":[{"text":"Perform an atomic compare and exchange operation on the value referenced","type":"text"},{"type":"text","text":" "},{"text":"by ","type":"text"},{"type":"codeVoice","code":"pointer"},{"text":", applying the specified memory ordering.","type":"text"}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"atomicCompareExchange"},{"text":"(","kind":"text"},{"text":"expected","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s5Int32V","text":"Int32","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"desired"},{"kind":"text","text":": "},{"text":"Int32","kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V"},{"kind":"text","text":", "},{"kind":"externalParam","text":"at"},{"text":": ","kind":"text"},{"text":"UnsafeMutablePointer","kind":"typeIdentifier","preciseIdentifier":"s:Sp"},{"text":"<`Self`","kind":"text"},{"kind":"text","text":">, "},{"text":"ordering","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"text":") -> (exchanged","kind":"text"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"kind":"text","text":", original"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V","text":"Int32"},{"text":")","kind":"text"}],"title":"atomicCompareExchange(expected:desired:at:ordering:)"},"doc://swift-atomics.Atomics/documentation/Atomics":{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics","url":"\/documentation\/atomics","abstract":[{"type":"text","text":"An atomics library for Swift."}],"title":"Atomics","kind":"symbol","role":"collection","type":"topic"},"doc://swift-atomics.Atomics/documentation/Atomics/Swift/Int32/AtomicRepresentation":{"navigatorTitle":[{"text":"AtomicRepresentation","kind":"identifier"}],"abstract":[{"type":"text","text":"The atomic storage representation for this value."}],"url":"\/documentation\/atomics\/swift\/int32\/atomicrepresentation","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/Int32\/AtomicRepresentation","type":"topic","kind":"symbol","title":"Int32.AtomicRepresentation","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomicRepresentation"}],"role":"symbol"},"doc://swift-atomics.Atomics/documentation/Atomics/AtomicUpdateOrdering":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomicUpdateOrdering"}],"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicUpdateOrdering","url":"\/documentation\/atomics\/atomicupdateordering","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AtomicUpdateOrdering"}],"type":"topic","abstract":[{"text":"Specifies the memory ordering semantics of an atomic read-modify-write","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"operation."}],"title":"AtomicUpdateOrdering"}}}