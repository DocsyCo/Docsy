{"metadata":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"atomicWeakCompareExchange"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"expected"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SP7AtomicsE28AtomicOptionalRepresentationV5Valuea","text":"Value","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"desired"},{"kind":"text","text":": "},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:SP7AtomicsE28AtomicOptionalRepresentationV5Valuea"},{"text":", ","kind":"text"},{"text":"at","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UnsafeMutablePointer","kind":"typeIdentifier","preciseIdentifier":"s:Sp"},{"text":"<`Self`","kind":"text"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"successOrdering"},{"kind":"text","text":": "},{"text":"AtomicUpdateOrdering","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"kind":"text","text":", "},{"text":"failureOrdering","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Atomics18AtomicLoadOrderingV","text":"AtomicLoadOrdering","kind":"typeIdentifier"},{"text":") -> (exchanged","kind":"text"},{"kind":"text","text":": "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"kind":"text","text":", original"},{"kind":"text","text":": "},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:SP7AtomicsE28AtomicOptionalRepresentationV5Valuea"},{"kind":"text","text":")"}],"externalID":"s:SP7AtomicsE28AtomicOptionalRepresentationV25atomicWeakCompareExchange8expected7desired2at15successOrdering07failureM0Sb9exchanged_SPyxGSg8originaltAL_ALSpyACyx_GGAA0b6UpdateM0VAA0b4LoadM0VtFZ","extendedModule":"Atomics","symbolKind":"method","roleHeading":"Type Method","role":"symbol","modules":[{"name":"Atomics"}],"title":"atomicWeakCompareExchange(expected:desired:at:successOrdering:failureOrdering:)"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atomics\/swift\/unsafepointer\/atomicoptionalrepresentation\/atomicweakcompareexchange(expected:desired:at:successordering:failureordering:)"]}],"sections":[],"identifier":{"url":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafePointer\/AtomicOptionalRepresentation\/atomicWeakCompareExchange(expected:desired:at:successOrdering:failureOrdering:)","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"atomicWeakCompareExchange","kind":"identifier"},{"text":"(","kind":"text"},{"text":"expected","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:SP7AtomicsE28AtomicOptionalRepresentationV5Valuea","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafePointer\/AtomicOptionalRepresentation\/Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"desired"},{"kind":"text","text":": "},{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafePointer\/AtomicOptionalRepresentation\/Value","text":"Value","preciseIdentifier":"s:SP7AtomicsE28AtomicOptionalRepresentationV5Valuea","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"at"},{"kind":"text","text":" "},{"text":"pointer","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sp","text":"UnsafeMutablePointer","kind":"typeIdentifier"},{"kind":"text","text":"<`Self`"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"successOrdering"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicUpdateOrdering","kind":"typeIdentifier","text":"AtomicUpdateOrdering"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"failureOrdering"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicLoadOrdering","text":"AtomicLoadOrdering","preciseIdentifier":"s:7Atomics18AtomicLoadOrderingV","kind":"typeIdentifier"},{"text":") -> (exchanged","kind":"text"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":", original"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SP7AtomicsE28AtomicOptionalRepresentationV5Valuea","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafePointer\/AtomicOptionalRepresentation\/Value","text":"Value"},{"kind":"text","text":")"}]}]},{"parameters":[{"name":"expected","content":[{"inlineContent":[{"text":"The expected current value.","type":"text"}],"type":"paragraph"}]},{"name":"desired","content":[{"inlineContent":[{"type":"text","text":"The desired new value."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"A memory location previously initialized with a value"},{"text":" ","type":"text"},{"text":"returned by ","type":"text"},{"type":"codeVoice","code":"prepareAtomicRepresentation(for:)"},{"text":".","type":"text"}],"type":"paragraph"}],"name":"pointer"},{"name":"successOrdering","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The memory ordering to apply if this"},{"type":"text","text":" "},{"text":"operation performs the exchange.","type":"text"}]}]},{"name":"failureOrdering","content":[{"inlineContent":[{"type":"text","text":"The memory ordering to apply on this"},{"text":" ","type":"text"},{"type":"text","text":"operation does not perform the exchange."}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"text":"Return Value","anchor":"return-value","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"A tuple "},{"code":"(exchanged, original)","type":"codeVoice"},{"text":", where ","type":"text"},{"code":"exchanged","type":"codeVoice"},{"text":" is true if","type":"text"},{"text":" ","type":"text"},{"text":"the exchange was successful, and ","type":"text"},{"code":"original","type":"codeVoice"},{"type":"text","text":" is the original value."}],"type":"paragraph"}],"kind":"content"},{"kind":"content","content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"inlineContent":[{"text":"This operation performs the following algorithm as a single atomic","type":"text"},{"type":"text","text":" "},{"text":"transaction:","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["atomic(self) { currentValue in","  let original = currentValue","  guard original == expected else { return (false, original) }","  currentValue = desired","  return (true, original)","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"(In this weak form, transient conditions may cause the "},{"code":"original == expected","type":"codeVoice"},{"type":"text","text":" check to sometimes return false when the two values are in fact"},{"type":"text","text":" "},{"type":"text","text":"the same.)"}]},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"code":"successOrdering","type":"codeVoice"},{"type":"text","text":" argument specifies the memory ordering to use when the"},{"type":"text","text":" "},{"text":"operation manages to update the current value, while ","type":"text"},{"type":"codeVoice","code":"failureOrdering"},{"text":" ","type":"text"},{"text":"will be used when the operation leaves the value intact.","type":"text"}]}]}],"abstract":[{"type":"text","text":"Perform an atomic weak compare and exchange operation on the value"},{"text":" ","type":"text"},{"type":"text","text":"referenced by "},{"type":"codeVoice","code":"pointer"},{"text":", applying the specified success\/failure memory","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"orderings. This compare-exchange variant is allowed to spuriously fail; it"},{"text":" ","type":"text"},{"text":"is designed to be called in a loop until it indicates a successful","type":"text"},{"type":"text","text":" "},{"text":"exchange has happened.","type":"text"}],"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/swift-atomics.Atomics\/documentation\/Atomics","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafePointer","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafePointer\/AtomicOptionalWrappable-Implementations","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafePointer\/AtomicOptionalRepresentation","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafePointer\/AtomicOptionalRepresentation\/AtomicStorage-Implementations"]]},"references":{"doc://swift-atomics.Atomics/documentation/Atomics/Swift/UnsafePointer/AtomicOptionalRepresentation/atomicWeakCompareExchange(expected:desired:at:successOrdering:failureOrdering:)":{"abstract":[{"text":"Perform an atomic weak compare and exchange operation on the value","type":"text"},{"type":"text","text":" "},{"type":"text","text":"referenced by "},{"code":"pointer","type":"codeVoice"},{"text":", applying the specified success\/failure memory","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"orderings. This compare-exchange variant is allowed to spuriously fail; it"},{"type":"text","text":" "},{"type":"text","text":"is designed to be called in a loop until it indicates a successful"},{"text":" ","type":"text"},{"type":"text","text":"exchange has happened."}],"url":"\/documentation\/atomics\/swift\/unsafepointer\/atomicoptionalrepresentation\/atomicweakcompareexchange(expected:desired:at:successordering:failureordering:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"atomicWeakCompareExchange","kind":"identifier"},{"kind":"text","text":"("},{"text":"expected","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SP7AtomicsE28AtomicOptionalRepresentationV5Valuea","text":"Value","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"desired"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SP7AtomicsE28AtomicOptionalRepresentationV5Valuea","kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"at"},{"text":": ","kind":"text"},{"text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp","kind":"typeIdentifier"},{"text":"<`Self`","kind":"text"},{"kind":"text","text":">, "},{"text":"successOrdering","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering"},{"text":", ","kind":"text"},{"text":"failureOrdering","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"AtomicLoadOrdering","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics18AtomicLoadOrderingV"},{"kind":"text","text":") -> (exchanged"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":", original","kind":"text"},{"kind":"text","text":": "},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:SP7AtomicsE28AtomicOptionalRepresentationV5Valuea"},{"text":")","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafePointer\/AtomicOptionalRepresentation\/atomicWeakCompareExchange(expected:desired:at:successOrdering:failureOrdering:)","title":"atomicWeakCompareExchange(expected:desired:at:successOrdering:failureOrdering:)","type":"topic","role":"symbol"},"doc://swift-atomics.Atomics/documentation/Atomics/Swift/UnsafePointer":{"title":"UnsafePointer","abstract":[],"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafePointer","role":"symbol","fragments":[{"text":"extension","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","preciseIdentifier":"s:SP","text":"UnsafePointer"}],"kind":"symbol","type":"topic","url":"\/documentation\/atomics\/swift\/unsafepointer","navigatorTitle":[{"text":"UnsafePointer","kind":"identifier"}]},"doc://swift-atomics.Atomics/documentation/Atomics/Swift/UnsafePointer/AtomicOptionalRepresentation":{"url":"\/documentation\/atomics\/swift\/unsafepointer\/atomicoptionalrepresentation","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AtomicOptionalRepresentation","kind":"identifier"}],"navigatorTitle":[{"text":"AtomicOptionalRepresentation","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"The atomic storage representation for "},{"type":"codeVoice","code":"Optional<Self>"},{"text":".","type":"text"}],"role":"symbol","title":"UnsafePointer.AtomicOptionalRepresentation","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafePointer\/AtomicOptionalRepresentation"},"doc://swift-atomics.Atomics/documentation/Atomics/Swift":{"type":"topic","abstract":[],"role":"collection","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift","url":"\/documentation\/atomics\/swift","kind":"symbol","title":"Swift"},"doc://swift-atomics.Atomics/documentation/Atomics/Swift/UnsafePointer/AtomicOptionalRepresentation/Value":{"url":"\/documentation\/atomics\/swift\/unsafepointer\/atomicoptionalrepresentation\/value","abstract":[{"text":"The type whose values this storage representation is representing.","type":"text"}],"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"text":"Value","kind":"identifier"}],"navigatorTitle":[{"text":"Value","kind":"identifier"}],"type":"topic","title":"UnsafePointer.AtomicOptionalRepresentation.Value","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafePointer\/AtomicOptionalRepresentation\/Value"},"doc://swift-atomics.Atomics/documentation/Atomics/AtomicUpdateOrdering":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomicUpdateOrdering"}],"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicUpdateOrdering","url":"\/documentation\/atomics\/atomicupdateordering","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AtomicUpdateOrdering"}],"type":"topic","abstract":[{"text":"Specifies the memory ordering semantics of an atomic read-modify-write","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"operation."}],"title":"AtomicUpdateOrdering"},"doc://swift-atomics.Atomics/documentation/Atomics/AtomicLoadOrdering":{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicLoadOrdering","url":"\/documentation\/atomics\/atomicloadordering","abstract":[{"text":"Specifies the memory ordering semantics of an atomic load operation.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AtomicLoadOrdering","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"AtomicLoadOrdering"}],"title":"AtomicLoadOrdering","kind":"symbol","role":"symbol","type":"topic"},"doc://swift-atomics.Atomics/documentation/Atomics/Swift/UnsafePointer/AtomicOptionalRepresentation/AtomicStorage-Implementations":{"title":"AtomicStorage Implementations","url":"\/documentation\/atomics\/swift\/unsafepointer\/atomicoptionalrepresentation\/atomicstorage-implementations","abstract":[],"role":"collectionGroup","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafePointer\/AtomicOptionalRepresentation\/AtomicStorage-Implementations","kind":"article","type":"topic"},"doc://swift-atomics.Atomics/documentation/Atomics/Swift/UnsafePointer/AtomicOptionalWrappable-Implementations":{"url":"\/documentation\/atomics\/swift\/unsafepointer\/atomicoptionalwrappable-implementations","type":"topic","kind":"article","abstract":[],"role":"collectionGroup","title":"AtomicOptionalWrappable Implementations","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafePointer\/AtomicOptionalWrappable-Implementations"},"doc://swift-atomics.Atomics/documentation/Atomics":{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics","url":"\/documentation\/atomics","abstract":[{"type":"text","text":"An atomics library for Swift."}],"title":"Atomics","kind":"symbol","role":"collection","type":"topic"}}}