{"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"type":"text","text":"Perform an atomic weak compare and exchange operation on the value"},{"text":" ","type":"text"},{"type":"text","text":"referenced by "},{"code":"pointer","type":"codeVoice"},{"text":", applying the specified success\/failure memory","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"orderings. This compare-exchange variant is allowed to spuriously fail; it"},{"text":" ","type":"text"},{"text":"is designed to be called in a loop until it indicates a successful","type":"text"},{"type":"text","text":" "},{"text":"exchange has happened.","type":"text"}],"identifier":{"url":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafePointer\/AtomicRepresentation\/atomicWeakCompareExchange(expected:desired:at:successOrdering:failureOrdering:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/swift-atomics.Atomics\/documentation\/Atomics","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafePointer","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafePointer\/AtomicValue-Implementations","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafePointer\/AtomicRepresentation","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafePointer\/AtomicRepresentation\/AtomicStorage-Implementations"]]},"sections":[],"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"atomicWeakCompareExchange","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"expected"},{"text":": ","kind":"text"},{"text":"Value","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafePointer\/AtomicRepresentation\/Value","kind":"typeIdentifier","preciseIdentifier":"s:SP7AtomicsE20AtomicRepresentationV5Valuea"},{"kind":"text","text":", "},{"text":"desired","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Value","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafePointer\/AtomicRepresentation\/Value","preciseIdentifier":"s:SP7AtomicsE20AtomicRepresentationV5Valuea"},{"text":", ","kind":"text"},{"text":"at","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"pointer"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"text":"<`Self`","kind":"text"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"successOrdering"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"failureOrdering"},{"kind":"text","text":": "},{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicLoadOrdering","kind":"typeIdentifier","text":"AtomicLoadOrdering","preciseIdentifier":"s:7Atomics18AtomicLoadOrderingV"},{"text":") -> (exchanged","kind":"text"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":", original"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafePointer\/AtomicRepresentation\/Value","preciseIdentifier":"s:SP7AtomicsE20AtomicRepresentationV5Valuea","text":"Value"},{"kind":"text","text":")"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"expected","content":[{"type":"paragraph","inlineContent":[{"text":"The expected current value.","type":"text"}]}]},{"name":"desired","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The desired new value."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"A memory location previously initialized with a value","type":"text"},{"type":"text","text":" "},{"type":"text","text":"returned by "},{"type":"codeVoice","code":"prepareAtomicRepresentation(for:)"},{"type":"text","text":"."}]}],"name":"pointer"},{"name":"successOrdering","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The memory ordering to apply if this"},{"text":" ","type":"text"},{"text":"operation performs the exchange.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"The memory ordering to apply on this"},{"type":"text","text":" "},{"text":"operation does not perform the exchange.","type":"text"}],"type":"paragraph"}],"name":"failureOrdering"}]},{"content":[{"level":2,"text":"Return Value","anchor":"return-value","type":"heading"},{"inlineContent":[{"type":"text","text":"A tuple "},{"code":"(exchanged, original)","type":"codeVoice"},{"text":", where ","type":"text"},{"type":"codeVoice","code":"exchanged"},{"type":"text","text":" is true if"},{"type":"text","text":" "},{"text":"the exchange was successful, and ","type":"text"},{"type":"codeVoice","code":"original"},{"text":" is the original value.","type":"text"}],"type":"paragraph"}],"kind":"content"},{"content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"This operation performs the following algorithm as a single atomic","type":"text"},{"type":"text","text":" "},{"type":"text","text":"transaction:"}]},{"type":"codeListing","syntax":null,"code":["atomic(self) { currentValue in","  let original = currentValue","  guard original == expected else { return (false, original) }","  currentValue = desired","  return (true, original)","}"]},{"inlineContent":[{"type":"text","text":"(In this weak form, transient conditions may cause the "},{"code":"original == expected","type":"codeVoice"},{"text":" check to sometimes return false when the two values are in fact","type":"text"},{"type":"text","text":" "},{"text":"the same.)","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"successOrdering"},{"type":"text","text":" argument specifies the memory ordering to use when the"},{"text":" ","type":"text"},{"text":"operation manages to update the current value, while ","type":"text"},{"type":"codeVoice","code":"failureOrdering"},{"text":" ","type":"text"},{"type":"text","text":"will be used when the operation leaves the value intact."}],"type":"paragraph"}],"kind":"content"}],"metadata":{"modules":[{"name":"Atomics"}],"externalID":"s:SP7AtomicsE20AtomicRepresentationV25atomicWeakCompareExchange8expected7desired2at15successOrdering07failureL0Sb9exchanged_SPyxG8originaltAK_AKSpyACyx_GGAA0b6UpdateL0VAA0b4LoadL0VtFZ","extendedModule":"Atomics","roleHeading":"Type Method","symbolKind":"method","title":"atomicWeakCompareExchange(expected:desired:at:successOrdering:failureOrdering:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"atomicWeakCompareExchange","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"expected"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SP7AtomicsE20AtomicRepresentationV5Valuea","text":"Value"},{"text":", ","kind":"text"},{"text":"desired","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SP7AtomicsE20AtomicRepresentationV5Valuea","text":"Value"},{"text":", ","kind":"text"},{"text":"at","kind":"externalParam"},{"kind":"text","text":": "},{"text":"UnsafeMutablePointer","kind":"typeIdentifier","preciseIdentifier":"s:Sp"},{"text":"<`Self`","kind":"text"},{"kind":"text","text":">, "},{"text":"successOrdering","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"AtomicUpdateOrdering","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"text":", ","kind":"text"},{"text":"failureOrdering","kind":"externalParam"},{"kind":"text","text":": "},{"text":"AtomicLoadOrdering","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics18AtomicLoadOrderingV"},{"text":") -> (exchanged","kind":"text"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":", original","kind":"text"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:SP7AtomicsE20AtomicRepresentationV5Valuea"},{"text":")","kind":"text"}],"role":"symbol"},"variants":[{"paths":["\/documentation\/atomics\/swift\/unsafepointer\/atomicrepresentation\/atomicweakcompareexchange(expected:desired:at:successordering:failureordering:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://swift-atomics.Atomics/documentation/Atomics/Swift/UnsafePointer/AtomicRepresentation/atomicWeakCompareExchange(expected:desired:at:successOrdering:failureOrdering:)":{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafePointer\/AtomicRepresentation\/atomicWeakCompareExchange(expected:desired:at:successOrdering:failureOrdering:)","title":"atomicWeakCompareExchange(expected:desired:at:successOrdering:failureOrdering:)","url":"\/documentation\/atomics\/swift\/unsafepointer\/atomicrepresentation\/atomicweakcompareexchange(expected:desired:at:successordering:failureordering:)","role":"symbol","type":"topic","abstract":[{"text":"Perform an atomic weak compare and exchange operation on the value","type":"text"},{"type":"text","text":" "},{"text":"referenced by ","type":"text"},{"type":"codeVoice","code":"pointer"},{"text":", applying the specified success\/failure memory","type":"text"},{"type":"text","text":" "},{"text":"orderings. This compare-exchange variant is allowed to spuriously fail; it","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"is designed to be called in a loop until it indicates a successful"},{"type":"text","text":" "},{"type":"text","text":"exchange has happened."}],"kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"atomicWeakCompareExchange"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"expected"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SP7AtomicsE20AtomicRepresentationV5Valuea","kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"text":"desired","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Value","preciseIdentifier":"s:SP7AtomicsE20AtomicRepresentationV5Valuea","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"at","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sp","text":"UnsafeMutablePointer","kind":"typeIdentifier"},{"text":"<`Self`","kind":"text"},{"kind":"text","text":">, "},{"text":"successOrdering","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"failureOrdering","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics18AtomicLoadOrderingV","text":"AtomicLoadOrdering"},{"text":") -> (exchanged","kind":"text"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":", original","kind":"text"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:SP7AtomicsE20AtomicRepresentationV5Valuea"},{"text":")","kind":"text"}]},"doc://swift-atomics.Atomics/documentation/Atomics/Swift/UnsafePointer/AtomicRepresentation":{"url":"\/documentation\/atomics\/swift\/unsafepointer\/atomicrepresentation","navigatorTitle":[{"text":"AtomicRepresentation","kind":"identifier"}],"abstract":[{"text":"The atomic storage representation for this value.","type":"text"}],"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafePointer\/AtomicRepresentation","title":"UnsafePointer.AtomicRepresentation","type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomicRepresentation"}],"kind":"symbol"},"doc://swift-atomics.Atomics/documentation/Atomics/Swift/UnsafePointer/AtomicRepresentation/AtomicStorage-Implementations":{"url":"\/documentation\/atomics\/swift\/unsafepointer\/atomicrepresentation\/atomicstorage-implementations","kind":"article","abstract":[],"role":"collectionGroup","title":"AtomicStorage Implementations","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafePointer\/AtomicRepresentation\/AtomicStorage-Implementations","type":"topic"},"doc://swift-atomics.Atomics/documentation/Atomics/Swift/UnsafePointer":{"title":"UnsafePointer","abstract":[],"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafePointer","role":"symbol","fragments":[{"text":"extension","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","preciseIdentifier":"s:SP","text":"UnsafePointer"}],"kind":"symbol","type":"topic","url":"\/documentation\/atomics\/swift\/unsafepointer","navigatorTitle":[{"text":"UnsafePointer","kind":"identifier"}]},"doc://swift-atomics.Atomics/documentation/Atomics/Swift/UnsafePointer/AtomicRepresentation/Value":{"title":"UnsafePointer.AtomicRepresentation.Value","type":"topic","abstract":[{"text":"The type whose values this storage representation is representing.","type":"text"}],"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafePointer\/AtomicRepresentation\/Value","url":"\/documentation\/atomics\/swift\/unsafepointer\/atomicrepresentation\/value","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"text":"Value","kind":"identifier"}],"navigatorTitle":[{"text":"Value","kind":"identifier"}]},"doc://swift-atomics.Atomics/documentation/Atomics/AtomicUpdateOrdering":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomicUpdateOrdering"}],"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicUpdateOrdering","url":"\/documentation\/atomics\/atomicupdateordering","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AtomicUpdateOrdering"}],"type":"topic","abstract":[{"text":"Specifies the memory ordering semantics of an atomic read-modify-write","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"operation."}],"title":"AtomicUpdateOrdering"},"doc://swift-atomics.Atomics/documentation/Atomics":{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics","url":"\/documentation\/atomics","abstract":[{"type":"text","text":"An atomics library for Swift."}],"title":"Atomics","kind":"symbol","role":"collection","type":"topic"},"doc://swift-atomics.Atomics/documentation/Atomics/Swift/UnsafePointer/AtomicValue-Implementations":{"title":"AtomicValue Implementations","type":"topic","abstract":[],"url":"\/documentation\/atomics\/swift\/unsafepointer\/atomicvalue-implementations","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafePointer\/AtomicValue-Implementations","role":"collectionGroup","kind":"article"},"doc://swift-atomics.Atomics/documentation/Atomics/AtomicLoadOrdering":{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicLoadOrdering","url":"\/documentation\/atomics\/atomicloadordering","abstract":[{"text":"Specifies the memory ordering semantics of an atomic load operation.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AtomicLoadOrdering","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"AtomicLoadOrdering"}],"title":"AtomicLoadOrdering","kind":"symbol","role":"symbol","type":"topic"},"doc://swift-atomics.Atomics/documentation/Atomics/Swift":{"type":"topic","abstract":[],"role":"collection","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift","url":"\/documentation\/atomics\/swift","kind":"symbol","title":"Swift"}}}