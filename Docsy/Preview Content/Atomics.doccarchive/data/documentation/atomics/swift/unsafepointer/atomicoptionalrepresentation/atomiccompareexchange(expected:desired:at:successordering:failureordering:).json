{"hierarchy":{"paths":[["doc:\/\/swift-atomics.Atomics\/documentation\/Atomics","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafePointer","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafePointer\/AtomicOptionalWrappable-Implementations","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafePointer\/AtomicOptionalRepresentation","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafePointer\/AtomicOptionalRepresentation\/AtomicStorage-Implementations"]]},"identifier":{"url":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafePointer\/AtomicOptionalRepresentation\/atomicCompareExchange(expected:desired:at:successOrdering:failureOrdering:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Perform an atomic compare and exchange operation on the value referenced"},{"text":" ","type":"text"},{"text":"by ","type":"text"},{"type":"codeVoice","code":"pointer"},{"text":", applying the specified success\/failure memory orderings.","type":"text"}],"kind":"symbol","metadata":{"role":"symbol","symbolKind":"method","roleHeading":"Type Method","modules":[{"name":"Atomics"}],"externalID":"s:SP7AtomicsE28AtomicOptionalRepresentationV21atomicCompareExchange8expected7desired2at15successOrdering07failureL0Sb9exchanged_SPyxGSg8originaltAL_ALSpyACyx_GGAA0b6UpdateL0VAA0b4LoadL0VtFZ","title":"atomicCompareExchange(expected:desired:at:successOrdering:failureOrdering:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"atomicCompareExchange"},{"text":"(","kind":"text"},{"text":"expected","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:SP7AtomicsE28AtomicOptionalRepresentationV5Valuea"},{"kind":"text","text":", "},{"text":"desired","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:SP7AtomicsE28AtomicOptionalRepresentationV5Valuea"},{"kind":"text","text":", "},{"text":"at","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sp","text":"UnsafeMutablePointer"},{"text":"<`Self`","kind":"text"},{"kind":"text","text":">, "},{"text":"successOrdering","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"failureOrdering","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics18AtomicLoadOrderingV","text":"AtomicLoadOrdering"},{"text":") -> (exchanged","kind":"text"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":", original","kind":"text"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SP7AtomicsE28AtomicOptionalRepresentationV5Valuea","text":"Value","kind":"typeIdentifier"},{"text":")","kind":"text"}],"extendedModule":"Atomics"},"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"atomicCompareExchange","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"expected"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SP7AtomicsE28AtomicOptionalRepresentationV5Valuea","kind":"typeIdentifier","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafePointer\/AtomicOptionalRepresentation\/Value","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"desired"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:SP7AtomicsE28AtomicOptionalRepresentationV5Valuea","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafePointer\/AtomicOptionalRepresentation\/Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"at"},{"text":" ","kind":"text"},{"text":"pointer","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sp","kind":"typeIdentifier","text":"UnsafeMutablePointer"},{"text":"<`Self`","kind":"text"},{"kind":"text","text":">, "},{"text":"successOrdering","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicUpdateOrdering","text":"AtomicUpdateOrdering"},{"text":", ","kind":"text"},{"text":"failureOrdering","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics18AtomicLoadOrderingV","text":"AtomicLoadOrdering","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicLoadOrdering"},{"kind":"text","text":") -> (exchanged"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":", original"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SP7AtomicsE28AtomicOptionalRepresentationV5Valuea","text":"Value","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafePointer\/AtomicOptionalRepresentation\/Value"},{"text":")","kind":"text"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The expected current value."}],"type":"paragraph"}],"name":"expected"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The desired new value."}]}],"name":"desired"},{"name":"pointer","content":[{"inlineContent":[{"text":"A memory location previously initialized with a value","type":"text"},{"type":"text","text":" "},{"type":"text","text":"returned by "},{"code":"prepareSelf(for:)","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}]},{"name":"successOrdering","content":[{"type":"paragraph","inlineContent":[{"text":"The memory ordering to apply if this","type":"text"},{"type":"text","text":" "},{"type":"text","text":"operation performs the exchange."}]}]},{"name":"failureOrdering","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The memory ordering to apply on this"},{"type":"text","text":" "},{"type":"text","text":"operation does not perform the exchange."}]}]}]},{"kind":"content","content":[{"type":"heading","anchor":"return-value","text":"Return Value","level":2},{"type":"paragraph","inlineContent":[{"text":"A tuple ","type":"text"},{"code":"(exchanged, original)","type":"codeVoice"},{"type":"text","text":", where "},{"type":"codeVoice","code":"exchanged"},{"type":"text","text":" is true if"},{"text":" ","type":"text"},{"text":"the exchange was successful, and ","type":"text"},{"type":"codeVoice","code":"original"},{"text":" is the original value.","type":"text"}]}]},{"kind":"content","content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"inlineContent":[{"text":"This operation performs the following algorithm as a single atomic","type":"text"},{"type":"text","text":" "},{"text":"transaction:","type":"text"}],"type":"paragraph"},{"code":["atomic(self) { currentValue in","  let original = currentValue","  guard original == expected else { return (false, original) }","  currentValue = desired","  return (true, original)","}"],"syntax":null,"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"successOrdering"},{"type":"text","text":" argument specifies the memory ordering to use when"},{"text":" ","type":"text"},{"text":"the operation manages to update the current value, while ","type":"text"},{"type":"codeVoice","code":"failureOrdering"},{"text":" ","type":"text"},{"type":"text","text":"will be used when the operation leaves the value intact."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method implements a “strong” compare and exchange operation"},{"text":" ","type":"text"},{"text":"that does not permit spurious failures.","type":"text"}]}]}],"variants":[{"paths":["\/documentation\/atomics\/swift\/unsafepointer\/atomicoptionalrepresentation\/atomiccompareexchange(expected:desired:at:successordering:failureordering:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://swift-atomics.Atomics/documentation/Atomics/Swift/UnsafePointer/AtomicOptionalRepresentation/atomicCompareExchange(expected:desired:at:successOrdering:failureOrdering:)":{"url":"\/documentation\/atomics\/swift\/unsafepointer\/atomicoptionalrepresentation\/atomiccompareexchange(expected:desired:at:successordering:failureordering:)","type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafePointer\/AtomicOptionalRepresentation\/atomicCompareExchange(expected:desired:at:successOrdering:failureOrdering:)","abstract":[{"type":"text","text":"Perform an atomic compare and exchange operation on the value referenced"},{"type":"text","text":" "},{"type":"text","text":"by "},{"code":"pointer","type":"codeVoice"},{"text":", applying the specified success\/failure memory orderings.","type":"text"}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"atomicCompareExchange"},{"kind":"text","text":"("},{"text":"expected","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:SP7AtomicsE28AtomicOptionalRepresentationV5Valuea"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"desired"},{"kind":"text","text":": "},{"text":"Value","preciseIdentifier":"s:SP7AtomicsE28AtomicOptionalRepresentationV5Valuea","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"at","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sp","text":"UnsafeMutablePointer"},{"text":"<`Self`","kind":"text"},{"text":">, ","kind":"text"},{"text":"successOrdering","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"text":", ","kind":"text"},{"text":"failureOrdering","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics18AtomicLoadOrderingV","text":"AtomicLoadOrdering"},{"text":") -> (exchanged","kind":"text"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":", original"},{"text":": ","kind":"text"},{"text":"Value","preciseIdentifier":"s:SP7AtomicsE28AtomicOptionalRepresentationV5Valuea","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"atomicCompareExchange(expected:desired:at:successOrdering:failureOrdering:)"},"doc://swift-atomics.Atomics/documentation/Atomics/Swift/UnsafePointer/AtomicOptionalRepresentation/AtomicStorage-Implementations":{"title":"AtomicStorage Implementations","url":"\/documentation\/atomics\/swift\/unsafepointer\/atomicoptionalrepresentation\/atomicstorage-implementations","abstract":[],"role":"collectionGroup","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafePointer\/AtomicOptionalRepresentation\/AtomicStorage-Implementations","kind":"article","type":"topic"},"doc://swift-atomics.Atomics/documentation/Atomics":{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics","url":"\/documentation\/atomics","abstract":[{"type":"text","text":"An atomics library for Swift."}],"title":"Atomics","kind":"symbol","role":"collection","type":"topic"},"doc://swift-atomics.Atomics/documentation/Atomics/Swift/UnsafePointer":{"title":"UnsafePointer","abstract":[],"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafePointer","role":"symbol","fragments":[{"text":"extension","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","preciseIdentifier":"s:SP","text":"UnsafePointer"}],"kind":"symbol","type":"topic","url":"\/documentation\/atomics\/swift\/unsafepointer","navigatorTitle":[{"text":"UnsafePointer","kind":"identifier"}]},"doc://swift-atomics.Atomics/documentation/Atomics/Swift/UnsafePointer/AtomicOptionalRepresentation":{"url":"\/documentation\/atomics\/swift\/unsafepointer\/atomicoptionalrepresentation","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AtomicOptionalRepresentation","kind":"identifier"}],"navigatorTitle":[{"text":"AtomicOptionalRepresentation","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"The atomic storage representation for "},{"type":"codeVoice","code":"Optional<Self>"},{"text":".","type":"text"}],"role":"symbol","title":"UnsafePointer.AtomicOptionalRepresentation","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafePointer\/AtomicOptionalRepresentation"},"doc://swift-atomics.Atomics/documentation/Atomics/AtomicLoadOrdering":{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicLoadOrdering","url":"\/documentation\/atomics\/atomicloadordering","abstract":[{"text":"Specifies the memory ordering semantics of an atomic load operation.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AtomicLoadOrdering","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"AtomicLoadOrdering"}],"title":"AtomicLoadOrdering","kind":"symbol","role":"symbol","type":"topic"},"doc://swift-atomics.Atomics/documentation/Atomics/Swift/UnsafePointer/AtomicOptionalRepresentation/Value":{"url":"\/documentation\/atomics\/swift\/unsafepointer\/atomicoptionalrepresentation\/value","abstract":[{"text":"The type whose values this storage representation is representing.","type":"text"}],"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"text":"Value","kind":"identifier"}],"navigatorTitle":[{"text":"Value","kind":"identifier"}],"type":"topic","title":"UnsafePointer.AtomicOptionalRepresentation.Value","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafePointer\/AtomicOptionalRepresentation\/Value"},"doc://swift-atomics.Atomics/documentation/Atomics/AtomicUpdateOrdering":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomicUpdateOrdering"}],"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicUpdateOrdering","url":"\/documentation\/atomics\/atomicupdateordering","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AtomicUpdateOrdering"}],"type":"topic","abstract":[{"text":"Specifies the memory ordering semantics of an atomic read-modify-write","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"operation."}],"title":"AtomicUpdateOrdering"},"doc://swift-atomics.Atomics/documentation/Atomics/Swift":{"type":"topic","abstract":[],"role":"collection","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift","url":"\/documentation\/atomics\/swift","kind":"symbol","title":"Swift"},"doc://swift-atomics.Atomics/documentation/Atomics/Swift/UnsafePointer/AtomicOptionalWrappable-Implementations":{"url":"\/documentation\/atomics\/swift\/unsafepointer\/atomicoptionalwrappable-implementations","type":"topic","kind":"article","abstract":[],"role":"collectionGroup","title":"AtomicOptionalWrappable Implementations","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafePointer\/AtomicOptionalWrappable-Implementations"}}}