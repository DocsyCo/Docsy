{"abstract":[{"type":"text","text":"Perform an atomic weak compare and exchange operation on the value"},{"type":"text","text":" "},{"text":"referenced by ","type":"text"},{"type":"codeVoice","code":"pointer"},{"type":"text","text":", applying the specified success\/failure memory"},{"text":" ","type":"text"},{"type":"text","text":"orderings. This compare-exchange variant is allowed to spuriously fail; it"},{"type":"text","text":" "},{"text":"is designed to be called in a loop until it indicates a successful","type":"text"},{"text":" ","type":"text"},{"text":"exchange has happened.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"atomicWeakCompareExchange"},{"kind":"text","text":"("},{"text":"expected","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s5Int16V","text":"Int16","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"desired","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Int16","kind":"typeIdentifier","preciseIdentifier":"s:s5Int16V"},{"text":", ","kind":"text"},{"text":"at","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"pointer"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sp","kind":"typeIdentifier","text":"UnsafeMutablePointer"},{"text":"<`Self`","kind":"text"},{"text":">, ","kind":"text"},{"text":"successOrdering","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"AtomicUpdateOrdering","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"text":", ","kind":"text"},{"text":"failureOrdering","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Atomics18AtomicLoadOrderingV","text":"AtomicLoadOrdering","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicLoadOrdering","kind":"typeIdentifier"},{"text":") -> (exchanged","kind":"text"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":", original"},{"text":": ","kind":"text"},{"text":"Int16","kind":"typeIdentifier","preciseIdentifier":"s:s5Int16V"},{"kind":"text","text":")"}],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The expected current value.","type":"text"}]}],"name":"expected"},{"content":[{"type":"paragraph","inlineContent":[{"text":"The desired new value.","type":"text"}]}],"name":"desired"},{"name":"pointer","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A memory location previously initialized with a value"},{"type":"text","text":" "},{"text":"returned by ","type":"text"},{"type":"codeVoice","code":"prepareAtomicRepresentation(for:)"},{"text":".","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"The memory ordering to apply if this","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"operation performs the exchange."}]}],"name":"successOrdering"},{"name":"failureOrdering","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The memory ordering to apply on this"},{"text":" ","type":"text"},{"text":"operation does not perform the exchange.","type":"text"}]}]}]},{"kind":"content","content":[{"level":2,"text":"Return Value","type":"heading","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"A tuple ","type":"text"},{"type":"codeVoice","code":"(exchanged, original)"},{"type":"text","text":", where "},{"code":"exchanged","type":"codeVoice"},{"type":"text","text":" is true if"},{"type":"text","text":" "},{"type":"text","text":"the exchange was successful, and "},{"code":"original","type":"codeVoice"},{"type":"text","text":" is the original value."}]}]},{"content":[{"anchor":"discussion","type":"heading","text":"Discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"This operation performs the following algorithm as a single atomic"},{"type":"text","text":" "},{"text":"transaction:","type":"text"}]},{"code":["atomic(self) { currentValue in","  let original = currentValue","  guard original == expected else { return (false, original) }","  currentValue = desired","  return (true, original)","}"],"type":"codeListing","syntax":null},{"type":"paragraph","inlineContent":[{"text":"(In this weak form, transient conditions may cause the ","type":"text"},{"type":"codeVoice","code":"original == expected"},{"text":" check to sometimes return false when the two values are in fact","type":"text"},{"text":" ","type":"text"},{"text":"the same.)","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"successOrdering"},{"text":" argument specifies the memory ordering to use when the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"operation manages to update the current value, while "},{"code":"failureOrdering","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"will be used when the operation leaves the value intact."}]}],"kind":"content"}],"variants":[{"paths":["\/documentation\/atomics\/swift\/int16\/atomicrepresentation\/atomicweakcompareexchange(expected:desired:at:successordering:failureordering:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/Int16\/AtomicRepresentation\/atomicWeakCompareExchange(expected:desired:at:successOrdering:failureOrdering:)"},"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/swift-atomics.Atomics\/documentation\/Atomics","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/Int16","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/Int16\/AtomicValue-Implementations","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/Int16\/AtomicRepresentation","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/Int16\/AtomicRepresentation\/AtomicStorage-Implementations"]]},"metadata":{"modules":[{"name":"Atomics"}],"title":"atomicWeakCompareExchange(expected:desired:at:successOrdering:failureOrdering:)","role":"symbol","roleHeading":"Type Method","symbolKind":"method","externalID":"s:s5Int16V7AtomicsE20AtomicRepresentationV25atomicWeakCompareExchange8expected7desired2at15successOrdering07failureM0Sb9exchanged_AB8originaltAB_ABSpyAEGAC0c6UpdateM0VAC0c4LoadM0VtFZ","extendedModule":"Atomics","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"atomicWeakCompareExchange","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"expected"},{"text":": ","kind":"text"},{"text":"Int16","preciseIdentifier":"s:s5Int16V","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"desired","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s5Int16V","text":"Int16","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"at"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sp","text":"UnsafeMutablePointer"},{"kind":"text","text":"<`Self`"},{"kind":"text","text":">, "},{"text":"successOrdering","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","kind":"typeIdentifier","text":"AtomicUpdateOrdering"},{"kind":"text","text":", "},{"text":"failureOrdering","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Atomics18AtomicLoadOrderingV","text":"AtomicLoadOrdering","kind":"typeIdentifier"},{"text":") -> (exchanged","kind":"text"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":", original","kind":"text"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int16","preciseIdentifier":"s:s5Int16V"},{"text":")","kind":"text"}]},"references":{"doc://swift-atomics.Atomics/documentation/Atomics/Swift/Int16":{"fragments":[{"kind":"keyword","text":"extension"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Int16","preciseIdentifier":"s:s5Int16V"}],"url":"\/documentation\/atomics\/swift\/int16","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/Int16","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Int16"}],"type":"topic","title":"Int16","abstract":[]},"doc://swift-atomics.Atomics/documentation/Atomics/Swift/Int16/AtomicRepresentation/atomicWeakCompareExchange(expected:desired:at:successOrdering:failureOrdering:)":{"url":"\/documentation\/atomics\/swift\/int16\/atomicrepresentation\/atomicweakcompareexchange(expected:desired:at:successordering:failureordering:)","title":"atomicWeakCompareExchange(expected:desired:at:successOrdering:failureOrdering:)","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/Int16\/AtomicRepresentation\/atomicWeakCompareExchange(expected:desired:at:successOrdering:failureOrdering:)","abstract":[{"type":"text","text":"Perform an atomic weak compare and exchange operation on the value"},{"type":"text","text":" "},{"type":"text","text":"referenced by "},{"code":"pointer","type":"codeVoice"},{"text":", applying the specified success\/failure memory","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"orderings. This compare-exchange variant is allowed to spuriously fail; it"},{"text":" ","type":"text"},{"text":"is designed to be called in a loop until it indicates a successful","type":"text"},{"type":"text","text":" "},{"text":"exchange has happened.","type":"text"}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"atomicWeakCompareExchange","kind":"identifier"},{"text":"(","kind":"text"},{"text":"expected","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int16","preciseIdentifier":"s:s5Int16V"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"desired"},{"text":": ","kind":"text"},{"text":"Int16","preciseIdentifier":"s:s5Int16V","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"at","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sp","text":"UnsafeMutablePointer","kind":"typeIdentifier"},{"text":"<`Self`","kind":"text"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"successOrdering"},{"text":": ","kind":"text"},{"text":"AtomicUpdateOrdering","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"kind":"text","text":", "},{"text":"failureOrdering","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics18AtomicLoadOrderingV","text":"AtomicLoadOrdering"},{"text":") -> (exchanged","kind":"text"},{"kind":"text","text":": "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":", original","kind":"text"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5Int16V","text":"Int16"},{"text":")","kind":"text"}],"role":"symbol","kind":"symbol","type":"topic"},"doc://swift-atomics.Atomics/documentation/Atomics/Swift/Int16/AtomicValue-Implementations":{"abstract":[],"role":"collectionGroup","title":"AtomicValue Implementations","url":"\/documentation\/atomics\/swift\/int16\/atomicvalue-implementations","type":"topic","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/Int16\/AtomicValue-Implementations","kind":"article"},"doc://swift-atomics.Atomics/documentation/Atomics/AtomicUpdateOrdering":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomicUpdateOrdering"}],"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicUpdateOrdering","url":"\/documentation\/atomics\/atomicupdateordering","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AtomicUpdateOrdering"}],"type":"topic","abstract":[{"text":"Specifies the memory ordering semantics of an atomic read-modify-write","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"operation."}],"title":"AtomicUpdateOrdering"},"doc://swift-atomics.Atomics/documentation/Atomics/AtomicLoadOrdering":{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicLoadOrdering","url":"\/documentation\/atomics\/atomicloadordering","abstract":[{"text":"Specifies the memory ordering semantics of an atomic load operation.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AtomicLoadOrdering","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"AtomicLoadOrdering"}],"title":"AtomicLoadOrdering","kind":"symbol","role":"symbol","type":"topic"},"doc://swift-atomics.Atomics/documentation/Atomics":{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics","url":"\/documentation\/atomics","abstract":[{"type":"text","text":"An atomics library for Swift."}],"title":"Atomics","kind":"symbol","role":"collection","type":"topic"},"doc://swift-atomics.Atomics/documentation/Atomics/Swift":{"type":"topic","abstract":[],"role":"collection","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift","url":"\/documentation\/atomics\/swift","kind":"symbol","title":"Swift"},"doc://swift-atomics.Atomics/documentation/Atomics/Swift/Int16/AtomicRepresentation/AtomicStorage-Implementations":{"title":"AtomicStorage Implementations","abstract":[],"kind":"article","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/Int16\/AtomicRepresentation\/AtomicStorage-Implementations","url":"\/documentation\/atomics\/swift\/int16\/atomicrepresentation\/atomicstorage-implementations","type":"topic","role":"collectionGroup"},"doc://swift-atomics.Atomics/documentation/Atomics/Swift/Int16/AtomicRepresentation":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AtomicRepresentation","kind":"identifier"}],"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/Int16\/AtomicRepresentation","url":"\/documentation\/atomics\/swift\/int16\/atomicrepresentation","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"AtomicRepresentation","kind":"identifier"}],"type":"topic","title":"Int16.AtomicRepresentation","abstract":[{"type":"text","text":"The atomic storage representation for this value."}]}}}