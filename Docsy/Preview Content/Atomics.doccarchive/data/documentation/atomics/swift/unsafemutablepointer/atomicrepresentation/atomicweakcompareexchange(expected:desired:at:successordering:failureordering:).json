{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"atomicWeakCompareExchange","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"expected"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sp7AtomicsE20AtomicRepresentationV5Valuea","kind":"typeIdentifier","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafeMutablePointer\/AtomicRepresentation\/Value","text":"Value"},{"kind":"text","text":", "},{"text":"desired","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafeMutablePointer\/AtomicRepresentation\/Value","preciseIdentifier":"s:Sp7AtomicsE20AtomicRepresentationV5Valuea","text":"Value"},{"text":", ","kind":"text"},{"text":"at","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"pointer"},{"kind":"text","text":": "},{"text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp","kind":"typeIdentifier"},{"text":"<`Self`","kind":"text"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"successOrdering"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"AtomicUpdateOrdering","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"text":", ","kind":"text"},{"text":"failureOrdering","kind":"externalParam"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicLoadOrdering","kind":"typeIdentifier","text":"AtomicLoadOrdering","preciseIdentifier":"s:7Atomics18AtomicLoadOrderingV"},{"text":") -> (exchanged","kind":"text"},{"kind":"text","text":": "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"kind":"text","text":", original"},{"text":": ","kind":"text"},{"text":"Value","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafeMutablePointer\/AtomicRepresentation\/Value","kind":"typeIdentifier","preciseIdentifier":"s:Sp7AtomicsE20AtomicRepresentationV5Valuea"},{"text":")","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The expected current value."}]}],"name":"expected"},{"name":"desired","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The desired new value."}]}]},{"name":"pointer","content":[{"inlineContent":[{"text":"A memory location previously initialized with a value","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"returned by "},{"type":"codeVoice","code":"prepareAtomicRepresentation(for:)"},{"type":"text","text":"."}],"type":"paragraph"}]},{"name":"successOrdering","content":[{"inlineContent":[{"text":"The memory ordering to apply if this","type":"text"},{"type":"text","text":" "},{"text":"operation performs the exchange.","type":"text"}],"type":"paragraph"}]},{"name":"failureOrdering","content":[{"inlineContent":[{"text":"The memory ordering to apply on this","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"operation does not perform the exchange."}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"anchor":"return-value","text":"Return Value","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"A tuple "},{"type":"codeVoice","code":"(exchanged, original)"},{"type":"text","text":", where "},{"code":"exchanged","type":"codeVoice"},{"text":" is true if","type":"text"},{"type":"text","text":" "},{"text":"the exchange was successful, and ","type":"text"},{"type":"codeVoice","code":"original"},{"text":" is the original value.","type":"text"}],"type":"paragraph"}],"kind":"content"},{"content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"inlineContent":[{"text":"This operation performs the following algorithm as a single atomic","type":"text"},{"text":" ","type":"text"},{"text":"transaction:","type":"text"}],"type":"paragraph"},{"code":["atomic(self) { currentValue in","  let original = currentValue","  guard original == expected else { return (false, original) }","  currentValue = desired","  return (true, original)","}"],"syntax":null,"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"(In this weak form, transient conditions may cause the ","type":"text"},{"code":"original == expected","type":"codeVoice"},{"text":" check to sometimes return false when the two values are in fact","type":"text"},{"text":" ","type":"text"},{"text":"the same.)","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"successOrdering"},{"text":" argument specifies the memory ordering to use when the","type":"text"},{"type":"text","text":" "},{"text":"operation manages to update the current value, while ","type":"text"},{"type":"codeVoice","code":"failureOrdering"},{"type":"text","text":" "},{"text":"will be used when the operation leaves the value intact.","type":"text"}]}],"kind":"content"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafeMutablePointer\/AtomicRepresentation\/atomicWeakCompareExchange(expected:desired:at:successOrdering:failureOrdering:)"},"hierarchy":{"paths":[["doc:\/\/swift-atomics.Atomics\/documentation\/Atomics","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafeMutablePointer","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafeMutablePointer\/AtomicValue-Implementations","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafeMutablePointer\/AtomicRepresentation","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafeMutablePointer\/AtomicRepresentation\/AtomicStorage-Implementations"]]},"kind":"symbol","sections":[],"metadata":{"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"atomicWeakCompareExchange","kind":"identifier"},{"kind":"text","text":"("},{"text":"expected","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sp7AtomicsE20AtomicRepresentationV5Valuea","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"desired"},{"text":": ","kind":"text"},{"text":"Value","preciseIdentifier":"s:Sp7AtomicsE20AtomicRepresentationV5Valuea","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"at","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UnsafeMutablePointer","kind":"typeIdentifier","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<`Self`"},{"kind":"text","text":">, "},{"text":"successOrdering","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering"},{"text":", ","kind":"text"},{"text":"failureOrdering","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Atomics18AtomicLoadOrderingV","text":"AtomicLoadOrdering","kind":"typeIdentifier"},{"text":") -> (exchanged","kind":"text"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":", original"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:Sp7AtomicsE20AtomicRepresentationV5Valuea"},{"kind":"text","text":")"}],"roleHeading":"Type Method","title":"atomicWeakCompareExchange(expected:desired:at:successOrdering:failureOrdering:)","extendedModule":"Atomics","role":"symbol","externalID":"s:Sp7AtomicsE20AtomicRepresentationV25atomicWeakCompareExchange8expected7desired2at15successOrdering07failureL0Sb9exchanged_SpyxG8originaltAK_AKSpyACyx_GGAA0b6UpdateL0VAA0b4LoadL0VtFZ","symbolKind":"method","modules":[{"name":"Atomics"}]},"abstract":[{"type":"text","text":"Perform an atomic weak compare and exchange operation on the value"},{"type":"text","text":" "},{"text":"referenced by ","type":"text"},{"code":"pointer","type":"codeVoice"},{"type":"text","text":", applying the specified success\/failure memory"},{"type":"text","text":" "},{"text":"orderings. This compare-exchange variant is allowed to spuriously fail; it","type":"text"},{"text":" ","type":"text"},{"text":"is designed to be called in a loop until it indicates a successful","type":"text"},{"type":"text","text":" "},{"text":"exchange has happened.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atomics\/swift\/unsafemutablepointer\/atomicrepresentation\/atomicweakcompareexchange(expected:desired:at:successordering:failureordering:)"]}],"references":{"doc://swift-atomics.Atomics/documentation/Atomics/Swift/UnsafeMutablePointer/AtomicRepresentation/AtomicStorage-Implementations":{"type":"topic","title":"AtomicStorage Implementations","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafeMutablePointer\/AtomicRepresentation\/AtomicStorage-Implementations","abstract":[],"kind":"article","role":"collectionGroup","url":"\/documentation\/atomics\/swift\/unsafemutablepointer\/atomicrepresentation\/atomicstorage-implementations"},"doc://swift-atomics.Atomics/documentation/Atomics/AtomicUpdateOrdering":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomicUpdateOrdering"}],"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicUpdateOrdering","url":"\/documentation\/atomics\/atomicupdateordering","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AtomicUpdateOrdering"}],"type":"topic","abstract":[{"text":"Specifies the memory ordering semantics of an atomic read-modify-write","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"operation."}],"title":"AtomicUpdateOrdering"},"doc://swift-atomics.Atomics/documentation/Atomics":{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics","url":"\/documentation\/atomics","abstract":[{"type":"text","text":"An atomics library for Swift."}],"title":"Atomics","kind":"symbol","role":"collection","type":"topic"},"doc://swift-atomics.Atomics/documentation/Atomics/Swift":{"type":"topic","abstract":[],"role":"collection","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift","url":"\/documentation\/atomics\/swift","kind":"symbol","title":"Swift"},"doc://swift-atomics.Atomics/documentation/Atomics/Swift/UnsafeMutablePointer/AtomicRepresentation/atomicWeakCompareExchange(expected:desired:at:successOrdering:failureOrdering:)":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"atomicWeakCompareExchange"},{"text":"(","kind":"text"},{"text":"expected","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sp7AtomicsE20AtomicRepresentationV5Valuea","text":"Value"},{"kind":"text","text":", "},{"text":"desired","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:Sp7AtomicsE20AtomicRepresentationV5Valuea"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"at"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sp","text":"UnsafeMutablePointer","kind":"typeIdentifier"},{"kind":"text","text":"<`Self`"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"successOrdering"},{"kind":"text","text":": "},{"text":"AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"failureOrdering","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics18AtomicLoadOrderingV","text":"AtomicLoadOrdering"},{"text":") -> (exchanged","kind":"text"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":", original"},{"text":": ","kind":"text"},{"text":"Value","preciseIdentifier":"s:Sp7AtomicsE20AtomicRepresentationV5Valuea","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol","type":"topic","role":"symbol","title":"atomicWeakCompareExchange(expected:desired:at:successOrdering:failureOrdering:)","abstract":[{"type":"text","text":"Perform an atomic weak compare and exchange operation on the value"},{"text":" ","type":"text"},{"type":"text","text":"referenced by "},{"type":"codeVoice","code":"pointer"},{"type":"text","text":", applying the specified success\/failure memory"},{"text":" ","type":"text"},{"type":"text","text":"orderings. This compare-exchange variant is allowed to spuriously fail; it"},{"type":"text","text":" "},{"text":"is designed to be called in a loop until it indicates a successful","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"exchange has happened."}],"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafeMutablePointer\/AtomicRepresentation\/atomicWeakCompareExchange(expected:desired:at:successOrdering:failureOrdering:)","url":"\/documentation\/atomics\/swift\/unsafemutablepointer\/atomicrepresentation\/atomicweakcompareexchange(expected:desired:at:successordering:failureordering:)"},"doc://swift-atomics.Atomics/documentation/Atomics/AtomicLoadOrdering":{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicLoadOrdering","url":"\/documentation\/atomics\/atomicloadordering","abstract":[{"text":"Specifies the memory ordering semantics of an atomic load operation.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AtomicLoadOrdering","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"AtomicLoadOrdering"}],"title":"AtomicLoadOrdering","kind":"symbol","role":"symbol","type":"topic"},"doc://swift-atomics.Atomics/documentation/Atomics/Swift/UnsafeMutablePointer":{"title":"UnsafeMutablePointer","url":"\/documentation\/atomics\/swift\/unsafemutablepointer","type":"topic","abstract":[],"fragments":[{"text":"extension","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:Sp","text":"UnsafeMutablePointer","kind":"identifier"}],"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafeMutablePointer","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"UnsafeMutablePointer"}],"role":"symbol"},"doc://swift-atomics.Atomics/documentation/Atomics/Swift/UnsafeMutablePointer/AtomicRepresentation":{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafeMutablePointer\/AtomicRepresentation","role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/atomics\/swift\/unsafemutablepointer\/atomicrepresentation","navigatorTitle":[{"text":"AtomicRepresentation","kind":"identifier"}],"title":"UnsafeMutablePointer.AtomicRepresentation","abstract":[{"text":"The atomic storage representation for this value.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomicRepresentation"}]},"doc://swift-atomics.Atomics/documentation/Atomics/Swift/UnsafeMutablePointer/AtomicValue-Implementations":{"type":"topic","abstract":[],"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafeMutablePointer\/AtomicValue-Implementations","url":"\/documentation\/atomics\/swift\/unsafemutablepointer\/atomicvalue-implementations","kind":"article","title":"AtomicValue Implementations","role":"collectionGroup"},"doc://swift-atomics.Atomics/documentation/Atomics/Swift/UnsafeMutablePointer/AtomicRepresentation/Value":{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafeMutablePointer\/AtomicRepresentation\/Value","title":"UnsafeMutablePointer.AtomicRepresentation.Value","navigatorTitle":[{"text":"Value","kind":"identifier"}],"abstract":[{"text":"The type whose values this storage representation is representing.","type":"text"}],"kind":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Value"}],"url":"\/documentation\/atomics\/swift\/unsafemutablepointer\/atomicrepresentation\/value","type":"topic","role":"symbol"}}}