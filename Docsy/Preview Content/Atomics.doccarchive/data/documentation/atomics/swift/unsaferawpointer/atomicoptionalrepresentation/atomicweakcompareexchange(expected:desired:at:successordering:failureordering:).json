{"hierarchy":{"paths":[["doc:\/\/swift-atomics.Atomics\/documentation\/Atomics","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafeRawPointer","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafeRawPointer\/AtomicOptionalWrappable-Implementations","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafeRawPointer\/AtomicOptionalRepresentation","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafeRawPointer\/AtomicOptionalRepresentation\/AtomicStorage-Implementations"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"url":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafeRawPointer\/AtomicOptionalRepresentation\/atomicWeakCompareExchange(expected:desired:at:successOrdering:failureOrdering:)","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"atomicWeakCompareExchange","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"expected"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafeRawPointer\/AtomicOptionalRepresentation\/Value","preciseIdentifier":"s:SV7AtomicsE28AtomicOptionalRepresentationV5Valuea","text":"Value"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"desired"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafeRawPointer\/AtomicOptionalRepresentation\/Value","preciseIdentifier":"s:SV7AtomicsE28AtomicOptionalRepresentationV5Valuea"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"at"},{"text":" ","kind":"text"},{"text":"pointer","kind":"internalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sp","text":"UnsafeMutablePointer","kind":"typeIdentifier"},{"text":"<`Self`","kind":"text"},{"text":">, ","kind":"text"},{"text":"successOrdering","kind":"externalParam"},{"kind":"text","text":": "},{"text":"AtomicUpdateOrdering","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicUpdateOrdering","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"kind":"text","text":", "},{"text":"failureOrdering","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"AtomicLoadOrdering","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics18AtomicLoadOrderingV","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicLoadOrdering"},{"kind":"text","text":") -> (exchanged"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":", original","kind":"text"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SV7AtomicsE28AtomicOptionalRepresentationV5Valuea","text":"Value","kind":"typeIdentifier","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafeRawPointer\/AtomicOptionalRepresentation\/Value"},{"kind":"text","text":")"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"expected","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The expected current value."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The desired new value."}]}],"name":"desired"},{"name":"pointer","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A memory location previously initialized with a value"},{"text":" ","type":"text"},{"text":"returned by ","type":"text"},{"type":"codeVoice","code":"prepareAtomicRepresentation(for:)"},{"type":"text","text":"."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The memory ordering to apply if this"},{"type":"text","text":" "},{"type":"text","text":"operation performs the exchange."}]}],"name":"successOrdering"},{"name":"failureOrdering","content":[{"inlineContent":[{"text":"The memory ordering to apply on this","type":"text"},{"type":"text","text":" "},{"type":"text","text":"operation does not perform the exchange."}],"type":"paragraph"}]}]},{"content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"text":"A tuple ","type":"text"},{"type":"codeVoice","code":"(exchanged, original)"},{"type":"text","text":", where "},{"type":"codeVoice","code":"exchanged"},{"text":" is true if","type":"text"},{"type":"text","text":" "},{"text":"the exchange was successful, and ","type":"text"},{"type":"codeVoice","code":"original"},{"text":" is the original value.","type":"text"}]}],"kind":"content"},{"content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"This operation performs the following algorithm as a single atomic"},{"text":" ","type":"text"},{"text":"transaction:","type":"text"}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["atomic(self) { currentValue in","  let original = currentValue","  guard original == expected else { return (false, original) }","  currentValue = desired","  return (true, original)","}"]},{"inlineContent":[{"text":"(In this weak form, transient conditions may cause the ","type":"text"},{"type":"codeVoice","code":"original == expected"},{"text":" check to sometimes return false when the two values are in fact","type":"text"},{"type":"text","text":" "},{"text":"the same.)","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"The "},{"code":"successOrdering","type":"codeVoice"},{"type":"text","text":" argument specifies the memory ordering to use when the"},{"type":"text","text":" "},{"type":"text","text":"operation manages to update the current value, while "},{"code":"failureOrdering","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"will be used when the operation leaves the value intact."}],"type":"paragraph"}],"kind":"content"}],"abstract":[{"text":"Perform an atomic weak compare and exchange operation on the value","type":"text"},{"text":" ","type":"text"},{"text":"referenced by ","type":"text"},{"type":"codeVoice","code":"pointer"},{"type":"text","text":", applying the specified success\/failure memory"},{"type":"text","text":" "},{"type":"text","text":"orderings. This compare-exchange variant is allowed to spuriously fail; it"},{"text":" ","type":"text"},{"text":"is designed to be called in a loop until it indicates a successful","type":"text"},{"type":"text","text":" "},{"type":"text","text":"exchange has happened."}],"metadata":{"extendedModule":"Atomics","externalID":"s:SV7AtomicsE28AtomicOptionalRepresentationV25atomicWeakCompareExchange8expected7desired2at15successOrdering07failureM0Sb9exchanged_SVSg8originaltAK_AKSpyACGAA0b6UpdateM0VAA0b4LoadM0VtFZ","modules":[{"name":"Atomics"}],"title":"atomicWeakCompareExchange(expected:desired:at:successOrdering:failureOrdering:)","roleHeading":"Type Method","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"atomicWeakCompareExchange"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"expected"},{"kind":"text","text":": "},{"text":"Value","preciseIdentifier":"s:SV7AtomicsE28AtomicOptionalRepresentationV5Valuea","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"desired"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:SV7AtomicsE28AtomicOptionalRepresentationV5Valuea"},{"text":", ","kind":"text"},{"text":"at","kind":"externalParam"},{"kind":"text","text":": "},{"text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp","kind":"typeIdentifier"},{"text":"<`Self`","kind":"text"},{"kind":"text","text":">, "},{"text":"successOrdering","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering"},{"text":", ","kind":"text"},{"text":"failureOrdering","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"AtomicLoadOrdering","preciseIdentifier":"s:7Atomics18AtomicLoadOrderingV"},{"text":") -> (exchanged","kind":"text"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":", original","kind":"text"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SV7AtomicsE28AtomicOptionalRepresentationV5Valuea","text":"Value"},{"text":")","kind":"text"}],"role":"symbol","symbolKind":"method"},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atomics\/swift\/unsaferawpointer\/atomicoptionalrepresentation\/atomicweakcompareexchange(expected:desired:at:successordering:failureordering:)"]}],"kind":"symbol","references":{"doc://swift-atomics.Atomics/documentation/Atomics/Swift/UnsafeRawPointer/AtomicOptionalRepresentation":{"type":"topic","abstract":[{"text":"The atomic storage representation for ","type":"text"},{"type":"codeVoice","code":"Optional<Self>"},{"text":".","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"AtomicOptionalRepresentation","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AtomicOptionalRepresentation","kind":"identifier"}],"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafeRawPointer\/AtomicOptionalRepresentation","kind":"symbol","url":"\/documentation\/atomics\/swift\/unsaferawpointer\/atomicoptionalrepresentation","title":"UnsafeRawPointer.AtomicOptionalRepresentation"},"doc://swift-atomics.Atomics/documentation/Atomics/Swift/UnsafeRawPointer/AtomicOptionalWrappable-Implementations":{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafeRawPointer\/AtomicOptionalWrappable-Implementations","url":"\/documentation\/atomics\/swift\/unsaferawpointer\/atomicoptionalwrappable-implementations","kind":"article","role":"collectionGroup","type":"topic","abstract":[],"title":"AtomicOptionalWrappable Implementations"},"doc://swift-atomics.Atomics/documentation/Atomics/Swift/UnsafeRawPointer/AtomicOptionalRepresentation/atomicWeakCompareExchange(expected:desired:at:successOrdering:failureOrdering:)":{"type":"topic","role":"symbol","title":"atomicWeakCompareExchange(expected:desired:at:successOrdering:failureOrdering:)","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafeRawPointer\/AtomicOptionalRepresentation\/atomicWeakCompareExchange(expected:desired:at:successOrdering:failureOrdering:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"atomicWeakCompareExchange"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"expected"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:SV7AtomicsE28AtomicOptionalRepresentationV5Valuea"},{"text":", ","kind":"text"},{"text":"desired","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:SV7AtomicsE28AtomicOptionalRepresentationV5Valuea"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"at"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<`Self`"},{"kind":"text","text":">, "},{"text":"successOrdering","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"failureOrdering"},{"text":": ","kind":"text"},{"text":"AtomicLoadOrdering","preciseIdentifier":"s:7Atomics18AtomicLoadOrderingV","kind":"typeIdentifier"},{"kind":"text","text":") -> (exchanged"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":", original"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SV7AtomicsE28AtomicOptionalRepresentationV5Valuea","kind":"typeIdentifier","text":"Value"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Perform an atomic weak compare and exchange operation on the value"},{"text":" ","type":"text"},{"type":"text","text":"referenced by "},{"type":"codeVoice","code":"pointer"},{"type":"text","text":", applying the specified success\/failure memory"},{"type":"text","text":" "},{"text":"orderings. This compare-exchange variant is allowed to spuriously fail; it","type":"text"},{"type":"text","text":" "},{"text":"is designed to be called in a loop until it indicates a successful","type":"text"},{"text":" ","type":"text"},{"text":"exchange has happened.","type":"text"}],"url":"\/documentation\/atomics\/swift\/unsaferawpointer\/atomicoptionalrepresentation\/atomicweakcompareexchange(expected:desired:at:successordering:failureordering:)","kind":"symbol"},"doc://swift-atomics.Atomics/documentation/Atomics/Swift":{"type":"topic","abstract":[],"role":"collection","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift","url":"\/documentation\/atomics\/swift","kind":"symbol","title":"Swift"},"doc://swift-atomics.Atomics/documentation/Atomics/Swift/UnsafeRawPointer":{"fragments":[{"kind":"keyword","text":"extension"},{"text":" ","kind":"text"},{"kind":"identifier","preciseIdentifier":"s:SV","text":"UnsafeRawPointer"}],"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafeRawPointer","url":"\/documentation\/atomics\/swift\/unsaferawpointer","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"UnsafeRawPointer","kind":"identifier"}],"type":"topic","abstract":[],"title":"UnsafeRawPointer"},"doc://swift-atomics.Atomics/documentation/Atomics/AtomicUpdateOrdering":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomicUpdateOrdering"}],"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicUpdateOrdering","url":"\/documentation\/atomics\/atomicupdateordering","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AtomicUpdateOrdering"}],"type":"topic","abstract":[{"text":"Specifies the memory ordering semantics of an atomic read-modify-write","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"operation."}],"title":"AtomicUpdateOrdering"},"doc://swift-atomics.Atomics/documentation/Atomics/AtomicLoadOrdering":{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicLoadOrdering","url":"\/documentation\/atomics\/atomicloadordering","abstract":[{"text":"Specifies the memory ordering semantics of an atomic load operation.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AtomicLoadOrdering","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"AtomicLoadOrdering"}],"title":"AtomicLoadOrdering","kind":"symbol","role":"symbol","type":"topic"},"doc://swift-atomics.Atomics/documentation/Atomics":{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics","url":"\/documentation\/atomics","abstract":[{"type":"text","text":"An atomics library for Swift."}],"title":"Atomics","kind":"symbol","role":"collection","type":"topic"},"doc://swift-atomics.Atomics/documentation/Atomics/Swift/UnsafeRawPointer/AtomicOptionalRepresentation/Value":{"type":"topic","role":"symbol","kind":"symbol","title":"UnsafeRawPointer.AtomicOptionalRepresentation.Value","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafeRawPointer\/AtomicOptionalRepresentation\/Value","url":"\/documentation\/atomics\/swift\/unsaferawpointer\/atomicoptionalrepresentation\/value","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"text":"Value","kind":"identifier"}],"abstract":[{"text":"The type whose values this storage representation is representing.","type":"text"}],"navigatorTitle":[{"text":"Value","kind":"identifier"}]},"doc://swift-atomics.Atomics/documentation/Atomics/Swift/UnsafeRawPointer/AtomicOptionalRepresentation/AtomicStorage-Implementations":{"type":"topic","abstract":[],"role":"collectionGroup","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UnsafeRawPointer\/AtomicOptionalRepresentation\/AtomicStorage-Implementations","kind":"article","url":"\/documentation\/atomics\/swift\/unsaferawpointer\/atomicoptionalrepresentation\/atomicstorage-implementations","title":"AtomicStorage Implementations"}}}