{"schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"type":"text","text":"Perform an atomic compare and exchange operation on the value referenced"},{"type":"text","text":" "},{"text":"by ","type":"text"},{"code":"pointer","type":"codeVoice"},{"type":"text","text":", applying the specified memory ordering."}],"variants":[{"paths":["\/documentation\/atomics\/swift\/int64\/atomicrepresentation\/atomiccompareexchange(expected:desired:at:ordering:)-930xx"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"extendedModule":"Atomics","symbolKind":"method","role":"symbol","modules":[{"name":"Atomics"}],"externalID":"s:s5Int64V7AtomicsE20AtomicRepresentationV21atomicCompareExchange8expected7desired2at8orderingSb9exchanged_AB8originaltAB_ABSpyAEGAC0C14UpdateOrderingVtFZ","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"atomicCompareExchange","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"expected"},{"text":": ","kind":"text"},{"text":"Int64","kind":"typeIdentifier","preciseIdentifier":"s:s5Int64V"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"desired"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5Int64V","text":"Int64"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"at"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"text":"<`Self`","kind":"text"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"ordering"},{"kind":"text","text":": "},{"text":"AtomicUpdateOrdering","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"text":") -> (exchanged","kind":"text"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":", original"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Int64","preciseIdentifier":"s:s5Int64V"},{"kind":"text","text":")"}],"roleHeading":"Type Method","title":"atomicCompareExchange(expected:desired:at:ordering:)"},"hierarchy":{"paths":[["doc:\/\/swift-atomics.Atomics\/documentation\/Atomics","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/Int64","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/Int64\/AtomicValue-Implementations","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/Int64\/AtomicRepresentation","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/Int64\/AtomicRepresentation\/AtomicStorage-Implementations"]]},"identifier":{"url":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/Int64\/AtomicRepresentation\/atomicCompareExchange(expected:desired:at:ordering:)-930xx","interfaceLanguage":"swift"},"sections":[],"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"atomicCompareExchange"},{"kind":"text","text":"("},{"kind":"externalParam","text":"expected"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s5Int64V","text":"Int64","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"desired"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5Int64V","text":"Int64"},{"text":", ","kind":"text"},{"text":"at","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"pointer","kind":"internalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sp","kind":"typeIdentifier","text":"UnsafeMutablePointer"},{"kind":"text","text":"<`Self`"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"ordering"},{"kind":"text","text":": "},{"text":"AtomicUpdateOrdering","kind":"typeIdentifier","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"text":") -> (exchanged","kind":"text"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":", original","kind":"text"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s5Int64V","text":"Int64","kind":"typeIdentifier"},{"kind":"text","text":")"}]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The expected current value.","type":"text"}]}],"name":"expected"},{"name":"desired","content":[{"inlineContent":[{"text":"The desired new value.","type":"text"}],"type":"paragraph"}]},{"name":"pointer","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A memory location previously initialized with a value"},{"type":"text","text":" "},{"text":"returned by ","type":"text"},{"type":"codeVoice","code":"prepareAtomicRepresentation(for:)"},{"type":"text","text":"."}]}]},{"content":[{"inlineContent":[{"text":"The memory ordering to apply on this operation.","type":"text"}],"type":"paragraph"}],"name":"ordering"}],"kind":"parameters"},{"kind":"content","content":[{"text":"Return Value","type":"heading","level":2,"anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A tuple "},{"type":"codeVoice","code":"(exchanged, original)"},{"text":", where ","type":"text"},{"type":"codeVoice","code":"exchanged"},{"text":" is true if","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the exchange was successful, and "},{"type":"codeVoice","code":"original"},{"text":" is the original value.","type":"text"}]}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This operation performs the following algorithm as a single atomic"},{"type":"text","text":" "},{"text":"transaction:","type":"text"}]},{"code":["atomic(self) { currentValue in","  let original = currentValue","  guard original == expected else { return (false, original) }","  currentValue = desired","  return (true, original)","}"],"syntax":null,"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method implements a “strong” compare and exchange operation"},{"type":"text","text":" "},{"type":"text","text":"that does not permit spurious failures."}]}]}],"references":{"doc://swift-atomics.Atomics/documentation/Atomics/Swift/Int64":{"navigatorTitle":[{"kind":"identifier","text":"Int64"}],"url":"\/documentation\/atomics\/swift\/int64","kind":"symbol","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/Int64","role":"symbol","fragments":[{"kind":"keyword","text":"extension"},{"kind":"text","text":" "},{"text":"Int64","kind":"identifier","preciseIdentifier":"s:s5Int64V"}],"type":"topic","title":"Int64","abstract":[]},"doc://swift-atomics.Atomics/documentation/Atomics/Swift/Int64/AtomicValue-Implementations":{"url":"\/documentation\/atomics\/swift\/int64\/atomicvalue-implementations","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/Int64\/AtomicValue-Implementations","kind":"article","role":"collectionGroup","abstract":[],"title":"AtomicValue Implementations","type":"topic"},"doc://swift-atomics.Atomics/documentation/Atomics/Swift/Int64/AtomicRepresentation/AtomicStorage-Implementations":{"abstract":[],"url":"\/documentation\/atomics\/swift\/int64\/atomicrepresentation\/atomicstorage-implementations","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/Int64\/AtomicRepresentation\/AtomicStorage-Implementations","type":"topic","title":"AtomicStorage Implementations","kind":"article","role":"collectionGroup"},"doc://swift-atomics.Atomics/documentation/Atomics/Swift":{"type":"topic","abstract":[],"role":"collection","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift","url":"\/documentation\/atomics\/swift","kind":"symbol","title":"Swift"},"doc://swift-atomics.Atomics/documentation/Atomics/AtomicUpdateOrdering":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomicUpdateOrdering"}],"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicUpdateOrdering","url":"\/documentation\/atomics\/atomicupdateordering","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AtomicUpdateOrdering"}],"type":"topic","abstract":[{"text":"Specifies the memory ordering semantics of an atomic read-modify-write","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"operation."}],"title":"AtomicUpdateOrdering"},"doc://swift-atomics.Atomics/documentation/Atomics/Swift/Int64/AtomicRepresentation/atomicCompareExchange(expected:desired:at:ordering:)-930xx":{"type":"topic","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/Int64\/AtomicRepresentation\/atomicCompareExchange(expected:desired:at:ordering:)-930xx","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"atomicCompareExchange","kind":"identifier"},{"text":"(","kind":"text"},{"text":"expected","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int64","kind":"typeIdentifier","preciseIdentifier":"s:s5Int64V"},{"kind":"text","text":", "},{"kind":"externalParam","text":"desired"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s5Int64V","text":"Int64","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"at","kind":"externalParam"},{"kind":"text","text":": "},{"text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp","kind":"typeIdentifier"},{"text":"<`Self`","kind":"text"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"ordering"},{"kind":"text","text":": "},{"text":"AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","kind":"typeIdentifier"},{"text":") -> (exchanged","kind":"text"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":", original"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s5Int64V","text":"Int64","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/atomics\/swift\/int64\/atomicrepresentation\/atomiccompareexchange(expected:desired:at:ordering:)-930xx","kind":"symbol","role":"symbol","abstract":[{"text":"Perform an atomic compare and exchange operation on the value referenced","type":"text"},{"type":"text","text":" "},{"type":"text","text":"by "},{"type":"codeVoice","code":"pointer"},{"type":"text","text":", applying the specified memory ordering."}],"title":"atomicCompareExchange(expected:desired:at:ordering:)"},"doc://swift-atomics.Atomics/documentation/Atomics/Swift/Int64/AtomicRepresentation":{"type":"topic","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"AtomicRepresentation","kind":"identifier"}],"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/Int64\/AtomicRepresentation","abstract":[{"text":"The atomic storage representation for this value.","type":"text"}],"title":"Int64.AtomicRepresentation","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AtomicRepresentation","kind":"identifier"}],"url":"\/documentation\/atomics\/swift\/int64\/atomicrepresentation"},"doc://swift-atomics.Atomics/documentation/Atomics":{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics","url":"\/documentation\/atomics","abstract":[{"type":"text","text":"An atomics library for Swift."}],"title":"Atomics","kind":"symbol","role":"collection","type":"topic"}}}