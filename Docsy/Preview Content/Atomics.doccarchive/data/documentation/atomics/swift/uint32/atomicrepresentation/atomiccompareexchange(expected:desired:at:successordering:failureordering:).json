{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"atomicCompareExchange"},{"text":"(","kind":"text"},{"text":"expected","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s6UInt32V","text":"UInt32","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"desired"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s6UInt32V","text":"UInt32","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"at","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"pointer"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sp","text":"UnsafeMutablePointer"},{"text":"<`Self`","kind":"text"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"successOrdering"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicUpdateOrdering","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"failureOrdering","kind":"externalParam"},{"kind":"text","text":": "},{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicLoadOrdering","text":"AtomicLoadOrdering","preciseIdentifier":"s:7Atomics18AtomicLoadOrderingV","kind":"typeIdentifier"},{"kind":"text","text":") -> (exchanged"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":", original","kind":"text"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s6UInt32V","kind":"typeIdentifier","text":"UInt32"},{"kind":"text","text":")"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The expected current value."}]}],"name":"expected"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The desired new value."}]}],"name":"desired"},{"content":[{"inlineContent":[{"text":"A memory location previously initialized with a value","type":"text"},{"type":"text","text":" "},{"text":"returned by ","type":"text"},{"code":"prepareSelf(for:)","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}],"name":"pointer"},{"name":"successOrdering","content":[{"type":"paragraph","inlineContent":[{"text":"The memory ordering to apply if this","type":"text"},{"type":"text","text":" "},{"type":"text","text":"operation performs the exchange."}]}]},{"name":"failureOrdering","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The memory ordering to apply on this"},{"text":" ","type":"text"},{"type":"text","text":"operation does not perform the exchange."}]}]}]},{"kind":"content","content":[{"type":"heading","text":"Return Value","anchor":"return-value","level":2},{"type":"paragraph","inlineContent":[{"text":"A tuple ","type":"text"},{"code":"(exchanged, original)","type":"codeVoice"},{"text":", where ","type":"text"},{"type":"codeVoice","code":"exchanged"},{"type":"text","text":" is true if"},{"type":"text","text":" "},{"type":"text","text":"the exchange was successful, and "},{"type":"codeVoice","code":"original"},{"text":" is the original value.","type":"text"}]}]},{"content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"This operation performs the following algorithm as a single atomic","type":"text"},{"type":"text","text":" "},{"type":"text","text":"transaction:"}]},{"code":["atomic(self) { currentValue in","  let original = currentValue","  guard original == expected else { return (false, original) }","  currentValue = desired","  return (true, original)","}"],"syntax":null,"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"code":"successOrdering","type":"codeVoice"},{"text":" argument specifies the memory ordering to use when","type":"text"},{"text":" ","type":"text"},{"text":"the operation manages to update the current value, while ","type":"text"},{"code":"failureOrdering","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"will be used when the operation leaves the value intact."}]},{"type":"paragraph","inlineContent":[{"text":"This method implements a “strong” compare and exchange operation","type":"text"},{"text":" ","type":"text"},{"text":"that does not permit spurious failures.","type":"text"}]}],"kind":"content"}],"variants":[{"paths":["\/documentation\/atomics\/swift\/uint32\/atomicrepresentation\/atomiccompareexchange(expected:desired:at:successordering:failureordering:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/swift-atomics.Atomics\/documentation\/Atomics","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UInt32","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UInt32\/AtomicValue-Implementations","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UInt32\/AtomicRepresentation","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UInt32\/AtomicRepresentation\/AtomicStorage-Implementations"]]},"sections":[],"abstract":[{"text":"Perform an atomic compare and exchange operation on the value referenced","type":"text"},{"text":" ","type":"text"},{"text":"by ","type":"text"},{"type":"codeVoice","code":"pointer"},{"type":"text","text":", applying the specified success\/failure memory orderings."}],"metadata":{"extendedModule":"Atomics","modules":[{"name":"Atomics"}],"roleHeading":"Type Method","title":"atomicCompareExchange(expected:desired:at:successOrdering:failureOrdering:)","externalID":"s:s6UInt32V7AtomicsE20AtomicRepresentationV21atomicCompareExchange8expected7desired2at15successOrdering07failureL0Sb9exchanged_AB8originaltAB_ABSpyAEGAC0c6UpdateL0VAC0c4LoadL0VtFZ","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"atomicCompareExchange"},{"text":"(","kind":"text"},{"text":"expected","kind":"externalParam"},{"kind":"text","text":": "},{"text":"UInt32","preciseIdentifier":"s:s6UInt32V","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"desired"},{"kind":"text","text":": "},{"text":"UInt32","preciseIdentifier":"s:s6UInt32V","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"at","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UnsafeMutablePointer","kind":"typeIdentifier","preciseIdentifier":"s:Sp"},{"text":"<`Self`","kind":"text"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"successOrdering"},{"kind":"text","text":": "},{"text":"AtomicUpdateOrdering","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"text":", ","kind":"text"},{"text":"failureOrdering","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"AtomicLoadOrdering","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics18AtomicLoadOrderingV"},{"text":") -> (exchanged","kind":"text"},{"kind":"text","text":": "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":", original","kind":"text"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s6UInt32V","text":"UInt32","kind":"typeIdentifier"},{"kind":"text","text":")"}],"role":"symbol","symbolKind":"method"},"identifier":{"url":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UInt32\/AtomicRepresentation\/atomicCompareExchange(expected:desired:at:successOrdering:failureOrdering:)","interfaceLanguage":"swift"},"references":{"doc://swift-atomics.Atomics/documentation/Atomics/Swift/UInt32":{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UInt32","title":"UInt32","fragments":[{"kind":"keyword","text":"extension"},{"text":" ","kind":"text"},{"text":"UInt32","preciseIdentifier":"s:s6UInt32V","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"UInt32","kind":"identifier"}],"type":"topic","abstract":[],"url":"\/documentation\/atomics\/swift\/uint32","role":"symbol"},"doc://swift-atomics.Atomics/documentation/Atomics":{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics","url":"\/documentation\/atomics","abstract":[{"type":"text","text":"An atomics library for Swift."}],"title":"Atomics","kind":"symbol","role":"collection","type":"topic"},"doc://swift-atomics.Atomics/documentation/Atomics/Swift/UInt32/AtomicValue-Implementations":{"abstract":[],"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UInt32\/AtomicValue-Implementations","role":"collectionGroup","kind":"article","type":"topic","url":"\/documentation\/atomics\/swift\/uint32\/atomicvalue-implementations","title":"AtomicValue Implementations"},"doc://swift-atomics.Atomics/documentation/Atomics/Swift/UInt32/AtomicRepresentation":{"type":"topic","title":"UInt32.AtomicRepresentation","url":"\/documentation\/atomics\/swift\/uint32\/atomicrepresentation","role":"symbol","kind":"symbol","navigatorTitle":[{"text":"AtomicRepresentation","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomicRepresentation"}],"abstract":[{"type":"text","text":"The atomic storage representation for this value."}],"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UInt32\/AtomicRepresentation"},"doc://swift-atomics.Atomics/documentation/Atomics/Swift/UInt32/AtomicRepresentation/AtomicStorage-Implementations":{"abstract":[],"url":"\/documentation\/atomics\/swift\/uint32\/atomicrepresentation\/atomicstorage-implementations","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UInt32\/AtomicRepresentation\/AtomicStorage-Implementations","type":"topic","title":"AtomicStorage Implementations","kind":"article","role":"collectionGroup"},"doc://swift-atomics.Atomics/documentation/Atomics/Swift":{"type":"topic","abstract":[],"role":"collection","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift","url":"\/documentation\/atomics\/swift","kind":"symbol","title":"Swift"},"doc://swift-atomics.Atomics/documentation/Atomics/AtomicLoadOrdering":{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicLoadOrdering","url":"\/documentation\/atomics\/atomicloadordering","abstract":[{"text":"Specifies the memory ordering semantics of an atomic load operation.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AtomicLoadOrdering","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"AtomicLoadOrdering"}],"title":"AtomicLoadOrdering","kind":"symbol","role":"symbol","type":"topic"},"doc://swift-atomics.Atomics/documentation/Atomics/Swift/UInt32/AtomicRepresentation/atomicCompareExchange(expected:desired:at:successOrdering:failureOrdering:)":{"type":"topic","title":"atomicCompareExchange(expected:desired:at:successOrdering:failureOrdering:)","url":"\/documentation\/atomics\/swift\/uint32\/atomicrepresentation\/atomiccompareexchange(expected:desired:at:successordering:failureordering:)","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"atomicCompareExchange"},{"kind":"text","text":"("},{"text":"expected","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s6UInt32V","kind":"typeIdentifier","text":"UInt32"},{"kind":"text","text":", "},{"text":"desired","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s6UInt32V","kind":"typeIdentifier","text":"UInt32"},{"kind":"text","text":", "},{"text":"at","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp","kind":"typeIdentifier"},{"kind":"text","text":"<`Self`"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"successOrdering"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering"},{"text":", ","kind":"text"},{"text":"failureOrdering","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Atomics18AtomicLoadOrderingV","text":"AtomicLoadOrdering","kind":"typeIdentifier"},{"text":") -> (exchanged","kind":"text"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":", original"},{"kind":"text","text":": "},{"text":"UInt32","preciseIdentifier":"s:s6UInt32V","kind":"typeIdentifier"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Perform an atomic compare and exchange operation on the value referenced"},{"type":"text","text":" "},{"type":"text","text":"by "},{"code":"pointer","type":"codeVoice"},{"text":", applying the specified success\/failure memory orderings.","type":"text"}],"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UInt32\/AtomicRepresentation\/atomicCompareExchange(expected:desired:at:successOrdering:failureOrdering:)"},"doc://swift-atomics.Atomics/documentation/Atomics/AtomicUpdateOrdering":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomicUpdateOrdering"}],"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicUpdateOrdering","url":"\/documentation\/atomics\/atomicupdateordering","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AtomicUpdateOrdering"}],"type":"topic","abstract":[{"text":"Specifies the memory ordering semantics of an atomic read-modify-write","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"operation."}],"title":"AtomicUpdateOrdering"}}}