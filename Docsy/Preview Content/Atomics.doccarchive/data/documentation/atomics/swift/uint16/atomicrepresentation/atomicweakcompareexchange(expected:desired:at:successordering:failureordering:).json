{"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"atomicWeakCompareExchange"},{"text":"(","kind":"text"},{"text":"expected","kind":"externalParam"},{"kind":"text","text":": "},{"text":"UInt16","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt16V"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"desired"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s6UInt16V","text":"UInt16","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"at","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sp","kind":"typeIdentifier","text":"UnsafeMutablePointer"},{"text":"<`Self`","kind":"text"},{"text":">, ","kind":"text"},{"text":"successOrdering","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","kind":"typeIdentifier","text":"AtomicUpdateOrdering"},{"kind":"text","text":", "},{"text":"failureOrdering","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics18AtomicLoadOrderingV","text":"AtomicLoadOrdering"},{"text":") -> (exchanged","kind":"text"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":", original"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s6UInt16V","text":"UInt16"},{"text":")","kind":"text"}],"extendedModule":"Atomics","title":"atomicWeakCompareExchange(expected:desired:at:successOrdering:failureOrdering:)","externalID":"s:s6UInt16V7AtomicsE20AtomicRepresentationV25atomicWeakCompareExchange8expected7desired2at15successOrdering07failureM0Sb9exchanged_AB8originaltAB_ABSpyAEGAC0c6UpdateM0VAC0c4LoadM0VtFZ","modules":[{"name":"Atomics"}],"roleHeading":"Type Method","role":"symbol","symbolKind":"method"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UInt16\/AtomicRepresentation\/atomicWeakCompareExchange(expected:desired:at:successOrdering:failureOrdering:)"},"hierarchy":{"paths":[["doc:\/\/swift-atomics.Atomics\/documentation\/Atomics","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UInt16","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UInt16\/AtomicValue-Implementations","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UInt16\/AtomicRepresentation","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UInt16\/AtomicRepresentation\/AtomicStorage-Implementations"]]},"sections":[],"abstract":[{"text":"Perform an atomic weak compare and exchange operation on the value","type":"text"},{"type":"text","text":" "},{"type":"text","text":"referenced by "},{"code":"pointer","type":"codeVoice"},{"text":", applying the specified success\/failure memory","type":"text"},{"type":"text","text":" "},{"type":"text","text":"orderings. This compare-exchange variant is allowed to spuriously fail; it"},{"text":" ","type":"text"},{"type":"text","text":"is designed to be called in a loop until it indicates a successful"},{"type":"text","text":" "},{"type":"text","text":"exchange has happened."}],"kind":"symbol","variants":[{"paths":["\/documentation\/atomics\/swift\/uint16\/atomicrepresentation\/atomicweakcompareexchange(expected:desired:at:successordering:failureordering:)"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"atomicWeakCompareExchange"},{"kind":"text","text":"("},{"text":"expected","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt16","preciseIdentifier":"s:s6UInt16V","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"desired"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s6UInt16V","text":"UInt16","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"at","kind":"externalParam"},{"kind":"text","text":" "},{"text":"pointer","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp","kind":"typeIdentifier"},{"kind":"text","text":"<`Self`"},{"kind":"text","text":">, "},{"text":"successOrdering","kind":"externalParam"},{"kind":"text","text":": "},{"text":"AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicUpdateOrdering","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"failureOrdering","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Atomics18AtomicLoadOrderingV","kind":"typeIdentifier","text":"AtomicLoadOrdering","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicLoadOrdering"},{"text":") -> (exchanged","kind":"text"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":", original"},{"text":": ","kind":"text"},{"text":"UInt16","preciseIdentifier":"s:s6UInt16V","kind":"typeIdentifier"},{"kind":"text","text":")"}]}]},{"parameters":[{"name":"expected","content":[{"inlineContent":[{"type":"text","text":"The expected current value."}],"type":"paragraph"}]},{"name":"desired","content":[{"type":"paragraph","inlineContent":[{"text":"The desired new value.","type":"text"}]}]},{"name":"pointer","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A memory location previously initialized with a value"},{"type":"text","text":" "},{"type":"text","text":"returned by "},{"code":"prepareAtomicRepresentation(for:)","type":"codeVoice"},{"type":"text","text":"."}]}]},{"name":"successOrdering","content":[{"inlineContent":[{"text":"The memory ordering to apply if this","type":"text"},{"text":" ","type":"text"},{"text":"operation performs the exchange.","type":"text"}],"type":"paragraph"}]},{"name":"failureOrdering","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The memory ordering to apply on this"},{"text":" ","type":"text"},{"type":"text","text":"operation does not perform the exchange."}]}]}],"kind":"parameters"},{"kind":"content","content":[{"anchor":"return-value","level":2,"text":"Return Value","type":"heading"},{"inlineContent":[{"text":"A tuple ","type":"text"},{"type":"codeVoice","code":"(exchanged, original)"},{"type":"text","text":", where "},{"type":"codeVoice","code":"exchanged"},{"text":" is true if","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the exchange was successful, and "},{"code":"original","type":"codeVoice"},{"type":"text","text":" is the original value."}],"type":"paragraph"}]},{"kind":"content","content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"inlineContent":[{"text":"This operation performs the following algorithm as a single atomic","type":"text"},{"type":"text","text":" "},{"type":"text","text":"transaction:"}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["atomic(self) { currentValue in","  let original = currentValue","  guard original == expected else { return (false, original) }","  currentValue = desired","  return (true, original)","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"(In this weak form, transient conditions may cause the "},{"type":"codeVoice","code":"original == expected"},{"text":" check to sometimes return false when the two values are in fact","type":"text"},{"type":"text","text":" "},{"text":"the same.)","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"code":"successOrdering","type":"codeVoice"},{"type":"text","text":" argument specifies the memory ordering to use when the"},{"type":"text","text":" "},{"text":"operation manages to update the current value, while ","type":"text"},{"type":"codeVoice","code":"failureOrdering"},{"text":" ","type":"text"},{"type":"text","text":"will be used when the operation leaves the value intact."}]}]}],"references":{"doc://swift-atomics.Atomics/documentation/Atomics":{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics","url":"\/documentation\/atomics","abstract":[{"type":"text","text":"An atomics library for Swift."}],"title":"Atomics","kind":"symbol","role":"collection","type":"topic"},"doc://swift-atomics.Atomics/documentation/Atomics/Swift/UInt16/AtomicRepresentation/AtomicStorage-Implementations":{"type":"topic","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UInt16\/AtomicRepresentation\/AtomicStorage-Implementations","title":"AtomicStorage Implementations","kind":"article","role":"collectionGroup","url":"\/documentation\/atomics\/swift\/uint16\/atomicrepresentation\/atomicstorage-implementations","abstract":[]},"doc://swift-atomics.Atomics/documentation/Atomics/Swift":{"type":"topic","abstract":[],"role":"collection","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift","url":"\/documentation\/atomics\/swift","kind":"symbol","title":"Swift"},"doc://swift-atomics.Atomics/documentation/Atomics/AtomicUpdateOrdering":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomicUpdateOrdering"}],"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicUpdateOrdering","url":"\/documentation\/atomics\/atomicupdateordering","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AtomicUpdateOrdering"}],"type":"topic","abstract":[{"text":"Specifies the memory ordering semantics of an atomic read-modify-write","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"operation."}],"title":"AtomicUpdateOrdering"},"doc://swift-atomics.Atomics/documentation/Atomics/AtomicLoadOrdering":{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/AtomicLoadOrdering","url":"\/documentation\/atomics\/atomicloadordering","abstract":[{"text":"Specifies the memory ordering semantics of an atomic load operation.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AtomicLoadOrdering","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"AtomicLoadOrdering"}],"title":"AtomicLoadOrdering","kind":"symbol","role":"symbol","type":"topic"},"doc://swift-atomics.Atomics/documentation/Atomics/Swift/UInt16/AtomicValue-Implementations":{"title":"AtomicValue Implementations","type":"topic","url":"\/documentation\/atomics\/swift\/uint16\/atomicvalue-implementations","kind":"article","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UInt16\/AtomicValue-Implementations","abstract":[],"role":"collectionGroup"},"doc://swift-atomics.Atomics/documentation/Atomics/Swift/UInt16/AtomicRepresentation/atomicWeakCompareExchange(expected:desired:at:successOrdering:failureOrdering:)":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"atomicWeakCompareExchange","kind":"identifier"},{"kind":"text","text":"("},{"text":"expected","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt16","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt16V"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"desired"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s6UInt16V","text":"UInt16","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"at","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sp","text":"UnsafeMutablePointer"},{"kind":"text","text":"<`Self`"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"successOrdering"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering"},{"text":", ","kind":"text"},{"text":"failureOrdering","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Atomics18AtomicLoadOrderingV","kind":"typeIdentifier","text":"AtomicLoadOrdering"},{"kind":"text","text":") -> (exchanged"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":", original","kind":"text"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s6UInt16V","text":"UInt16","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","title":"atomicWeakCompareExchange(expected:desired:at:successOrdering:failureOrdering:)","abstract":[{"text":"Perform an atomic weak compare and exchange operation on the value","type":"text"},{"text":" ","type":"text"},{"text":"referenced by ","type":"text"},{"code":"pointer","type":"codeVoice"},{"type":"text","text":", applying the specified success\/failure memory"},{"text":" ","type":"text"},{"type":"text","text":"orderings. This compare-exchange variant is allowed to spuriously fail; it"},{"text":" ","type":"text"},{"text":"is designed to be called in a loop until it indicates a successful","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"exchange has happened."}],"url":"\/documentation\/atomics\/swift\/uint16\/atomicrepresentation\/atomicweakcompareexchange(expected:desired:at:successordering:failureordering:)","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UInt16\/AtomicRepresentation\/atomicWeakCompareExchange(expected:desired:at:successOrdering:failureOrdering:)","kind":"symbol","role":"symbol"},"doc://swift-atomics.Atomics/documentation/Atomics/Swift/UInt16":{"fragments":[{"kind":"keyword","text":"extension"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:s6UInt16V","text":"UInt16","kind":"identifier"}],"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UInt16","url":"\/documentation\/atomics\/swift\/uint16","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"UInt16"}],"type":"topic","title":"UInt16","abstract":[]},"doc://swift-atomics.Atomics/documentation/Atomics/Swift/UInt16/AtomicRepresentation":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomicRepresentation"}],"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/Swift\/UInt16\/AtomicRepresentation","url":"\/documentation\/atomics\/swift\/uint16\/atomicrepresentation","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"AtomicRepresentation","kind":"identifier"}],"type":"topic","title":"UInt16.AtomicRepresentation","abstract":[{"text":"The atomic storage representation for this value.","type":"text"}]}}}