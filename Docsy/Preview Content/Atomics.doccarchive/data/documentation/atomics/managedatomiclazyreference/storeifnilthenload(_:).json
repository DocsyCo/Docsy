{"kind":"symbol","abstract":[{"text":"Atomically initializes this reference if its current value is nil, then","type":"text"},{"type":"text","text":" "},{"text":"returns the initialized value. If this reference is already initialized,","type":"text"},{"text":" ","type":"text"},{"text":"then ","type":"text"},{"type":"codeVoice","code":"storeIfNilThenLoad(_:)"},{"text":" discards its supplied argument and returns","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the current value without updating it."}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"storeIfNilThenLoad"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"desired","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Atomics26ManagedAtomicLazyReferenceC8Instancexmfp","text":"Instance","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Instance","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics26ManagedAtomicLazyReferenceC8Instancexmfp"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The following example demonstrates how this can be used to implement a"},{"type":"text","text":" "},{"text":"thread-safe lazily initialized reference:","type":"text"}]},{"type":"codeListing","syntax":null,"code":["class Image {","  var _histogram: UnsafeAtomicLazyReference<Histogram> = .init()","","  \/\/ This is safe to call concurrently from multiple threads.","  var atomicLazyHistogram: Histogram {","    if let histogram = _histogram.load() { return histogram }","    \/\/ Note that code here may run concurrently on","    \/\/ multiple threads, but only one of them will get to","    \/\/ succeed setting the reference.","    let histogram = ...","    return _histogram.storeIfNilThenLoad(histogram)","}"]},{"inlineContent":[{"text":"This operation uses acquiring-and-releasing memory ordering.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"variants":[{"paths":["\/documentation\/atomics\/managedatomiclazyreference\/storeifnilthenload(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/ManagedAtomicLazyReference\/storeIfNilThenLoad(_:)","interfaceLanguage":"swift"},"metadata":{"role":"symbol","externalID":"s:7Atomics26ManagedAtomicLazyReferenceC18storeIfNilThenLoadyxxnF","modules":[{"name":"Atomics"}],"title":"storeIfNilThenLoad(_:)","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"storeIfNilThenLoad"},{"kind":"text","text":"("},{"text":"Instance","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics26ManagedAtomicLazyReferenceC8Instancexmfp"},{"kind":"text","text":") -> "},{"text":"Instance","preciseIdentifier":"s:7Atomics26ManagedAtomicLazyReferenceC8Instancexmfp","kind":"typeIdentifier"}],"extendedModule":"Atomics","roleHeading":"Instance Method"},"sections":[],"hierarchy":{"paths":[["doc:\/\/swift-atomics.Atomics\/documentation\/Atomics","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/ManagedAtomicLazyReference"]]},"seeAlsoSections":[{"title":"Atomic Operations","anchor":"Atomic-Operations","generated":true,"identifiers":["doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/ManagedAtomicLazyReference\/load()"]}],"references":{"doc://swift-atomics.Atomics/documentation/Atomics/ManagedAtomicLazyReference/load()":{"type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"load","kind":"identifier"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:7Atomics26ManagedAtomicLazyReferenceC8Instancexmfp","text":"Instance","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"title":"load()","kind":"symbol","url":"\/documentation\/atomics\/managedatomiclazyreference\/load()","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/ManagedAtomicLazyReference\/load()","abstract":[{"type":"text","text":"Atomically loads and returns the current value of this reference."}]},"doc://swift-atomics.Atomics/documentation/Atomics/ManagedAtomicLazyReference/storeIfNilThenLoad(_:)":{"title":"storeIfNilThenLoad(_:)","type":"topic","url":"\/documentation\/atomics\/managedatomiclazyreference\/storeifnilthenload(_:)","abstract":[{"text":"Atomically initializes this reference if its current value is nil, then","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"returns the initialized value. If this reference is already initialized,"},{"type":"text","text":" "},{"type":"text","text":"then "},{"code":"storeIfNilThenLoad(_:)","type":"codeVoice"},{"text":" discards its supplied argument and returns","type":"text"},{"type":"text","text":" "},{"text":"the current value without updating it.","type":"text"}],"role":"symbol","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/ManagedAtomicLazyReference\/storeIfNilThenLoad(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"storeIfNilThenLoad"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics26ManagedAtomicLazyReferenceC8Instancexmfp","text":"Instance"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Atomics26ManagedAtomicLazyReferenceC8Instancexmfp","kind":"typeIdentifier","text":"Instance"}],"kind":"symbol"},"doc://swift-atomics.Atomics/documentation/Atomics/ManagedAtomicLazyReference":{"role":"symbol","title":"ManagedAtomicLazyReference","abstract":[{"text":"A reference type holding a lazily initializable atomic","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"strong reference, with automatic memory management."}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ManagedAtomicLazyReference","kind":"identifier"}],"kind":"symbol","type":"topic","url":"\/documentation\/atomics\/managedatomiclazyreference","navigatorTitle":[{"kind":"identifier","text":"ManagedAtomicLazyReference"}],"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/ManagedAtomicLazyReference"},"doc://swift-atomics.Atomics/documentation/Atomics":{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics","url":"\/documentation\/atomics","abstract":[{"type":"text","text":"An atomics library for Swift."}],"title":"Atomics","kind":"symbol","role":"collection","type":"topic"}}}