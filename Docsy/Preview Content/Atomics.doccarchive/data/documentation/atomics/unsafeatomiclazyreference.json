{"kind":"symbol","hierarchy":{"paths":[["doc:\/\/swift-atomics.Atomics\/documentation\/Atomics"]]},"metadata":{"title":"UnsafeAtomicLazyReference","roleHeading":"Structure","symbolKind":"struct","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UnsafeAtomicLazyReference"}],"modules":[{"name":"Atomics"}],"navigatorTitle":[{"text":"UnsafeAtomicLazyReference","kind":"identifier"}],"role":"symbol","externalID":"s:7Atomics25UnsafeAtomicLazyReferenceV"},"sections":[],"seeAlsoSections":[{"identifiers":["doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/ManagedAtomic","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomic","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/ManagedAtomicLazyReference"],"anchor":"Atomic-Container-Types","title":"Atomic Container Types","generated":true}],"topicSections":[{"identifiers":["doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomicLazyReference\/Value"],"title":"Related Types","anchor":"Related-Types"},{"title":"Initializers","identifiers":["doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomicLazyReference\/init(at:)"],"anchor":"Initializers"},{"identifiers":["doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomicLazyReference\/create()","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomicLazyReference\/destroy()"],"title":"Shorthand Methods for Dynamically Allocating Storage","anchor":"Shorthand-Methods-for-Dynamically-Allocating-Storage"},{"identifiers":["doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomicLazyReference\/load()","doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomicLazyReference\/storeIfNilThenLoad(_:)"],"title":"Atomic Operations","anchor":"Atomic-Operations"},{"identifiers":["doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomicLazyReference\/Storage"],"generated":true,"anchor":"Structures","title":"Structures"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"abstract":[{"text":"An unsafe reference type holding a lazily initializable atomic","type":"text"},{"text":" ","type":"text"},{"text":"strong reference, requiring manual memory management of the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"underlying storage representation."}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"attribute","text":"@frozen"},{"text":" ","kind":"text"},{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UnsafeAtomicLazyReference","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Instance","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Instance","kind":"typeIdentifier"},{"kind":"text","text":" : AnyObject"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"text":"Overview","level":2,"type":"heading","anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"These values can be set (initialized) exactly once, but read many","type":"text"},{"type":"text","text":" "},{"type":"text","text":"times."}]}],"kind":"content"}],"relationshipsSections":[{"identifiers":["doc:\/\/swift-atomics.Atomics\/s15BitwiseCopyableP","doc:\/\/swift-atomics.Atomics\/s8SendableP"],"title":"Conforms To","kind":"relationships","type":"conformsTo"}],"variants":[{"paths":["\/documentation\/atomics\/unsafeatomiclazyreference"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomicLazyReference"},"references":{"doc://swift-atomics.Atomics/documentation/Atomics/UnsafeAtomic":{"url":"\/documentation\/atomics\/unsafeatomic","title":"UnsafeAtomic","navigatorTitle":[{"kind":"identifier","text":"UnsafeAtomic"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UnsafeAtomic"}],"abstract":[{"text":"An unsafe reference type holding an atomic value, requiring manual memory","type":"text"},{"type":"text","text":" "},{"text":"management of the underlying storage representation.","type":"text"}],"kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomic"},"doc://swift-atomics.Atomics/documentation/Atomics/UnsafeAtomicLazyReference/storeIfNilThenLoad(_:)":{"url":"\/documentation\/atomics\/unsafeatomiclazyreference\/storeifnilthenload(_:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"storeIfNilThenLoad","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Instance","preciseIdentifier":"s:7Atomics25UnsafeAtomicLazyReferenceV8Instancexmfp"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7Atomics25UnsafeAtomicLazyReferenceV8Instancexmfp","text":"Instance","kind":"typeIdentifier"}],"kind":"symbol","abstract":[{"type":"text","text":"Atomically initializes this reference if its current value is nil, then"},{"text":" ","type":"text"},{"text":"returns the initialized value. If this reference is already initialized,","type":"text"},{"text":" ","type":"text"},{"text":"then ","type":"text"},{"code":"storeIfNilThenLoad(_:)","type":"codeVoice"},{"text":" discards its supplied argument and returns","type":"text"},{"type":"text","text":" "},{"text":"the current value without updating it.","type":"text"}],"role":"symbol","title":"storeIfNilThenLoad(_:)","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomicLazyReference\/storeIfNilThenLoad(_:)"},"doc://swift-atomics.Atomics/documentation/Atomics/UnsafeAtomicLazyReference/destroy()":{"abstract":[{"text":"Disposes of the current value of the storage location corresponding to","type":"text"},{"type":"text","text":" "},{"text":"this unsafe atomic lazy reference, then deinitializes and deallocates the","type":"text"},{"type":"text","text":" "},{"text":"storage.","type":"text"}],"url":"\/documentation\/atomics\/unsafeatomiclazyreference\/destroy()","type":"topic","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomicLazyReference\/destroy()","kind":"symbol","title":"destroy()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"destroy","kind":"identifier"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics25UnsafeAtomicLazyReferenceV5Valuea","text":"Value"}],"role":"symbol"},"doc://swift-atomics.Atomics/documentation/Atomics/UnsafeAtomicLazyReference/load()":{"kind":"symbol","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomicLazyReference\/load()","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"load","kind":"identifier"},{"kind":"text","text":"() -> "},{"text":"Instance","preciseIdentifier":"s:7Atomics25UnsafeAtomicLazyReferenceV8Instancexmfp","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"role":"symbol","title":"load()","url":"\/documentation\/atomics\/unsafeatomiclazyreference\/load()","abstract":[{"type":"text","text":"Atomically loads and returns the current value of this reference."}]},"doc://swift-atomics.Atomics/documentation/Atomics/UnsafeAtomicLazyReference/Storage":{"type":"topic","title":"UnsafeAtomicLazyReference.Storage","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomicLazyReference\/Storage","role":"symbol","abstract":[{"text":"The storage representation for an atomic lazy reference value.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"Storage","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Storage","kind":"identifier"}],"url":"\/documentation\/atomics\/unsafeatomiclazyreference\/storage"},"doc://swift-atomics.Atomics/documentation/Atomics/UnsafeAtomicLazyReference/Value":{"navigatorTitle":[{"kind":"identifier","text":"Value"}],"abstract":[{"text":"The value logically stored in an atomic lazy reference value.","type":"text"}],"url":"\/documentation\/atomics\/unsafeatomiclazyreference\/value","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomicLazyReference\/Value","type":"topic","kind":"symbol","title":"UnsafeAtomicLazyReference.Value","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"text":"Value","kind":"identifier"}],"role":"symbol"},"doc://swift-atomics.Atomics/documentation/Atomics/UnsafeAtomicLazyReference/init(at:)":{"abstract":[{"type":"text","text":"Initialize an unsafe atomic lazy reference that uses the supplied memory"},{"type":"text","text":" "},{"type":"text","text":"location for storage. The storage location must already be initialized to"},{"text":" ","type":"text"},{"text":"represent a valid atomic value.","type":"text"}],"url":"\/documentation\/atomics\/unsafeatomiclazyreference\/init(at:)","type":"topic","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomicLazyReference\/init(at:)","kind":"symbol","title":"init(at:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"at","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"text":"Storage","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics25UnsafeAtomicLazyReferenceV7StorageV"},{"text":">)","kind":"text"}],"role":"symbol"},"doc://swift-atomics.Atomics/documentation/Atomics/UnsafeAtomicLazyReference":{"type":"topic","abstract":[{"text":"An unsafe reference type holding a lazily initializable atomic","type":"text"},{"type":"text","text":" "},{"type":"text","text":"strong reference, requiring manual memory management of the"},{"text":" ","type":"text"},{"text":"underlying storage representation.","type":"text"}],"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomicLazyReference","navigatorTitle":[{"text":"UnsafeAtomicLazyReference","kind":"identifier"}],"kind":"symbol","title":"UnsafeAtomicLazyReference","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"UnsafeAtomicLazyReference","kind":"identifier"}],"url":"\/documentation\/atomics\/unsafeatomiclazyreference"},"doc://swift-atomics.Atomics/documentation/Atomics/UnsafeAtomicLazyReference/create()":{"type":"topic","title":"create()","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/UnsafeAtomicLazyReference\/create()","role":"symbol","abstract":[{"type":"text","text":"Create a new "},{"type":"codeVoice","code":"UnsafeAtomicLazyReference"},{"text":" value by dynamically allocating","type":"text"},{"type":"text","text":" "},{"type":"text","text":"storage for it."}],"kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"create","kind":"identifier"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:7Atomics25UnsafeAtomicLazyReferenceV","text":"UnsafeAtomicLazyReference","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Instance","kind":"typeIdentifier"},{"kind":"text","text":">"}],"url":"\/documentation\/atomics\/unsafeatomiclazyreference\/create()"},"doc://swift-atomics.Atomics/documentation/Atomics/ManagedAtomic":{"abstract":[{"type":"text","text":"A reference type holding an atomic value, with automatic memory management."}],"title":"ManagedAtomic","identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/ManagedAtomic","url":"\/documentation\/atomics\/managedatomic","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"ManagedAtomic","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"ManagedAtomic","kind":"identifier"}],"role":"symbol","type":"topic"},"doc://swift-atomics.Atomics/s15BitwiseCopyableP":{"identifier":"doc:\/\/swift-atomics.Atomics\/s15BitwiseCopyableP","title":"Swift.BitwiseCopyable","type":"unresolvable"},"doc://swift-atomics.Atomics/documentation/Atomics/ManagedAtomicLazyReference":{"role":"symbol","title":"ManagedAtomicLazyReference","abstract":[{"text":"A reference type holding a lazily initializable atomic","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"strong reference, with automatic memory management."}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ManagedAtomicLazyReference","kind":"identifier"}],"kind":"symbol","type":"topic","url":"\/documentation\/atomics\/managedatomiclazyreference","navigatorTitle":[{"kind":"identifier","text":"ManagedAtomicLazyReference"}],"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics\/ManagedAtomicLazyReference"},"doc://swift-atomics.Atomics/s8SendableP":{"identifier":"doc:\/\/swift-atomics.Atomics\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://swift-atomics.Atomics/documentation/Atomics":{"identifier":"doc:\/\/swift-atomics.Atomics\/documentation\/Atomics","url":"\/documentation\/atomics","abstract":[{"type":"text","text":"An atomics library for Swift."}],"title":"Atomics","kind":"symbol","role":"collection","type":"topic"}}}