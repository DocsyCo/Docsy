{"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/Flag\/init(wrappedValue:name:inversion:exclusivity:help:)"},"metadata":{"externalID":"s:14ArgumentParser4FlagVAASbRszlE12wrappedValue4name9inversion11exclusivity4helpACySbGSb_AA17NameSpecificationVAA0C9InversionVAA0C11ExclusivityVAA0A4HelpVSgtcfc","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Value","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Bool"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"role":"symbol","modules":[{"name":"ArgumentParser"}],"roleHeading":"Initializer","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"wrappedValue","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":", "},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"text":"NameSpecification","preciseIdentifier":"s:14ArgumentParser17NameSpecificationV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"inversion","kind":"externalParam"},{"kind":"text","text":": "},{"text":"FlagInversion","preciseIdentifier":"s:14ArgumentParser13FlagInversionV","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"exclusivity","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"FlagExclusivity","kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser15FlagExclusivityV"},{"kind":"text","text":", "},{"text":"help","kind":"externalParam"},{"kind":"text","text":": "},{"text":"ArgumentHelp","kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser0A4HelpV"},{"kind":"text","text":"?)"}],"extendedModule":"ArgumentParser","symbolKind":"init","title":"init(wrappedValue:name:inversion:exclusivity:help:)"},"sections":[],"variants":[{"paths":["\/documentation\/argumentparser\/flag\/init(wrappedvalue:name:inversion:exclusivity:help:)"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"wrappedValue"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":", ","kind":"text"},{"text":"name","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:14ArgumentParser17NameSpecificationV","identifier":"doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/NameSpecification","text":"NameSpecification","kind":"typeIdentifier"},{"text":" = .long, ","kind":"text"},{"text":"inversion","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:14ArgumentParser13FlagInversionV","text":"FlagInversion","kind":"typeIdentifier","identifier":"doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/FlagInversion"},{"kind":"text","text":", "},{"kind":"externalParam","text":"exclusivity"},{"kind":"text","text":": "},{"text":"FlagExclusivity","kind":"typeIdentifier","identifier":"doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/FlagExclusivity","preciseIdentifier":"s:14ArgumentParser15FlagExclusivityV"},{"text":" = .chooseLast, ","kind":"text"},{"text":"help","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ArgumentHelp","identifier":"doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/ArgumentHelp","kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser0A4HelpV"},{"kind":"text","text":"? = nil)"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"wrappedValue","content":[{"inlineContent":[{"text":"A default value to use for this property, provided implicitly by the compiler during property wrapper initialization.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"A specification for what names are allowed for this flag.","type":"text"}],"type":"paragraph"}],"name":"name"},{"content":[{"inlineContent":[{"type":"text","text":"The method for converting this flagâ€™s name into an on\/off pair."}],"type":"paragraph"}],"name":"inversion"},{"name":"exclusivity","content":[{"inlineContent":[{"text":"The behavior to use when an on\/off pair of flags is specified.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Information about how to use this flag."}]}],"name":"help"}]},{"kind":"content","content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"inlineContent":[{"text":"Use this initializer to create a Boolean flag with an on\/off pair.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"With the following declaration, for example, the user can specify either "},{"type":"codeVoice","code":"--use-https"},{"type":"text","text":" or "},{"type":"codeVoice","code":"--no-use-https"},{"text":" to set the ","type":"text"},{"type":"codeVoice","code":"useHTTPS"},{"type":"text","text":" flag to "},{"code":"true","type":"codeVoice"},{"type":"text","text":" or "},{"type":"codeVoice","code":"false"},{"type":"text","text":", respectively."}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["@Flag(inversion: .prefixedNo)","var useHTTPS: Bool = true"]}]}],"hierarchy":{"paths":[["doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser","doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/Flag"]]},"seeAlsoSections":[{"identifiers":["doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/Flag\/init(name:inversion:exclusivity:help:)-12okg","doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/Flag\/init(name:inversion:exclusivity:help:)-1h8f7","doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/FlagInversion"],"title":"Boolean Flags with Inversions","anchor":"Boolean-Flags-with-Inversions","generated":true}],"kind":"symbol","abstract":[{"type":"text","text":"Creates a Boolean property with default value provided by standard Swift default value syntax that reads its value from the presence of one or more inverted flags."}],"references":{"doc://swift-argument-parser.ArgumentParser/documentation/ArgumentParser/NameSpecification":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NameSpecification","kind":"identifier"}],"type":"topic","title":"NameSpecification","abstract":[{"type":"text","text":"A specification for how to represent a property as a command-line argument"},{"type":"text","text":" "},{"type":"text","text":"label."}],"identifier":"doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/NameSpecification","url":"\/documentation\/argumentparser\/namespecification","kind":"symbol","navigatorTitle":[{"text":"NameSpecification","kind":"identifier"}]},"doc://swift-argument-parser.ArgumentParser/documentation/ArgumentParser/Flag/init(name:inversion:exclusivity:help:)-12okg":{"title":"init(name:inversion:exclusivity:help:)","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"preciseIdentifier":"s:14ArgumentParser17NameSpecificationV","text":"NameSpecification","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"inversion"},{"text":": ","kind":"text"},{"text":"FlagInversion","kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser13FlagInversionV"},{"kind":"text","text":", "},{"text":"exclusivity","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser15FlagExclusivityV","text":"FlagExclusivity"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"help"},{"text":": ","kind":"text"},{"text":"ArgumentHelp","kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser0A4HelpV"},{"text":"?)","kind":"text"}],"type":"topic","identifier":"doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/Flag\/init(name:inversion:exclusivity:help:)-12okg","role":"symbol","url":"\/documentation\/argumentparser\/flag\/init(name:inversion:exclusivity:help:)-12okg","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Value","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Bool","type":"codeVoice"},{"type":"text","text":"."}]},"abstract":[{"text":"Creates a Boolean property with no default value that reads its value from the presence of one or more inverted flags.","type":"text"}],"kind":"symbol"},"doc://swift-argument-parser.ArgumentParser/documentation/ArgumentParser/Flag":{"role":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Flag","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Flag"}],"abstract":[{"type":"text","text":"A property wrapper that represents a command-line flag."}],"kind":"symbol","url":"\/documentation\/argumentparser\/flag","identifier":"doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/Flag","title":"Flag"},"doc://swift-argument-parser.ArgumentParser/documentation/ArgumentParser/FlagInversion":{"kind":"symbol","title":"FlagInversion","url":"\/documentation\/argumentparser\/flaginversion","navigatorTitle":[{"text":"FlagInversion","kind":"identifier"}],"abstract":[{"type":"text","text":"The options for converting a Boolean flag into a "},{"code":"true","type":"codeVoice"},{"text":"\/","type":"text"},{"code":"false","type":"codeVoice"},{"type":"text","text":" pair."}],"identifier":"doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/FlagInversion","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"FlagInversion","kind":"identifier"}],"type":"topic"},"doc://swift-argument-parser.ArgumentParser/documentation/ArgumentParser/Flag/init(wrappedValue:name:inversion:exclusivity:help:)":{"kind":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Value"},{"text":" is ","type":"text"},{"code":"Bool","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"title":"init(wrappedValue:name:inversion:exclusivity:help:)","url":"\/documentation\/argumentparser\/flag\/init(wrappedvalue:name:inversion:exclusivity:help:)","abstract":[{"text":"Creates a Boolean property with default value provided by standard Swift default value syntax that reads its value from the presence of one or more inverted flags.","type":"text"}],"identifier":"doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/Flag\/init(wrappedValue:name:inversion:exclusivity:help:)","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"wrappedValue"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"name"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser17NameSpecificationV","text":"NameSpecification"},{"kind":"text","text":", "},{"text":"inversion","kind":"externalParam"},{"kind":"text","text":": "},{"text":"FlagInversion","kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser13FlagInversionV"},{"text":", ","kind":"text"},{"text":"exclusivity","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:14ArgumentParser15FlagExclusivityV","kind":"typeIdentifier","text":"FlagExclusivity"},{"kind":"text","text":", "},{"kind":"externalParam","text":"help"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"ArgumentHelp","preciseIdentifier":"s:14ArgumentParser0A4HelpV"},{"kind":"text","text":"?)"}],"type":"topic"},"doc://swift-argument-parser.ArgumentParser/documentation/ArgumentParser/ArgumentHelp":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ArgumentHelp"}],"navigatorTitle":[{"kind":"identifier","text":"ArgumentHelp"}],"type":"topic","title":"ArgumentHelp","abstract":[{"type":"text","text":"Help information for a command-line argument."}],"url":"\/documentation\/argumentparser\/argumenthelp","identifier":"doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/ArgumentHelp","role":"symbol","kind":"symbol"},"doc://swift-argument-parser.ArgumentParser/documentation/ArgumentParser":{"title":"ArgumentParser","type":"topic","abstract":[{"text":"Straightforward, type-safe argument parsing for Swift.","type":"text"}],"identifier":"doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser","role":"collection","url":"\/documentation\/argumentparser","kind":"symbol"},"doc://swift-argument-parser.ArgumentParser/documentation/ArgumentParser/Flag/init(name:inversion:exclusivity:help:)-1h8f7":{"title":"init(name:inversion:exclusivity:help:)","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"name"},{"text":": ","kind":"text"},{"text":"NameSpecification","preciseIdentifier":"s:14ArgumentParser17NameSpecificationV","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"inversion"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:14ArgumentParser13FlagInversionV","kind":"typeIdentifier","text":"FlagInversion"},{"kind":"text","text":", "},{"kind":"externalParam","text":"exclusivity"},{"text":": ","kind":"text"},{"text":"FlagExclusivity","preciseIdentifier":"s:14ArgumentParser15FlagExclusivityV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"help","kind":"externalParam"},{"kind":"text","text":": "},{"text":"ArgumentHelp","preciseIdentifier":"s:14ArgumentParser0A4HelpV","kind":"typeIdentifier"},{"kind":"text","text":"?)"}],"type":"topic","identifier":"doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/Flag\/init(name:inversion:exclusivity:help:)-1h8f7","role":"symbol","url":"\/documentation\/argumentparser\/flag\/init(name:inversion:exclusivity:help:)-1h8f7","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" is "},{"code":"Bool?","type":"codeVoice"},{"type":"text","text":"."}]},"abstract":[{"text":"Creates a Boolean property that reads its value from the presence of","type":"text"},{"type":"text","text":" "},{"text":"one or more inverted flags.","type":"text"}],"kind":"symbol"},"doc://swift-argument-parser.ArgumentParser/documentation/ArgumentParser/FlagExclusivity":{"title":"FlagExclusivity","url":"\/documentation\/argumentparser\/flagexclusivity","role":"symbol","identifier":"doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/FlagExclusivity","navigatorTitle":[{"kind":"identifier","text":"FlagExclusivity"}],"type":"topic","abstract":[{"text":"The options for treating enumeration-based flags as exclusive.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"FlagExclusivity","kind":"identifier"}]}}}