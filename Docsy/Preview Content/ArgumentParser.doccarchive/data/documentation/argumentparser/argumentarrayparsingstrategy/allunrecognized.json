{"seeAlsoSections":[{"identifiers":["doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/ArgumentArrayParsingStrategy\/remaining","doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/ArgumentArrayParsingStrategy\/postTerminator","doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/ArgumentArrayParsingStrategy\/captureForPassthrough"],"generated":true,"title":"Parsing Strategies","anchor":"Parsing-Strategies"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/ArgumentArrayParsingStrategy\/allUnrecognized"},"sections":[],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"allUnrecognized"},{"kind":"text","text":": "},{"text":"ArgumentArrayParsingStrategy","preciseIdentifier":"s:14ArgumentParser0A20ArrayParsingStrategyV","identifier":"doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/ArgumentArrayParsingStrategy","kind":"typeIdentifier"},{"text":" { ","kind":"text"},{"text":"get","kind":"keyword"},{"kind":"text","text":" }"}]}],"kind":"declarations"},{"kind":"content","content":[{"anchor":"discussion","type":"heading","text":"Discussion","level":2},{"inlineContent":[{"type":"text","text":"You can use the "},{"type":"codeVoice","code":"allUnrecognized"},{"type":"text","text":" parsing strategy to suppress"},{"type":"text","text":" "},{"type":"text","text":"“unexpected argument” errors or to capture unrecognized inputs for further"},{"type":"text","text":" "},{"text":"processing.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"For example, the ","type":"text"},{"code":"Example","type":"codeVoice"},{"type":"text","text":" command defined below has an "},{"code":"other","type":"codeVoice"},{"text":" array that","type":"text"},{"text":" ","type":"text"},{"text":"uses the ","type":"text"},{"code":"allUnrecognized","type":"codeVoice"},{"text":" parsing strategy:","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["@main","struct Example: ParsableCommand {","    @Flag var verbose = false","    @Argument var name: String","","    @Argument(parsing: .allUnrecognized)","    var other: [String]","","    func run() {","        print(other.joined(separator: \"\\n\"))","    }","}"],"syntax":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"After parsing the "},{"type":"codeVoice","code":"--verbose"},{"text":" flag and ","type":"text"},{"type":"codeVoice","code":"<name>"},{"type":"text","text":" argument, any remaining"},{"text":" ","type":"text"},{"text":"input is captured in the ","type":"text"},{"code":"other","type":"codeVoice"},{"text":" array.","type":"text"}]},{"code":["$ example --verbose Negin one two","one","two","$ example Asa --verbose --other -zzz","--other","-zzz"],"type":"codeListing","syntax":null}]}],"hierarchy":{"paths":[["doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser","doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/Argument","doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/ArgumentArrayParsingStrategy"]]},"variants":[{"paths":["\/documentation\/argumentparser\/argumentarrayparsingstrategy\/allunrecognized"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"title":"allUnrecognized","roleHeading":"Type Property","role":"symbol","modules":[{"name":"ArgumentParser"}],"symbolKind":"property","externalID":"s:14ArgumentParser0A20ArrayParsingStrategyV15allUnrecognizedACvpZ","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"allUnrecognized","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:14ArgumentParser0A20ArrayParsingStrategyV","text":"ArgumentArrayParsingStrategy","kind":"typeIdentifier"}]},"kind":"symbol","abstract":[{"text":"After parsing, capture all unrecognized inputs in this argument array.","type":"text"}],"references":{"doc://swift-argument-parser.ArgumentParser/documentation/ArgumentParser/ArgumentArrayParsingStrategy/allUnrecognized":{"kind":"symbol","title":"allUnrecognized","type":"topic","abstract":[{"type":"text","text":"After parsing, capture all unrecognized inputs in this argument array."}],"url":"\/documentation\/argumentparser\/argumentarrayparsingstrategy\/allunrecognized","identifier":"doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/ArgumentArrayParsingStrategy\/allUnrecognized","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"allUnrecognized"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:14ArgumentParser0A20ArrayParsingStrategyV","kind":"typeIdentifier","text":"ArgumentArrayParsingStrategy"}]},"doc://swift-argument-parser.ArgumentParser/documentation/ArgumentParser":{"title":"ArgumentParser","type":"topic","abstract":[{"text":"Straightforward, type-safe argument parsing for Swift.","type":"text"}],"identifier":"doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser","role":"collection","url":"\/documentation\/argumentparser","kind":"symbol"},"doc://swift-argument-parser.ArgumentParser/documentation/ArgumentParser/ArgumentArrayParsingStrategy/remaining":{"identifier":"doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/ArgumentArrayParsingStrategy\/remaining","role":"symbol","title":"remaining","kind":"symbol","type":"topic","url":"\/documentation\/argumentparser\/argumentarrayparsingstrategy\/remaining","abstract":[{"text":"Parse only unprefixed values from the command-line input, ignoring","type":"text"},{"type":"text","text":" "},{"text":"any inputs that have a dash prefix. This is the default strategy.","type":"text"}],"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"remaining"},{"text":": ","kind":"text"},{"text":"ArgumentArrayParsingStrategy","kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser0A20ArrayParsingStrategyV"}]},"doc://swift-argument-parser.ArgumentParser/documentation/ArgumentParser/ArgumentArrayParsingStrategy":{"title":"ArgumentArrayParsingStrategy","abstract":[{"type":"text","text":"The strategy to use when parsing multiple values from positional arguments"},{"type":"text","text":" "},{"text":"into an array.","type":"text"}],"url":"\/documentation\/argumentparser\/argumentarrayparsingstrategy","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ArgumentArrayParsingStrategy"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/ArgumentArrayParsingStrategy","navigatorTitle":[{"text":"ArgumentArrayParsingStrategy","kind":"identifier"}]},"doc://swift-argument-parser.ArgumentParser/documentation/ArgumentParser/ArgumentArrayParsingStrategy/captureForPassthrough":{"identifier":"doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/ArgumentArrayParsingStrategy\/captureForPassthrough","role":"symbol","title":"captureForPassthrough","kind":"symbol","type":"topic","url":"\/documentation\/argumentparser\/argumentarrayparsingstrategy\/captureforpassthrough","abstract":[{"text":"Parse all remaining inputs after parsing any known options or flags,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"including dash-prefixed inputs and the "},{"type":"codeVoice","code":"--"},{"type":"text","text":" terminator."}],"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"captureForPassthrough","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"ArgumentArrayParsingStrategy","preciseIdentifier":"s:14ArgumentParser0A20ArrayParsingStrategyV"}]},"doc://swift-argument-parser.ArgumentParser/documentation/ArgumentParser/ArgumentArrayParsingStrategy/postTerminator":{"kind":"symbol","title":"postTerminator","type":"topic","abstract":[{"type":"text","text":"Before parsing arguments, capture all inputs that follow the "},{"type":"codeVoice","code":"--"},{"text":" ","type":"text"},{"text":"terminator in this argument array.","type":"text"}],"url":"\/documentation\/argumentparser\/argumentarrayparsingstrategy\/postterminator","identifier":"doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/ArgumentArrayParsingStrategy\/postTerminator","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"postTerminator"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:14ArgumentParser0A20ArrayParsingStrategyV","text":"ArgumentArrayParsingStrategy","kind":"typeIdentifier"}]},"doc://swift-argument-parser.ArgumentParser/documentation/ArgumentParser/Argument":{"title":"Argument","abstract":[{"text":"A property wrapper that represents a positional command-line argument.","type":"text"}],"navigatorTitle":[{"text":"Argument","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Argument"}],"type":"topic","role":"symbol","kind":"symbol","identifier":"doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/Argument","url":"\/documentation\/argumentparser\/argument"}}}