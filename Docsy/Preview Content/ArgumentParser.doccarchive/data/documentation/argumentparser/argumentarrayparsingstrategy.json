{"abstract":[{"text":"The strategy to use when parsing multiple values from positional arguments","type":"text"},{"type":"text","text":" "},{"type":"text","text":"into an array."}],"metadata":{"title":"ArgumentArrayParsingStrategy","navigatorTitle":[{"text":"ArgumentArrayParsingStrategy","kind":"identifier"}],"roleHeading":"Structure","modules":[{"name":"ArgumentParser"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ArgumentArrayParsingStrategy","kind":"identifier"}],"symbolKind":"struct","externalID":"s:14ArgumentParser0A20ArrayParsingStrategyV"},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"ArgumentArrayParsingStrategy","kind":"identifier"}]}],"kind":"declarations"}],"kind":"symbol","topicSections":[{"anchor":"Parsing-Strategies","title":"Parsing Strategies","identifiers":["doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/ArgumentArrayParsingStrategy\/remaining","doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/ArgumentArrayParsingStrategy\/allUnrecognized","doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/ArgumentArrayParsingStrategy\/postTerminator","doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/ArgumentArrayParsingStrategy\/captureForPassthrough"]},{"title":"Deprecated","identifiers":["doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/ArgumentArrayParsingStrategy\/unconditionalRemaining"],"anchor":"Deprecated"},{"anchor":"Default-Implementations","generated":true,"title":"Default Implementations","identifiers":["doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/ArgumentArrayParsingStrategy\/Equatable-Implementations"]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser","doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/Argument"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/argumentparser\/argumentarrayparsingstrategy"]}],"relationshipsSections":[{"type":"conformsTo","kind":"relationships","identifiers":["doc:\/\/swift-argument-parser.ArgumentParser\/SQ","doc:\/\/swift-argument-parser.ArgumentParser\/SH","doc:\/\/swift-argument-parser.ArgumentParser\/s8SendableP"],"title":"Conforms To"}],"identifier":{"url":"doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/ArgumentArrayParsingStrategy","interfaceLanguage":"swift"},"seeAlsoSections":[{"generated":true,"anchor":"Array-Arguments","title":"Array Arguments","identifiers":["doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/Argument\/init(parsing:help:completion:)","doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/Argument\/init(parsing:help:completion:transform:)","doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/Argument\/init(wrappedValue:parsing:help:completion:)","doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/Argument\/init(wrappedValue:parsing:help:completion:transform:)"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://swift-argument-parser.ArgumentParser/documentation/ArgumentParser/Argument/init(parsing:help:completion:)":{"title":"init(parsing:help:completion:)","type":"topic","abstract":[{"type":"text","text":"Creates a property with no default value that reads an array from zero or"},{"text":" ","type":"text"},{"type":"text","text":"more arguments."}],"url":"\/documentation\/argumentparser\/argument\/init(parsing:help:completion:)","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"parsing"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ArgumentArrayParsingStrategy","preciseIdentifier":"s:14ArgumentParser0A20ArrayParsingStrategyV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"help"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:14ArgumentParser0A4HelpV","text":"ArgumentHelp","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"completion","kind":"externalParam"},{"kind":"text","text":": "},{"text":"CompletionKind","kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser14CompletionKindV"},{"text":"?)","kind":"text"}],"role":"symbol","identifier":"doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/Argument\/init(parsing:help:completion:)","kind":"symbol"},"doc://swift-argument-parser.ArgumentParser/SQ":{"identifier":"doc:\/\/swift-argument-parser.ArgumentParser\/SQ","type":"unresolvable","title":"Swift.Equatable"},"doc://swift-argument-parser.ArgumentParser/documentation/ArgumentParser/Argument":{"title":"Argument","abstract":[{"text":"A property wrapper that represents a positional command-line argument.","type":"text"}],"navigatorTitle":[{"text":"Argument","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Argument"}],"type":"topic","role":"symbol","kind":"symbol","identifier":"doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/Argument","url":"\/documentation\/argumentparser\/argument"},"doc://swift-argument-parser.ArgumentParser/documentation/ArgumentParser/Argument/init(parsing:help:completion:transform:)":{"url":"\/documentation\/argumentparser\/argument\/init(parsing:help:completion:transform:)","kind":"symbol","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"parsing"},{"text":": ","kind":"text"},{"text":"ArgumentArrayParsingStrategy","kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser0A20ArrayParsingStrategyV"},{"kind":"text","text":", "},{"text":"help","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ArgumentHelp","kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser0A4HelpV"},{"kind":"text","text":"?, "},{"text":"completion","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser14CompletionKindV","text":"CompletionKind"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"transform"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser0A0V7parsing4help10completion9transformACySayqd__GGAA0A20ArrayParsingStrategyV_AA0A4HelpVSgAA14CompletionKindVSgqd__SSKctcAHRszlufc1TL_qd__mfp"},{"kind":"text","text":")"}],"abstract":[{"text":"Creates a property with no default value that reads an array from zero or","type":"text"},{"type":"text","text":" "},{"text":"more arguments, parsing each element with the given closure.","type":"text"}],"type":"topic","identifier":"doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/Argument\/init(parsing:help:completion:transform:)","title":"init(parsing:help:completion:transform:)"},"doc://swift-argument-parser.ArgumentParser/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/swift-argument-parser.ArgumentParser\/s8SendableP","title":"Swift.Sendable"},"doc://swift-argument-parser.ArgumentParser/documentation/ArgumentParser/Argument/init(wrappedValue:parsing:help:completion:transform:)":{"url":"\/documentation\/argumentparser\/argument\/init(wrappedvalue:parsing:help:completion:transform:)","kind":"symbol","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"wrappedValue","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Array","preciseIdentifier":"s:Sa"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser0A0V12wrappedValue7parsing4help10completion9transformACySayqd__GGAI_AA0A20ArrayParsingStrategyVAA0A4HelpVSgAA14CompletionKindVSgqd__SSKctcAIRszlufc1TL_qd__mfp","text":"T"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"parsing"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser0A20ArrayParsingStrategyV","text":"ArgumentArrayParsingStrategy"},{"kind":"text","text":", "},{"text":"help","kind":"externalParam"},{"kind":"text","text":": "},{"text":"ArgumentHelp","kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser0A4HelpV"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"completion"},{"text":": ","kind":"text"},{"text":"CompletionKind","kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser14CompletionKindV"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"transform"},{"text":": (","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser0A0V12wrappedValue7parsing4help10completion9transformACySayqd__GGAI_AA0A20ArrayParsingStrategyVAA0A4HelpVSgAA14CompletionKindVSgqd__SSKctcAIRszlufc1TL_qd__mfp"},{"text":")","kind":"text"}],"abstract":[{"text":"Creates a property that reads an array from zero or more arguments,","type":"text"},{"type":"text","text":" "},{"text":"parsing each element with the given closure.","type":"text"}],"type":"topic","identifier":"doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/Argument\/init(wrappedValue:parsing:help:completion:transform:)","title":"init(wrappedValue:parsing:help:completion:transform:)"},"doc://swift-argument-parser.ArgumentParser/SH":{"type":"unresolvable","identifier":"doc:\/\/swift-argument-parser.ArgumentParser\/SH","title":"Swift.Hashable"},"doc://swift-argument-parser.ArgumentParser/documentation/ArgumentParser/ArgumentArrayParsingStrategy/Equatable-Implementations":{"title":"Equatable Implementations","abstract":[],"url":"\/documentation\/argumentparser\/argumentarrayparsingstrategy\/equatable-implementations","role":"collectionGroup","type":"topic","kind":"article","identifier":"doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/ArgumentArrayParsingStrategy\/Equatable-Implementations"},"doc://swift-argument-parser.ArgumentParser/documentation/ArgumentParser/Argument/init(wrappedValue:parsing:help:completion:)":{"url":"\/documentation\/argumentparser\/argument\/init(wrappedvalue:parsing:help:completion:)","type":"topic","kind":"symbol","abstract":[{"text":"Creates a property that reads an array from zero or more arguments.","type":"text"}],"title":"init(wrappedValue:parsing:help:completion:)","identifier":"doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/Argument\/init(wrappedValue:parsing:help:completion:)","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"wrappedValue","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sa","text":"Array","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser0A0V12wrappedValue7parsing4help10completionACySayqd__GGAH_AA0A20ArrayParsingStrategyVAA0A4HelpVSgAA14CompletionKindVSgtcAHRszAA013ExpressibleByA0Rd__lufc1TL_qd__mfp","text":"T"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"parsing"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"ArgumentArrayParsingStrategy","preciseIdentifier":"s:14ArgumentParser0A20ArrayParsingStrategyV"},{"kind":"text","text":", "},{"text":"help","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:14ArgumentParser0A4HelpV","text":"ArgumentHelp","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"completion"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser14CompletionKindV","text":"CompletionKind"},{"text":"?)","kind":"text"}],"role":"symbol"},"doc://swift-argument-parser.ArgumentParser/documentation/ArgumentParser/ArgumentArrayParsingStrategy/allUnrecognized":{"kind":"symbol","title":"allUnrecognized","type":"topic","abstract":[{"type":"text","text":"After parsing, capture all unrecognized inputs in this argument array."}],"url":"\/documentation\/argumentparser\/argumentarrayparsingstrategy\/allunrecognized","identifier":"doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/ArgumentArrayParsingStrategy\/allUnrecognized","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"allUnrecognized"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:14ArgumentParser0A20ArrayParsingStrategyV","kind":"typeIdentifier","text":"ArgumentArrayParsingStrategy"}]},"doc://swift-argument-parser.ArgumentParser/documentation/ArgumentParser/ArgumentArrayParsingStrategy/unconditionalRemaining":{"abstract":[],"identifier":"doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/ArgumentArrayParsingStrategy\/unconditionalRemaining","type":"topic","deprecated":true,"role":"symbol","kind":"symbol","title":"unconditionalRemaining","url":"\/documentation\/argumentparser\/argumentarrayparsingstrategy\/unconditionalremaining","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unconditionalRemaining","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ArgumentArrayParsingStrategy","preciseIdentifier":"s:14ArgumentParser0A20ArrayParsingStrategyV","kind":"typeIdentifier"}]},"doc://swift-argument-parser.ArgumentParser/documentation/ArgumentParser/ArgumentArrayParsingStrategy/remaining":{"identifier":"doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/ArgumentArrayParsingStrategy\/remaining","role":"symbol","title":"remaining","kind":"symbol","type":"topic","url":"\/documentation\/argumentparser\/argumentarrayparsingstrategy\/remaining","abstract":[{"text":"Parse only unprefixed values from the command-line input, ignoring","type":"text"},{"type":"text","text":" "},{"text":"any inputs that have a dash prefix. This is the default strategy.","type":"text"}],"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"remaining"},{"text":": ","kind":"text"},{"text":"ArgumentArrayParsingStrategy","kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser0A20ArrayParsingStrategyV"}]},"doc://swift-argument-parser.ArgumentParser/documentation/ArgumentParser":{"title":"ArgumentParser","type":"topic","abstract":[{"text":"Straightforward, type-safe argument parsing for Swift.","type":"text"}],"identifier":"doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser","role":"collection","url":"\/documentation\/argumentparser","kind":"symbol"},"doc://swift-argument-parser.ArgumentParser/documentation/ArgumentParser/ArgumentArrayParsingStrategy/captureForPassthrough":{"identifier":"doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/ArgumentArrayParsingStrategy\/captureForPassthrough","role":"symbol","title":"captureForPassthrough","kind":"symbol","type":"topic","url":"\/documentation\/argumentparser\/argumentarrayparsingstrategy\/captureforpassthrough","abstract":[{"text":"Parse all remaining inputs after parsing any known options or flags,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"including dash-prefixed inputs and the "},{"type":"codeVoice","code":"--"},{"type":"text","text":" terminator."}],"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"captureForPassthrough","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"ArgumentArrayParsingStrategy","preciseIdentifier":"s:14ArgumentParser0A20ArrayParsingStrategyV"}]},"doc://swift-argument-parser.ArgumentParser/documentation/ArgumentParser/ArgumentArrayParsingStrategy/postTerminator":{"kind":"symbol","title":"postTerminator","type":"topic","abstract":[{"type":"text","text":"Before parsing arguments, capture all inputs that follow the "},{"type":"codeVoice","code":"--"},{"text":" ","type":"text"},{"text":"terminator in this argument array.","type":"text"}],"url":"\/documentation\/argumentparser\/argumentarrayparsingstrategy\/postterminator","identifier":"doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/ArgumentArrayParsingStrategy\/postTerminator","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"postTerminator"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:14ArgumentParser0A20ArrayParsingStrategyV","text":"ArgumentArrayParsingStrategy","kind":"typeIdentifier"}]},"doc://swift-argument-parser.ArgumentParser/documentation/ArgumentParser/ArgumentArrayParsingStrategy":{"title":"ArgumentArrayParsingStrategy","abstract":[{"type":"text","text":"The strategy to use when parsing multiple values from positional arguments"},{"type":"text","text":" "},{"text":"into an array.","type":"text"}],"url":"\/documentation\/argumentparser\/argumentarrayparsingstrategy","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ArgumentArrayParsingStrategy"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/ArgumentArrayParsingStrategy","navigatorTitle":[{"text":"ArgumentArrayParsingStrategy","kind":"identifier"}]}}}