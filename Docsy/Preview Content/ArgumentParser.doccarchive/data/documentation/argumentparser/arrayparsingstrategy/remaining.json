{"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/argumentparser\/arrayparsingstrategy\/remaining"]}],"hierarchy":{"paths":[["doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser","doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/Option","doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/ArrayParsingStrategy"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/ArrayParsingStrategy\/remaining"},"abstract":[{"text":"Parse all remaining arguments into an array.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"remaining","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:14ArgumentParser20ArrayParsingStrategyV","identifier":"doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/ArrayParsingStrategy","text":"ArrayParsingStrategy","kind":"typeIdentifier"},{"text":" { ","kind":"text"},{"text":"get","kind":"keyword"},{"kind":"text","text":" }"}],"platforms":["macOS"],"languages":["swift"]}]},{"content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"inlineContent":[{"type":"codeVoice","code":".remaining"},{"type":"text","text":" can be used for capturing pass-through flags. For example, for"},{"type":"text","text":" "},{"type":"text","text":"a parsable type defined as"},{"text":" ","type":"text"},{"type":"codeVoice","code":"@Option(parsing: .remaining) var passthrough: [String]"},{"type":"text","text":":"}],"type":"paragraph"},{"code":["$ cmd --passthrough --foo 1 --bar 2 -xvf","------------","options.passthrough == [\"--foo\", \"1\", \"--bar\", \"2\", \"-xvf\"]"],"type":"codeListing","syntax":null},{"style":"note","content":[{"inlineContent":[{"type":"text","text":"This will read all inputs following the option without attempting to do any parsing. This is"},{"type":"text","text":" "},{"type":"text","text":"usually "},{"inlineContent":[{"type":"text","text":"not"}],"type":"emphasis"},{"type":"text","text":" what users would expect. Use with caution."}],"type":"paragraph"}],"type":"aside","name":"Note"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Consider using a trailing "},{"type":"codeVoice","code":"@Argument"},{"type":"text","text":" instead and letting users explicitly turn off parsing"},{"type":"text","text":" "},{"text":"through the terminator ","type":"text"},{"type":"codeVoice","code":"--"},{"type":"text","text":". That is the more common approach. For example:"}]},{"type":"codeListing","code":["struct Options: ParsableArguments {","    @Option var title: String","    @Argument var remainder: [String]","}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"would parse the input "},{"code":"--title Foo -- Bar --baz","type":"codeVoice"},{"text":" such that the ","type":"text"},{"type":"codeVoice","code":"remainder"},{"text":" ","type":"text"},{"text":"would hold the value ","type":"text"},{"code":"[\"Bar\", \"--baz\"]","type":"codeVoice"},{"type":"text","text":"."}]}],"kind":"content"}],"metadata":{"externalID":"s:14ArgumentParser20ArrayParsingStrategyV9remainingACvpZ","modules":[{"name":"ArgumentParser"}],"symbolKind":"property","title":"remaining","roleHeading":"Type Property","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"remaining","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ArrayParsingStrategy","kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser20ArrayParsingStrategyV"}],"role":"symbol"},"kind":"symbol","sections":[],"references":{"doc://swift-argument-parser.ArgumentParser/documentation/ArgumentParser":{"title":"ArgumentParser","type":"topic","abstract":[{"text":"Straightforward, type-safe argument parsing for Swift.","type":"text"}],"identifier":"doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser","role":"collection","url":"\/documentation\/argumentparser","kind":"symbol"},"doc://swift-argument-parser.ArgumentParser/documentation/ArgumentParser/ArrayParsingStrategy":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"ArrayParsingStrategy","kind":"identifier"}],"navigatorTitle":[{"text":"ArrayParsingStrategy","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"The strategy to use when parsing multiple values from ","type":"text"},{"code":"@Option","type":"codeVoice"},{"type":"text","text":" arguments into an"},{"text":" ","type":"text"},{"type":"text","text":"array."}],"role":"symbol","title":"ArrayParsingStrategy","url":"\/documentation\/argumentparser\/arrayparsingstrategy","identifier":"doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/ArrayParsingStrategy","type":"topic"},"doc://swift-argument-parser.ArgumentParser/documentation/ArgumentParser/ArrayParsingStrategy/remaining":{"type":"topic","title":"remaining","role":"symbol","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"remaining"},{"kind":"text","text":": "},{"text":"ArrayParsingStrategy","preciseIdentifier":"s:14ArgumentParser20ArrayParsingStrategyV","kind":"typeIdentifier"}],"identifier":"doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/ArrayParsingStrategy\/remaining","abstract":[{"type":"text","text":"Parse all remaining arguments into an array."}],"url":"\/documentation\/argumentparser\/arrayparsingstrategy\/remaining"},"doc://swift-argument-parser.ArgumentParser/documentation/ArgumentParser/Option":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Option","kind":"identifier"}],"navigatorTitle":[{"text":"Option","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"A property wrapper that represents a command-line option."}],"role":"symbol","title":"Option","url":"\/documentation\/argumentparser\/option","identifier":"doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/Option","type":"topic"}}}