{"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"symbolKind":"property","modules":[{"name":"ArgumentParser"}],"externalID":"s:14ArgumentParser26SingleValueParsingStrategyV011scanningForD0ACvpZ","title":"scanningForValue","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"scanningForValue","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:14ArgumentParser26SingleValueParsingStrategyV","kind":"typeIdentifier","text":"SingleValueParsingStrategy"}],"role":"symbol","roleHeading":"Type Property"},"kind":"symbol","sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/argumentparser\/singlevalueparsingstrategy\/scanningforvalue"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/SingleValueParsingStrategy\/scanningForValue"},"abstract":[{"type":"text","text":"Parse the next input, as long as that input can’t be interpreted as"},{"text":" ","type":"text"},{"type":"text","text":"an option or flag."}],"hierarchy":{"paths":[["doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser","doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/Option","doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/SingleValueParsingStrategy"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"scanningForValue","kind":"identifier"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/SingleValueParsingStrategy","preciseIdentifier":"s:14ArgumentParser26SingleValueParsingStrategyV","text":"SingleValueParsingStrategy","kind":"typeIdentifier"},{"text":" { ","kind":"text"},{"kind":"keyword","text":"get"},{"text":" }","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"content","content":[{"type":"heading","text":"Discussion","anchor":"discussion","level":2},{"style":"note","name":"Note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This will skip other options and "},{"type":"emphasis","inlineContent":[{"text":"read ahead","type":"text"}]},{"type":"text","text":" in the input"},{"text":" ","type":"text"},{"type":"text","text":"to find the next available value. This may be "},{"type":"emphasis","inlineContent":[{"type":"text","text":"unexpected"}]},{"type":"text","text":" for users."},{"type":"text","text":" "},{"type":"text","text":"Use with caution."}]}],"type":"aside"},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example, if "},{"code":"--foo","type":"codeVoice"},{"type":"text","text":" takes a value, then the input "},{"type":"codeVoice","code":"--foo --bar bar"},{"type":"text","text":" "},{"text":"would be parsed such that the value ","type":"text"},{"code":"bar","type":"codeVoice"},{"text":" is used for ","type":"text"},{"code":"--foo","type":"codeVoice"},{"type":"text","text":"."}]}]}],"references":{"doc://swift-argument-parser.ArgumentParser/documentation/ArgumentParser":{"title":"ArgumentParser","type":"topic","abstract":[{"text":"Straightforward, type-safe argument parsing for Swift.","type":"text"}],"identifier":"doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser","role":"collection","url":"\/documentation\/argumentparser","kind":"symbol"},"doc://swift-argument-parser.ArgumentParser/documentation/ArgumentParser/SingleValueParsingStrategy":{"abstract":[{"type":"text","text":"The strategy to use when parsing a single value from "},{"type":"codeVoice","code":"@Option"},{"type":"text","text":" arguments."}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"SingleValueParsingStrategy","kind":"identifier"}],"role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"SingleValueParsingStrategy"}],"identifier":"doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/SingleValueParsingStrategy","title":"SingleValueParsingStrategy","type":"topic","url":"\/documentation\/argumentparser\/singlevalueparsingstrategy"},"doc://swift-argument-parser.ArgumentParser/documentation/ArgumentParser/Option":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Option","kind":"identifier"}],"navigatorTitle":[{"text":"Option","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"A property wrapper that represents a command-line option."}],"role":"symbol","title":"Option","url":"\/documentation\/argumentparser\/option","identifier":"doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/Option","type":"topic"},"doc://swift-argument-parser.ArgumentParser/documentation/ArgumentParser/SingleValueParsingStrategy/scanningForValue":{"title":"scanningForValue","type":"topic","url":"\/documentation\/argumentparser\/singlevalueparsingstrategy\/scanningforvalue","abstract":[{"type":"text","text":"Parse the next input, as long as that input can’t be interpreted as"},{"type":"text","text":" "},{"type":"text","text":"an option or flag."}],"kind":"symbol","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"scanningForValue","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser26SingleValueParsingStrategyV","text":"SingleValueParsingStrategy"}],"identifier":"doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/SingleValueParsingStrategy\/scanningForValue"}}}