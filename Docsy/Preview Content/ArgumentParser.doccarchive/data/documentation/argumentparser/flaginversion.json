{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FlagInversion","kind":"identifier"}],"platforms":["macOS"],"languages":["swift"]}]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","seeAlsoSections":[{"identifiers":["doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/Flag\/init(wrappedValue:name:inversion:exclusivity:help:)","doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/Flag\/init(name:inversion:exclusivity:help:)-12okg","doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/Flag\/init(name:inversion:exclusivity:help:)-1h8f7"],"generated":true,"anchor":"Boolean-Flags-with-Inversions","title":"Boolean Flags with Inversions"}],"hierarchy":{"paths":[["doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser","doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/Flag"]]},"variants":[{"paths":["\/documentation\/argumentparser\/flaginversion"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/swift-argument-parser.ArgumentParser\/SQ","doc:\/\/swift-argument-parser.ArgumentParser\/SH","doc:\/\/swift-argument-parser.ArgumentParser\/s8SendableP"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"abstract":[{"type":"text","text":"The options for converting a Boolean flag into a "},{"code":"true","type":"codeVoice"},{"type":"text","text":"\/"},{"code":"false","type":"codeVoice"},{"text":" pair.","type":"text"}],"sections":[],"metadata":{"symbolKind":"struct","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FlagInversion","kind":"identifier"}],"roleHeading":"Structure","title":"FlagInversion","externalID":"s:14ArgumentParser13FlagInversionV","modules":[{"name":"ArgumentParser"}],"navigatorTitle":[{"text":"FlagInversion","kind":"identifier"}],"role":"symbol"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/FlagInversion"},"topicSections":[{"title":"Type Properties","generated":true,"identifiers":["doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/FlagInversion\/prefixedEnableDisable","doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/FlagInversion\/prefixedNo"],"anchor":"Type-Properties"},{"identifiers":["doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/FlagInversion\/Equatable-Implementations"],"title":"Default Implementations","generated":true,"anchor":"Default-Implementations"}],"references":{"doc://swift-argument-parser.ArgumentParser/documentation/ArgumentParser/Flag/init(name:inversion:exclusivity:help:)-1h8f7":{"title":"init(name:inversion:exclusivity:help:)","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"name"},{"text":": ","kind":"text"},{"text":"NameSpecification","preciseIdentifier":"s:14ArgumentParser17NameSpecificationV","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"inversion"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:14ArgumentParser13FlagInversionV","kind":"typeIdentifier","text":"FlagInversion"},{"kind":"text","text":", "},{"kind":"externalParam","text":"exclusivity"},{"text":": ","kind":"text"},{"text":"FlagExclusivity","preciseIdentifier":"s:14ArgumentParser15FlagExclusivityV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"help","kind":"externalParam"},{"kind":"text","text":": "},{"text":"ArgumentHelp","preciseIdentifier":"s:14ArgumentParser0A4HelpV","kind":"typeIdentifier"},{"kind":"text","text":"?)"}],"type":"topic","identifier":"doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/Flag\/init(name:inversion:exclusivity:help:)-1h8f7","role":"symbol","url":"\/documentation\/argumentparser\/flag\/init(name:inversion:exclusivity:help:)-1h8f7","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" is "},{"code":"Bool?","type":"codeVoice"},{"type":"text","text":"."}]},"abstract":[{"text":"Creates a Boolean property that reads its value from the presence of","type":"text"},{"type":"text","text":" "},{"text":"one or more inverted flags.","type":"text"}],"kind":"symbol"},"doc://swift-argument-parser.ArgumentParser/documentation/ArgumentParser/Flag/init(wrappedValue:name:inversion:exclusivity:help:)":{"kind":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Value"},{"text":" is ","type":"text"},{"code":"Bool","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"title":"init(wrappedValue:name:inversion:exclusivity:help:)","url":"\/documentation\/argumentparser\/flag\/init(wrappedvalue:name:inversion:exclusivity:help:)","abstract":[{"text":"Creates a Boolean property with default value provided by standard Swift default value syntax that reads its value from the presence of one or more inverted flags.","type":"text"}],"identifier":"doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/Flag\/init(wrappedValue:name:inversion:exclusivity:help:)","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"wrappedValue"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"name"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser17NameSpecificationV","text":"NameSpecification"},{"kind":"text","text":", "},{"text":"inversion","kind":"externalParam"},{"kind":"text","text":": "},{"text":"FlagInversion","kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser13FlagInversionV"},{"text":", ","kind":"text"},{"text":"exclusivity","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:14ArgumentParser15FlagExclusivityV","kind":"typeIdentifier","text":"FlagExclusivity"},{"kind":"text","text":", "},{"kind":"externalParam","text":"help"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"ArgumentHelp","preciseIdentifier":"s:14ArgumentParser0A4HelpV"},{"kind":"text","text":"?)"}],"type":"topic"},"doc://swift-argument-parser.ArgumentParser/s8SendableP":{"identifier":"doc:\/\/swift-argument-parser.ArgumentParser\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://swift-argument-parser.ArgumentParser/documentation/ArgumentParser/FlagInversion":{"kind":"symbol","title":"FlagInversion","url":"\/documentation\/argumentparser\/flaginversion","navigatorTitle":[{"text":"FlagInversion","kind":"identifier"}],"abstract":[{"type":"text","text":"The options for converting a Boolean flag into a "},{"code":"true","type":"codeVoice"},{"text":"\/","type":"text"},{"code":"false","type":"codeVoice"},{"type":"text","text":" pair."}],"identifier":"doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/FlagInversion","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"FlagInversion","kind":"identifier"}],"type":"topic"},"doc://swift-argument-parser.ArgumentParser/documentation/ArgumentParser/Flag":{"role":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Flag","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Flag"}],"abstract":[{"type":"text","text":"A property wrapper that represents a command-line flag."}],"kind":"symbol","url":"\/documentation\/argumentparser\/flag","identifier":"doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/Flag","title":"Flag"},"doc://swift-argument-parser.ArgumentParser/documentation/ArgumentParser/FlagInversion/prefixedEnableDisable":{"url":"\/documentation\/argumentparser\/flaginversion\/prefixedenabledisable","title":"prefixedEnableDisable","kind":"symbol","type":"topic","identifier":"doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/FlagInversion\/prefixedEnableDisable","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"prefixedEnableDisable"},{"kind":"text","text":": "},{"text":"FlagInversion","kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser13FlagInversionV"}],"abstract":[{"type":"text","text":"Uses matching flags with "},{"type":"codeVoice","code":"enable-"},{"type":"text","text":" and "},{"code":"disable-","type":"codeVoice"},{"type":"text","text":" prefixes."}]},"doc://swift-argument-parser.ArgumentParser/documentation/ArgumentParser/Flag/init(name:inversion:exclusivity:help:)-12okg":{"title":"init(name:inversion:exclusivity:help:)","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"preciseIdentifier":"s:14ArgumentParser17NameSpecificationV","text":"NameSpecification","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"inversion"},{"text":": ","kind":"text"},{"text":"FlagInversion","kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser13FlagInversionV"},{"kind":"text","text":", "},{"text":"exclusivity","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser15FlagExclusivityV","text":"FlagExclusivity"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"help"},{"text":": ","kind":"text"},{"text":"ArgumentHelp","kind":"typeIdentifier","preciseIdentifier":"s:14ArgumentParser0A4HelpV"},{"text":"?)","kind":"text"}],"type":"topic","identifier":"doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/Flag\/init(name:inversion:exclusivity:help:)-12okg","role":"symbol","url":"\/documentation\/argumentparser\/flag\/init(name:inversion:exclusivity:help:)-12okg","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Value","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Bool","type":"codeVoice"},{"type":"text","text":"."}]},"abstract":[{"text":"Creates a Boolean property with no default value that reads its value from the presence of one or more inverted flags.","type":"text"}],"kind":"symbol"},"doc://swift-argument-parser.ArgumentParser/SH":{"identifier":"doc:\/\/swift-argument-parser.ArgumentParser\/SH","title":"Swift.Hashable","type":"unresolvable"},"doc://swift-argument-parser.ArgumentParser/SQ":{"identifier":"doc:\/\/swift-argument-parser.ArgumentParser\/SQ","title":"Swift.Equatable","type":"unresolvable"},"doc://swift-argument-parser.ArgumentParser/documentation/ArgumentParser/FlagInversion/Equatable-Implementations":{"abstract":[],"url":"\/documentation\/argumentparser\/flaginversion\/equatable-implementations","role":"collectionGroup","identifier":"doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/FlagInversion\/Equatable-Implementations","kind":"article","type":"topic","title":"Equatable Implementations"},"doc://swift-argument-parser.ArgumentParser/documentation/ArgumentParser/FlagInversion/prefixedNo":{"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"prefixedNo","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:14ArgumentParser13FlagInversionV","text":"FlagInversion","kind":"typeIdentifier"}],"type":"topic","title":"prefixedNo","identifier":"doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/FlagInversion\/prefixedNo","kind":"symbol","url":"\/documentation\/argumentparser\/flaginversion\/prefixedno","abstract":[{"text":"Adds a matching flag with a ","type":"text"},{"type":"codeVoice","code":"no-"},{"text":" prefix to represent ","type":"text"},{"type":"codeVoice","code":"false"},{"text":".","type":"text"}],"role":"symbol"},"doc://swift-argument-parser.ArgumentParser/documentation/ArgumentParser":{"title":"ArgumentParser","type":"topic","abstract":[{"text":"Straightforward, type-safe argument parsing for Swift.","type":"text"}],"identifier":"doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser","role":"collection","url":"\/documentation\/argumentparser","kind":"symbol"}}}