{"hierarchy":{"paths":[["doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser","doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/AsyncParsableCommand"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/argumentparser\/asyncparsablecommand\/main(_:)"]}],"abstract":[{"text":"Executes this command, or one of its subcommands, with the given arguments.","type":"text"}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"main","kind":"identifier"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"arguments","kind":"internalParam"},{"text":": [","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":"]?) ","kind":"text"},{"kind":"keyword","text":"async"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"arguments","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An array of arguments to use for parsing. If"},{"type":"text","text":" "},{"type":"codeVoice","code":"arguments"},{"type":"text","text":" is "},{"type":"codeVoice","code":"nil"},{"type":"text","text":", this uses the programâ€™s command-line arguments."}]}]}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method parses an instance of this type, one of its subcommands, or"},{"text":" ","type":"text"},{"text":"another built-in ","type":"text"},{"code":"AsyncParsableCommand","type":"codeVoice"},{"type":"text","text":" type, from command-line"},{"type":"text","text":" "},{"type":"text","text":"(or provided) arguments, and then calls its "},{"code":"run()","type":"codeVoice"},{"type":"text","text":" method, exiting"},{"type":"text","text":" "},{"text":"with a relevant error message if necessary.","type":"text"}]}]}],"identifier":{"url":"doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/AsyncParsableCommand\/main(_:)","interfaceLanguage":"swift"},"metadata":{"roleHeading":"Type Method","modules":[{"name":"ArgumentParser"}],"extendedModule":"ArgumentParser","title":"main(_:)","platforms":[{"introducedAt":"13.0","beta":false,"name":"iOS","unavailable":false,"deprecated":false},{"introducedAt":"13.0","deprecated":false,"beta":false,"name":"Mac Catalyst","unavailable":false},{"deprecated":false,"unavailable":false,"name":"macOS","introducedAt":"10.15","beta":false},{"deprecated":false,"unavailable":false,"name":"tvOS","beta":false,"introducedAt":"13.0"},{"deprecated":false,"name":"watchOS","introducedAt":"6.0","unavailable":false,"beta":false}],"role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"main","kind":"identifier"},{"kind":"text","text":"(["},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":"]?) ","kind":"text"},{"kind":"keyword","text":"async"}],"symbolKind":"method","externalID":"s:14ArgumentParser20AsyncParsableCommandPAAE4mainyySaySSGSgYaFZ"},"kind":"symbol","references":{"doc://swift-argument-parser.ArgumentParser/documentation/ArgumentParser/AsyncParsableCommand/main(_:)":{"identifier":"doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/AsyncParsableCommand\/main(_:)","abstract":[{"text":"Executes this command, or one of its subcommands, with the given arguments.","type":"text"}],"type":"topic","url":"\/documentation\/argumentparser\/asyncparsablecommand\/main(_:)","title":"main(_:)","role":"symbol","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"main"},{"text":"([","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":"]?) ","kind":"text"},{"text":"async","kind":"keyword"}]},"doc://swift-argument-parser.ArgumentParser/documentation/ArgumentParser":{"title":"ArgumentParser","type":"topic","abstract":[{"text":"Straightforward, type-safe argument parsing for Swift.","type":"text"}],"identifier":"doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser","role":"collection","url":"\/documentation\/argumentparser","kind":"symbol"},"doc://swift-argument-parser.ArgumentParser/documentation/ArgumentParser/AsyncParsableCommand":{"identifier":"doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/AsyncParsableCommand","url":"\/documentation\/argumentparser\/asyncparsablecommand","type":"topic","abstract":[{"type":"text","text":"A type that can be executed asynchronously, as part of a nested tree of"},{"text":" ","type":"text"},{"text":"commands.","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"AsyncParsableCommand","kind":"identifier"}],"navigatorTitle":[{"text":"AsyncParsableCommand","kind":"identifier"}],"role":"symbol","kind":"symbol","title":"AsyncParsableCommand"}}}