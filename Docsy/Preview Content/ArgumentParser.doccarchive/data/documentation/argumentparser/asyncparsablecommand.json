{"abstract":[{"type":"text","text":"A type that can be executed asynchronously, as part of a nested tree of"},{"text":" ","type":"text"},{"text":"commands.","type":"text"}],"relationshipsSections":[{"identifiers":["doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/ParsableArguments","doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/ParsableCommand","doc:\/\/swift-argument-parser.ArgumentParser\/Se"],"title":"Inherits From","type":"inheritsFrom","kind":"relationships"}],"topicSections":[{"anchor":"Implementing-a-Commands-Behavior","title":"Implementing a Command’s Behavior","identifiers":["doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/AsyncParsableCommand\/run()"]},{"identifiers":["doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/AsyncParsableCommand\/main()","doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/AsyncMainProtocol"],"title":"Starting the Program","anchor":"Starting-the-Program"},{"title":"Type Methods","anchor":"Type-Methods","generated":true,"identifiers":["doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/AsyncParsableCommand\/main(_:)"]}],"metadata":{"title":"AsyncParsableCommand","platforms":[{"deprecated":false,"introducedAt":"13.0","unavailable":false,"name":"iOS","beta":false},{"name":"Mac Catalyst","deprecated":false,"beta":false,"introducedAt":"13.0","unavailable":false},{"beta":false,"deprecated":false,"introducedAt":"10.15","unavailable":false,"name":"macOS"},{"unavailable":false,"deprecated":false,"introducedAt":"13.0","name":"tvOS","beta":false},{"name":"watchOS","deprecated":false,"beta":false,"introducedAt":"6.0","unavailable":false}],"symbolKind":"protocol","role":"symbol","modules":[{"name":"ArgumentParser"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncParsableCommand"}],"externalID":"s:14ArgumentParser20AsyncParsableCommandP","navigatorTitle":[{"kind":"identifier","text":"AsyncParsableCommand"}],"roleHeading":"Protocol"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsyncParsableCommand"},{"text":" : ","kind":"text"},{"text":"ParsableCommand","preciseIdentifier":"s:14ArgumentParser15ParsableCommandP","identifier":"doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/ParsableCommand","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"text":"Overview","type":"heading","level":2,"anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"To use ","type":"text"},{"type":"codeVoice","code":"async"},{"text":"\/","type":"text"},{"type":"codeVoice","code":"await"},{"text":" code in your commands’ ","type":"text"},{"type":"codeVoice","code":"run()"},{"text":" method implementations, follow these steps:","type":"text"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"For the root command in your command-line tool, declare conformance to ","type":"text"},{"type":"codeVoice","code":"AsyncParsableCommand"},{"type":"text","text":", whether or not that command uses asynchronous code."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Apply the "},{"code":"@main","type":"codeVoice"},{"text":" attribute to the root command. (Note: If your root command is in a ","type":"text"},{"code":"main.swift","type":"codeVoice"},{"text":" file, rename the file to the name of the command.)","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"For any command that needs to use asynchronous code, declare conformance to ","type":"text"},{"type":"codeVoice","code":"AsyncParsableCommand"},{"type":"text","text":" and mark the "},{"type":"codeVoice","code":"run()"},{"type":"text","text":" method as "},{"code":"async","type":"codeVoice"},{"type":"text","text":". No changes are needed for subcommands that don’t use asynchronous code."}]}]}],"type":"orderedList"},{"inlineContent":[{"type":"text","text":"The following example declares a "},{"code":"CountLines","type":"codeVoice"},{"text":" command that uses Foundation’s asynchronous ","type":"text"},{"code":"FileHandle.AsyncBytes","type":"codeVoice"},{"text":" to read the lines from a file:","type":"text"}],"type":"paragraph"},{"code":["import Foundation","","@main","struct CountLines: AsyncParsableCommand {","    @Argument(transform: URL.init(fileURLWithPath:))","    var inputFile: URL","","    mutating func run() async throws {","        let fileHandle = try FileHandle(forReadingFrom: inputFile)","        let lineCount = try await fileHandle.bytes.lines.reduce(into: 0) ","            { count, _ in count += 1 }","        print(lineCount)","    }","}"],"type":"codeListing","syntax":"swift"},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The Swift compiler uses either the type marked with "},{"code":"@main","type":"codeVoice"},{"text":" or a ","type":"text"},{"type":"codeVoice","code":"main.swift"},{"type":"text","text":" file as the entry point for an executable program. You can use either one, but not both — rename your "},{"code":"main.swift","type":"codeVoice"},{"type":"text","text":" file to the name of the command when you add "},{"type":"codeVoice","code":"@main"},{"text":".","type":"text"}]}],"name":"Note","type":"aside"},{"type":"heading","anchor":"Usage-in-Swift-55","text":"Usage in Swift 5.5","level":3},{"inlineContent":[{"text":"In Swift 5.5, you need to declare a separate, standalone type as your asynchronous ","type":"text"},{"type":"codeVoice","code":"@main"},{"text":" entry point. Instead of designating your root command as ","type":"text"},{"type":"codeVoice","code":"@main"},{"text":", as described above, use the code snippet below, replacing the placeholder with the name of your own root command. Otherwise, follow the steps above to use ","type":"text"},{"type":"codeVoice","code":"async"},{"text":"\/","type":"text"},{"code":"await","type":"codeVoice"},{"type":"text","text":" code within your commands’ "},{"type":"codeVoice","code":"run()"},{"text":" methods.","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["@main struct AsyncMain: AsyncMainProtocol {","    typealias Command = <#RootCommand#>","}"]}]}],"hierarchy":{"paths":[["doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser"]]},"kind":"symbol","identifier":{"url":"doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/AsyncParsableCommand","interfaceLanguage":"swift"},"sections":[],"seeAlsoSections":[{"generated":true,"title":"Essentials","identifiers":["doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/GettingStarted","doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/ParsableCommand","doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/CommandsAndSubcommands","doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/CustomizingCommandHelp"],"anchor":"Essentials"}],"variants":[{"paths":["\/documentation\/argumentparser\/asyncparsablecommand"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://swift-argument-parser.ArgumentParser/documentation/ArgumentParser/CustomizingCommandHelp":{"identifier":"doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/CustomizingCommandHelp","title":"Customizing Help for Commands","kind":"article","abstract":[{"type":"text","text":"Define your command’s abstract, extended discussion, or usage string, and set the flags used to invoke the help display."}],"url":"\/documentation\/argumentparser\/customizingcommandhelp","type":"topic","role":"article"},"doc://swift-argument-parser.ArgumentParser/documentation/ArgumentParser/AsyncParsableCommand":{"identifier":"doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/AsyncParsableCommand","url":"\/documentation\/argumentparser\/asyncparsablecommand","type":"topic","abstract":[{"type":"text","text":"A type that can be executed asynchronously, as part of a nested tree of"},{"text":" ","type":"text"},{"text":"commands.","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"AsyncParsableCommand","kind":"identifier"}],"navigatorTitle":[{"text":"AsyncParsableCommand","kind":"identifier"}],"role":"symbol","kind":"symbol","title":"AsyncParsableCommand"},"doc://swift-argument-parser.ArgumentParser/documentation/ArgumentParser/AsyncParsableCommand/main()":{"identifier":"doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/AsyncParsableCommand\/main()","url":"\/documentation\/argumentparser\/asyncparsablecommand\/main()","type":"topic","abstract":[{"type":"text","text":"Executes this command, or one of its subcommands, with the program’s"},{"text":" ","type":"text"},{"type":"text","text":"command-line arguments."}],"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"main","kind":"identifier"},{"kind":"text","text":"() "},{"kind":"keyword","text":"async"}],"role":"symbol","kind":"symbol","title":"main()"},"doc://swift-argument-parser.ArgumentParser/documentation/ArgumentParser/AsyncMainProtocol":{"role":"symbol","navigatorTitle":[{"text":"AsyncMainProtocol","kind":"identifier"}],"kind":"symbol","deprecated":true,"abstract":[{"type":"text","text":"A type that can designate an "},{"code":"AsyncParsableCommand","type":"codeVoice"},{"text":" as the program’s","type":"text"},{"type":"text","text":" "},{"type":"text","text":"entry point."}],"url":"\/documentation\/argumentparser\/asyncmainprotocol","type":"topic","identifier":"doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/AsyncMainProtocol","title":"AsyncMainProtocol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"AsyncMainProtocol","kind":"identifier"}]},"doc://swift-argument-parser.ArgumentParser/documentation/ArgumentParser/ParsableArguments":{"url":"\/documentation\/argumentparser\/parsablearguments","navigatorTitle":[{"kind":"identifier","text":"ParsableArguments"}],"identifier":"doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/ParsableArguments","role":"symbol","title":"ParsableArguments","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParsableArguments","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"A type that can be parsed from a program’s command-line arguments."}]},"doc://swift-argument-parser.ArgumentParser/documentation/ArgumentParser":{"title":"ArgumentParser","type":"topic","abstract":[{"text":"Straightforward, type-safe argument parsing for Swift.","type":"text"}],"identifier":"doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser","role":"collection","url":"\/documentation\/argumentparser","kind":"symbol"},"doc://swift-argument-parser.ArgumentParser/documentation/ArgumentParser/AsyncParsableCommand/run()":{"title":"run()","identifier":"doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/AsyncParsableCommand\/run()","abstract":[{"text":"The behavior or functionality of this command.","type":"text"}],"kind":"symbol","role":"symbol","url":"\/documentation\/argumentparser\/asyncparsablecommand\/run()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"run","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}],"required":true,"type":"topic"},"doc://swift-argument-parser.ArgumentParser/documentation/ArgumentParser/CommandsAndSubcommands":{"abstract":[{"text":"Break complex command-line tools into a tree of subcommands.","type":"text"}],"title":"Defining Commands and Subcommands","identifier":"doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/CommandsAndSubcommands","url":"\/documentation\/argumentparser\/commandsandsubcommands","role":"article","kind":"article","type":"topic"},"doc://swift-argument-parser.ArgumentParser/Se":{"title":"Swift.Decodable","identifier":"doc:\/\/swift-argument-parser.ArgumentParser\/Se","type":"unresolvable"},"doc://swift-argument-parser.ArgumentParser/documentation/ArgumentParser/GettingStarted":{"identifier":"doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/GettingStarted","title":"Getting Started with ArgumentParser","type":"topic","role":"article","abstract":[{"text":"Learn to set up and customize a simple command-line tool.","type":"text"}],"kind":"article","url":"\/documentation\/argumentparser\/gettingstarted"},"doc://swift-argument-parser.ArgumentParser/documentation/ArgumentParser/ParsableCommand":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParsableCommand"}],"abstract":[{"text":"A type that can be executed as part of a nested tree of commands.","type":"text"}],"kind":"symbol","type":"topic","url":"\/documentation\/argumentparser\/parsablecommand","identifier":"doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/ParsableCommand","navigatorTitle":[{"text":"ParsableCommand","kind":"identifier"}],"role":"symbol","title":"ParsableCommand"},"doc://swift-argument-parser.ArgumentParser/documentation/ArgumentParser/AsyncParsableCommand/main(_:)":{"identifier":"doc:\/\/swift-argument-parser.ArgumentParser\/documentation\/ArgumentParser\/AsyncParsableCommand\/main(_:)","abstract":[{"text":"Executes this command, or one of its subcommands, with the given arguments.","type":"text"}],"type":"topic","url":"\/documentation\/argumentparser\/asyncparsablecommand\/main(_:)","title":"main(_:)","role":"symbol","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"main"},{"text":"([","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":"]?) ","kind":"text"},{"text":"async","kind":"keyword"}]}}}