{"includedArchiveIdentifiers":["doccserveapi.App"],"interfaceLanguages":{"swift":[{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/author\/init()","title":"init()","type":"init"},{"path":"\/documentation\/app\/author\/init(id:metadata:)","title":"init(id: UUID, metadata: AuthorMetadata)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/author\/id-swift.property","title":"var id: UUID?","type":"property"},{"path":"\/documentation\/app\/author\/metadata","title":"var metadata: AuthorMetadata","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/app\/author\/schema","title":"static let schema: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/author\/anyid","title":"var anyID: any AnyID","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/author\/joined(_:)","title":"func joined<Joined>(Joined.Type) throws -> Joined","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/app\/author\/alias","title":"static var alias: String?","type":"property"}],"path":"\/documentation\/app\/author\/anymodel-implementations","title":"AnyModel Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/author\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/app\/author\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/author\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/app\/author\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/author\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/app\/author\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/author\/codableproperties","title":"var codableProperties: [SomeCodingKey : any AnyCodableProperty]","type":"property"},{"path":"\/documentation\/app\/author\/databaseproperties","title":"var databaseProperties: [any AnyDatabaseProperty]","type":"property"},{"path":"\/documentation\/app\/author\/haschanges","title":"var hasChanges: Bool","type":"property"},{"path":"\/documentation\/app\/author\/properties","title":"var properties: [any AnyProperty]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/author\/collectinput(withdefaultedvalues:)","title":"func collectInput(withDefaultedValues: Bool) -> [FieldKey : DatabaseQuery.Value]","type":"method"},{"path":"\/documentation\/app\/author\/input(to:)","title":"func input(to: any DatabaseInput)","type":"method"},{"path":"\/documentation\/app\/author\/output(from:)","title":"func output(from: any DatabaseOutput) throws","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/app\/author\/boolean","title":"Author.Boolean","type":"typealias"},{"path":"\/documentation\/app\/author\/enum","title":"Author.Enum","type":"typealias"},{"path":"\/documentation\/app\/author\/field","title":"Author.Field","type":"typealias"},{"path":"\/documentation\/app\/author\/group","title":"Author.Group","type":"typealias"},{"path":"\/documentation\/app\/author\/optionalboolean","title":"Author.OptionalBoolean","type":"typealias"},{"path":"\/documentation\/app\/author\/optionalenum","title":"Author.OptionalEnum","type":"typealias"},{"path":"\/documentation\/app\/author\/optionalfield","title":"Author.OptionalField","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/app\/author\/keys","title":"static var keys: [FieldKey]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/app\/author\/path(for:)","title":"static func path<Property>(for: KeyPath<Self, Property>) -> [FieldKey]","type":"method"}],"path":"\/documentation\/app\/author\/fields-implementations","title":"Fields Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/author\/_$id","title":"var _$id: Self.ID<Self.IDValue>","type":"property"},{"path":"\/documentation\/app\/author\/_$idexists","title":"var _$idExists: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/author\/create(on:)","title":"func create(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/app\/author\/delete(force:on:)","title":"func delete(force: Bool, on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/app\/author\/requireid()","title":"func requireID() throws -> Self.IDValue","type":"method"},{"path":"\/documentation\/app\/author\/restore(on:)","title":"func restore(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/app\/author\/save(on:)","title":"func save(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/app\/author\/update(on:)","title":"func update(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/app\/author\/children","title":"Author.Children","type":"typealias"},{"path":"\/documentation\/app\/author\/compositechildren","title":"Author.CompositeChildren","type":"typealias"},{"path":"\/documentation\/app\/author\/compositeid","title":"Author.CompositeID","type":"typealias"},{"path":"\/documentation\/app\/author\/compositeoptionalchild","title":"Author.CompositeOptionalChild","type":"typealias"},{"path":"\/documentation\/app\/author\/compositeoptionalparent","title":"Author.CompositeOptionalParent","type":"typealias"},{"path":"\/documentation\/app\/author\/compositeparent","title":"Author.CompositeParent","type":"typealias"},{"path":"\/documentation\/app\/author\/id-swift.typealias","title":"Author.ID","type":"typealias"},{"path":"\/documentation\/app\/author\/optionalchild","title":"Author.OptionalChild","type":"typealias"},{"path":"\/documentation\/app\/author\/optionalparent","title":"Author.OptionalParent","type":"typealias"},{"path":"\/documentation\/app\/author\/parent","title":"Author.Parent","type":"typealias"},{"path":"\/documentation\/app\/author\/siblings","title":"Author.Siblings","type":"typealias"},{"path":"\/documentation\/app\/author\/timestamp","title":"Author.Timestamp","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/app\/author\/find(_:on:)-2lnwt","title":"static func find(Self.IDValue?, on: any Database) async throws -> Self?","type":"method"},{"path":"\/documentation\/app\/author\/find(_:on:)-7pldf","title":"static func find(Self.IDValue?, on: any Database) -> EventLoopFuture<Self?>","type":"method"},{"path":"\/documentation\/app\/author\/query(on:)","title":"static func query(on: any Database) -> QueryBuilder<Self>","type":"method"}],"path":"\/documentation\/app\/author\/model-implementations","title":"Model Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/author\/response(from:context:)","title":"func response(from: Request, context: some RequestContext) throws -> Response","type":"method"}],"path":"\/documentation\/app\/author\/responsegenerator-implementations","title":"ResponseGenerator Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/app\/author\/schemaoralias","title":"static var schemaOrAlias: String","type":"property"},{"path":"\/documentation\/app\/author\/space","title":"static var space: String?","type":"property"},{"path":"\/documentation\/app\/author\/spaceifnotaliased","title":"static var spaceIfNotAliased: String?","type":"property"}],"path":"\/documentation\/app\/author\/schema-implementations","title":"Schema Implementations","type":"symbol"}],"path":"\/documentation\/app\/author","title":"Author","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/authormetadata\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/authormetadata\/displayname","title":"var displayName: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/authormetadata\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/app\/authormetadata\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/authormetadata\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/app\/authormetadata\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/authormetadata\/codableproperties","title":"var codableProperties: [SomeCodingKey : any AnyCodableProperty]","type":"property"},{"path":"\/documentation\/app\/authormetadata\/databaseproperties","title":"var databaseProperties: [any AnyDatabaseProperty]","type":"property"},{"path":"\/documentation\/app\/authormetadata\/haschanges","title":"var hasChanges: Bool","type":"property"},{"path":"\/documentation\/app\/authormetadata\/properties","title":"var properties: [any AnyProperty]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/authormetadata\/collectinput(withdefaultedvalues:)","title":"func collectInput(withDefaultedValues: Bool) -> [FieldKey : DatabaseQuery.Value]","type":"method"},{"path":"\/documentation\/app\/authormetadata\/input(to:)","title":"func input(to: any DatabaseInput)","type":"method"},{"path":"\/documentation\/app\/authormetadata\/output(from:)","title":"func output(from: any DatabaseOutput) throws","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/app\/authormetadata\/boolean","title":"AuthorMetadata.Boolean","type":"typealias"},{"path":"\/documentation\/app\/authormetadata\/enum","title":"AuthorMetadata.Enum","type":"typealias"},{"path":"\/documentation\/app\/authormetadata\/field","title":"AuthorMetadata.Field","type":"typealias"},{"path":"\/documentation\/app\/authormetadata\/group","title":"AuthorMetadata.Group","type":"typealias"},{"path":"\/documentation\/app\/authormetadata\/optionalboolean","title":"AuthorMetadata.OptionalBoolean","type":"typealias"},{"path":"\/documentation\/app\/authormetadata\/optionalenum","title":"AuthorMetadata.OptionalEnum","type":"typealias"},{"path":"\/documentation\/app\/authormetadata\/optionalfield","title":"AuthorMetadata.OptionalField","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/app\/authormetadata\/keys","title":"static var keys: [FieldKey]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/app\/authormetadata\/path(for:)","title":"static func path<Property>(for: KeyPath<Self, Property>) -> [FieldKey]","type":"method"}],"path":"\/documentation\/app\/authormetadata\/fields-implementations","title":"Fields Implementations","type":"symbol"}],"path":"\/documentation\/app\/authormetadata","title":"AuthorMetadata","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/bundlemockrepository\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/bundlemockrepository\/bundles","title":"var bundles: [DocumentationBundle.IDValue : DocumentationBundle]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/bundlemockrepository\/create(displayname:overview:baseurl:)","title":"func create(displayName: String, overview: String, baseUrl: URL) async throws -> DocumentationBundle","type":"method"},{"path":"\/documentation\/app\/bundlemockrepository\/delete(id:)","title":"func delete(id: DocumentationBundle.IDValue) async throws -> Bool","type":"method"},{"path":"\/documentation\/app\/bundlemockrepository\/get(id:)","title":"func get(id: DocumentationBundle.IDValue) async throws -> DocumentationBundle?","type":"method"},{"path":"\/documentation\/app\/bundlemockrepository\/update(id:displayname:overview:baseurl:)","title":"func update(id: DocumentationBundle.IDValue, displayName: String?, overview: String?, baseUrl: URL?) async throws -> DocumentationBundle?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/bundlemockrepository\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/app\/bundlemockrepository\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/app\/bundlemockrepository\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"}],"path":"\/documentation\/app\/bundlemockrepository\/actor-implementations","title":"Actor Implementations","type":"symbol"}],"path":"\/documentation\/app\/bundlemockrepository","title":"BundleMockRepository","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/documentationbundle\/init()","title":"init()","type":"init"},{"path":"\/documentation\/app\/documentationbundle\/init(id:displayname:overview:baseurl:)","title":"init(id: UUID?, displayName: String, overview: String, baseUrl: URL)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/documentationbundle\/baseurl","title":"var baseUrl: URL","type":"property"},{"path":"\/documentation\/app\/documentationbundle\/displayname","title":"var displayName: String","type":"property"},{"path":"\/documentation\/app\/documentationbundle\/id-swift.property","title":"var id: UUID?","type":"property"},{"path":"\/documentation\/app\/documentationbundle\/overview","title":"var overview: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/app\/documentationbundle\/schema","title":"static let schema: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/documentationbundle\/anyid","title":"var anyID: any AnyID","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/documentationbundle\/joined(_:)","title":"func joined<Joined>(Joined.Type) throws -> Joined","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/app\/documentationbundle\/alias","title":"static var alias: String?","type":"property"}],"path":"\/documentation\/app\/documentationbundle\/anymodel-implementations","title":"AnyModel Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/documentationbundle\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/app\/documentationbundle\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/documentationbundle\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/app\/documentationbundle\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/documentationbundle\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/app\/documentationbundle\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/documentationbundle\/codableproperties","title":"var codableProperties: [SomeCodingKey : any AnyCodableProperty]","type":"property"},{"path":"\/documentation\/app\/documentationbundle\/databaseproperties","title":"var databaseProperties: [any AnyDatabaseProperty]","type":"property"},{"path":"\/documentation\/app\/documentationbundle\/haschanges","title":"var hasChanges: Bool","type":"property"},{"path":"\/documentation\/app\/documentationbundle\/properties","title":"var properties: [any AnyProperty]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/documentationbundle\/collectinput(withdefaultedvalues:)","title":"func collectInput(withDefaultedValues: Bool) -> [FieldKey : DatabaseQuery.Value]","type":"method"},{"path":"\/documentation\/app\/documentationbundle\/input(to:)","title":"func input(to: any DatabaseInput)","type":"method"},{"path":"\/documentation\/app\/documentationbundle\/output(from:)","title":"func output(from: any DatabaseOutput) throws","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/app\/documentationbundle\/boolean","title":"DocumentationBundle.Boolean","type":"typealias"},{"path":"\/documentation\/app\/documentationbundle\/enum","title":"DocumentationBundle.Enum","type":"typealias"},{"path":"\/documentation\/app\/documentationbundle\/field","title":"DocumentationBundle.Field","type":"typealias"},{"path":"\/documentation\/app\/documentationbundle\/group","title":"DocumentationBundle.Group","type":"typealias"},{"path":"\/documentation\/app\/documentationbundle\/optionalboolean","title":"DocumentationBundle.OptionalBoolean","type":"typealias"},{"path":"\/documentation\/app\/documentationbundle\/optionalenum","title":"DocumentationBundle.OptionalEnum","type":"typealias"},{"path":"\/documentation\/app\/documentationbundle\/optionalfield","title":"DocumentationBundle.OptionalField","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/app\/documentationbundle\/keys","title":"static var keys: [FieldKey]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/app\/documentationbundle\/path(for:)","title":"static func path<Property>(for: KeyPath<Self, Property>) -> [FieldKey]","type":"method"}],"path":"\/documentation\/app\/documentationbundle\/fields-implementations","title":"Fields Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/documentationbundle\/_$id","title":"var _$id: Self.ID<Self.IDValue>","type":"property"},{"path":"\/documentation\/app\/documentationbundle\/_$idexists","title":"var _$idExists: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/documentationbundle\/create(on:)","title":"func create(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/app\/documentationbundle\/delete(force:on:)","title":"func delete(force: Bool, on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/app\/documentationbundle\/requireid()","title":"func requireID() throws -> Self.IDValue","type":"method"},{"path":"\/documentation\/app\/documentationbundle\/restore(on:)","title":"func restore(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/app\/documentationbundle\/save(on:)","title":"func save(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/app\/documentationbundle\/update(on:)","title":"func update(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/app\/documentationbundle\/children","title":"DocumentationBundle.Children","type":"typealias"},{"path":"\/documentation\/app\/documentationbundle\/compositechildren","title":"DocumentationBundle.CompositeChildren","type":"typealias"},{"path":"\/documentation\/app\/documentationbundle\/compositeid","title":"DocumentationBundle.CompositeID","type":"typealias"},{"path":"\/documentation\/app\/documentationbundle\/compositeoptionalchild","title":"DocumentationBundle.CompositeOptionalChild","type":"typealias"},{"path":"\/documentation\/app\/documentationbundle\/compositeoptionalparent","title":"DocumentationBundle.CompositeOptionalParent","type":"typealias"},{"path":"\/documentation\/app\/documentationbundle\/compositeparent","title":"DocumentationBundle.CompositeParent","type":"typealias"},{"path":"\/documentation\/app\/documentationbundle\/id-swift.typealias","title":"DocumentationBundle.ID","type":"typealias"},{"path":"\/documentation\/app\/documentationbundle\/optionalchild","title":"DocumentationBundle.OptionalChild","type":"typealias"},{"path":"\/documentation\/app\/documentationbundle\/optionalparent","title":"DocumentationBundle.OptionalParent","type":"typealias"},{"path":"\/documentation\/app\/documentationbundle\/parent","title":"DocumentationBundle.Parent","type":"typealias"},{"path":"\/documentation\/app\/documentationbundle\/siblings","title":"DocumentationBundle.Siblings","type":"typealias"},{"path":"\/documentation\/app\/documentationbundle\/timestamp","title":"DocumentationBundle.Timestamp","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/app\/documentationbundle\/find(_:on:)-22cop","title":"static func find(Self.IDValue?, on: any Database) -> EventLoopFuture<Self?>","type":"method"},{"path":"\/documentation\/app\/documentationbundle\/find(_:on:)-934vc","title":"static func find(Self.IDValue?, on: any Database) async throws -> Self?","type":"method"},{"path":"\/documentation\/app\/documentationbundle\/query(on:)","title":"static func query(on: any Database) -> QueryBuilder<Self>","type":"method"}],"path":"\/documentation\/app\/documentationbundle\/model-implementations","title":"Model Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/documentationbundle\/response(from:context:)","title":"func response(from: Request, context: some RequestContext) throws -> Response","type":"method"}],"path":"\/documentation\/app\/documentationbundle\/responsegenerator-implementations","title":"ResponseGenerator Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/app\/documentationbundle\/schemaoralias","title":"static var schemaOrAlias: String","type":"property"},{"path":"\/documentation\/app\/documentationbundle\/space","title":"static var space: String?","type":"property"},{"path":"\/documentation\/app\/documentationbundle\/spaceifnotaliased","title":"static var spaceIfNotAliased: String?","type":"property"}],"path":"\/documentation\/app\/documentationbundle\/schema-implementations","title":"Schema Implementations","type":"symbol"}],"path":"\/documentation\/app\/documentationbundle","title":"DocumentationBundle","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/apparguments\/hostname","title":"var hostname: String","type":"property"},{"path":"\/documentation\/app\/apparguments\/loglevel","title":"var logLevel: Logger.Level?","type":"property"},{"path":"\/documentation\/app\/apparguments\/port","title":"var port: Int","type":"property"}],"path":"\/documentation\/app\/apparguments","title":"AppArguments","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/bundlerepository\/create(displayname:overview:baseurl:)","title":"func create(displayName: String, overview: String, baseUrl: URL) async throws -> DocumentationBundle","type":"method"},{"path":"\/documentation\/app\/bundlerepository\/delete(id:)","title":"func delete(id: DocumentationBundle.IDValue) async throws -> Bool","type":"method"},{"path":"\/documentation\/app\/bundlerepository\/get(id:)","title":"func get(id: DocumentationBundle.IDValue) async throws -> DocumentationBundle?","type":"method"}],"path":"\/documentation\/app\/bundlerepository","title":"BundleRepository","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/appcommand\/init()","title":"init()","type":"init"},{"path":"\/documentation\/app\/appcommand\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/app\/appcommand\/init(hostname:port:loglevel:)","title":"init(hostname: String, port: Int, logLevel: Option<Logger.Level?>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/appcommand\/hostname","title":"var hostname: String","type":"property"},{"path":"\/documentation\/app\/appcommand\/loglevel","title":"var logLevel: Logger.Level?","type":"property"},{"path":"\/documentation\/app\/appcommand\/port","title":"var port: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/appcommand\/run()","title":"func run() async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/app\/appcommand\/main()-6oo0j","title":"static func main() async","type":"method"},{"path":"\/documentation\/app\/appcommand\/main(_:)-nk06","title":"static func main([String]?) async","type":"method"}],"path":"\/documentation\/app\/appcommand\/asyncparsablecommand-implementations","title":"AsyncParsableCommand Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/appcommand\/validate()","title":"func validate() throws","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/app\/appcommand\/_errorlabel","title":"static var _errorLabel: String","type":"property"},{"path":"\/documentation\/app\/appcommand\/ascommand","title":"static var asCommand: any ParsableCommand.Type","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/app\/appcommand\/_dumphelp()","title":"static func _dumpHelp() -> String","type":"method"},{"path":"\/documentation\/app\/appcommand\/completionscript(for:)","title":"static func completionScript(for: CompletionShell) -> String","type":"method"},{"path":"\/documentation\/app\/appcommand\/exit(witherror:)","title":"static func exit(withError: (any Error)?) -> Never","type":"method"},{"path":"\/documentation\/app\/appcommand\/exitcode(for:)","title":"static func exitCode(for: any Error) -> ExitCode","type":"method"},{"path":"\/documentation\/app\/appcommand\/fullmessage(for:)","title":"static func fullMessage(for: any Error) -> String","type":"method"},{"path":"\/documentation\/app\/appcommand\/fullmessage(for:columns:)","title":"static func fullMessage(for: any Error, columns: Int?) -> String","type":"method"},{"path":"\/documentation\/app\/appcommand\/helpmessage(columns:)","title":"static func helpMessage(columns: Int?) -> String","type":"method"},{"path":"\/documentation\/app\/appcommand\/helpmessage(includehidden:columns:)","title":"static func helpMessage(includeHidden: Bool, columns: Int?) -> String","type":"method"},{"path":"\/documentation\/app\/appcommand\/message(for:)","title":"static func message(for: any Error) -> String","type":"method"},{"path":"\/documentation\/app\/appcommand\/parse(_:)","title":"static func parse([String]?) throws -> Self","type":"method"},{"path":"\/documentation\/app\/appcommand\/parseorexit(_:)","title":"static func parseOrExit([String]?) -> Self","type":"method"},{"path":"\/documentation\/app\/appcommand\/usagestring(includehidden:)","title":"static func usageString(includeHidden: Bool) -> String","type":"method"}],"path":"\/documentation\/app\/appcommand\/parsablearguments-implementations","title":"ParsableArguments Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/app\/appcommand\/_commandname","title":"static var _commandName: String","type":"property"},{"path":"\/documentation\/app\/appcommand\/configuration","title":"static var configuration: CommandConfiguration","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/app\/appcommand\/helpmessage(for:columns:)","title":"static func helpMessage(for: any ParsableCommand.Type, columns: Int?) -> String","type":"method"},{"path":"\/documentation\/app\/appcommand\/helpmessage(for:includehidden:columns:)","title":"static func helpMessage(for: any ParsableCommand.Type, includeHidden: Bool, columns: Int?) -> String","type":"method"},{"path":"\/documentation\/app\/appcommand\/main()-66quo","title":"static func main()","type":"method"},{"path":"\/documentation\/app\/appcommand\/main(_:)-263b5","title":"static func main([String]?)","type":"method"},{"path":"\/documentation\/app\/appcommand\/parseasroot(_:)","title":"static func parseAsRoot([String]?) throws -> any ParsableCommand","type":"method"},{"path":"\/documentation\/app\/appcommand\/usagestring(for:includehidden:)","title":"static func usageString(for: any ParsableCommand.Type, includeHidden: Bool) -> String","type":"method"}],"path":"\/documentation\/app\/appcommand\/parsablecommand-implementations","title":"ParsableCommand Implementations","type":"symbol"}],"path":"\/documentation\/app\/appcommand","title":"AppCommand","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/bundlecontroller\/createrequest\/init(displayname:overview:baseurl:)","title":"init(displayName: String, overview: String, baseUrl: URL)","type":"init"},{"path":"\/documentation\/app\/bundlecontroller\/createrequest\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/bundlecontroller\/createrequest\/baseurl","title":"let baseUrl: URL","type":"property"},{"path":"\/documentation\/app\/bundlecontroller\/createrequest\/displayname","title":"let displayName: String","type":"property"},{"path":"\/documentation\/app\/bundlecontroller\/createrequest\/overview","title":"let overview: String","type":"property"}],"path":"\/documentation\/app\/bundlecontroller\/createrequest","title":"BundleController.CreateRequest","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/bundlecontroller\/init(repository:)","title":"init(repository: any BundleRepository)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/bundlecontroller\/endpoints","title":"var endpoints: RouteCollection<AppRequestContext>","type":"property"},{"path":"\/documentation\/app\/bundlecontroller\/repository","title":"let repository: BundleRepository","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/bundlecontroller\/create(request:context:)","title":"func create(request: Request, context: some RequestContext) async throws -> DocumentationBundle","type":"method"},{"path":"\/documentation\/app\/bundlecontroller\/delete(request:context:)","title":"func delete(request: Request, context: some RequestContext) async throws -> DocumentationBundle?","type":"method"},{"path":"\/documentation\/app\/bundlecontroller\/get(request:context:)","title":"func get(request: Request, context: some RequestContext) async throws -> DocumentationBundle?","type":"method"},{"path":"\/documentation\/app\/bundlecontroller\/update(request:context:)","title":"func update(request: Request, context: some RequestContext) async throws -> DocumentationBundle","type":"method"}],"path":"\/documentation\/app\/bundlecontroller","title":"BundleController","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/createbundletablemigration\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/createbundletablemigration\/prepare(on:)-1hprv","title":"func prepare(on: Database) async throws","type":"method"},{"path":"\/documentation\/app\/createbundletablemigration\/revert(on:)-mfes","title":"func revert(on: Database) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/createbundletablemigration\/defaultname","title":"var defaultName: String","type":"property"},{"path":"\/documentation\/app\/createbundletablemigration\/name","title":"var name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/createbundletablemigration\/prepare(on:)-9f9fv","title":"func prepare(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/app\/createbundletablemigration\/revert(on:)-5bvz1","title":"func revert(on: any Database) -> EventLoopFuture<Void>","type":"method"}],"path":"\/documentation\/app\/createbundletablemigration\/migration-implementations","title":"Migration Implementations","type":"symbol"}],"path":"\/documentation\/app\/createbundletablemigration","title":"CreateBundleTableMigration","type":"struct"},{"title":"Functions","type":"groupMarker"},{"path":"\/documentation\/app\/buildapplication(_:environment:)","title":"func buildApplication(some AppArguments, environment: Environment) async throws -> some ApplicationProtocol","type":"func"},{"path":"\/documentation\/app\/buildrouter()","title":"func buildRouter() -> Router<AppRequestContext>","type":"func"},{"path":"\/documentation\/app\/configurefluent(logger:env:)","title":"func configureFluent(logger: Logger, env: Environment) async throws -> Fluent","type":"func"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/app\/apprequestcontext","title":"AppRequestContext","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"path":"\/documentation\/app\/documentationserver","title":"DocumentationServer","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/app\/requirementerror\/missing(_:)","title":"case missing(String)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/requirementerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/app\/requirementerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/app\/requirementerror","title":"RequirementError","type":"enum"},{"title":"Extended Modules","type":"groupMarker"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/hummingbird\/environment\/require(_:)","title":"func require(String) throws(RequirementError) -> String","type":"method"},{"path":"\/documentation\/app\/hummingbird\/environment\/require(_:as:)","title":"func require<T>(String, as: T.Type) throws(RequirementError) -> T","type":"method"}],"path":"\/documentation\/app\/hummingbird\/environment","title":"Environment","type":"extension"}],"path":"\/documentation\/app\/hummingbird","title":"Hummingbird","type":"extension"},{"children":[{"title":"Extended Types","type":"groupMarker"},{"children":[{"title":"Extended Enumerations","type":"groupMarker"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/app\/logging\/logger\/level\/allvaluestrings-2qalm","title":"static var allValueStrings: [String]","type":"property"},{"path":"\/documentation\/app\/logging\/logger\/level\/allvaluestrings-2rq0o","title":"static var allValueStrings: [String]","type":"property"},{"path":"\/documentation\/app\/logging\/logger\/level\/defaultcompletionkind-14qqa","title":"static var defaultCompletionKind: CompletionKind","type":"property"},{"path":"\/documentation\/app\/logging\/logger\/level\/defaultcompletionkind-8981j","title":"static var defaultCompletionKind: CompletionKind","type":"property"}],"path":"\/documentation\/app\/logging\/logger\/level\/expressiblebyargument-implementations","title":"ExpressibleByArgument Implementations","type":"symbol"}],"path":"\/documentation\/app\/logging\/logger\/level","title":"Logger.Level","type":"extension"}],"path":"\/documentation\/app\/logging\/logger","title":"Logger","type":"extension"}],"path":"\/documentation\/app\/logging","title":"Logging","type":"extension"}],"path":"\/documentation\/app","title":"App","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":2}}