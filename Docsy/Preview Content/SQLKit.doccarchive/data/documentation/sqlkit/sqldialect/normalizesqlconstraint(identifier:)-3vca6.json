{"defaultImplementationsSections":[{"anchor":"SQLDialect-Implementations","identifiers":["doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLDialect\/normalizeSQLConstraint(identifier:)-yc0d"],"title":"SQLDialect Implementations"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"seeAlsoSections":[{"identifiers":["doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLDialect\/customDataType(for:)-2firt","doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLDialect\/nestedSubpathExpression(in:for:)-7d4cw"],"title":"Modifier Methods","generated":true,"anchor":"Modifier-Methods"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/sqlkit\/sqldialect\/normalizesqlconstraint(identifier:)-3vca6"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"normalizeSQLConstraint"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"identifier"},{"text":": ","kind":"text"},{"kind":"keyword","text":"any"},{"text":" ","kind":"text"},{"text":"SQLExpression","kind":"typeIdentifier","preciseIdentifier":"s:6SQLKit13SQLExpressionP","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLExpression"},{"text":") -> ","kind":"text"},{"text":"any","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:6SQLKit13SQLExpressionP","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLExpression","text":"SQLExpression"}],"languages":["swift"],"platforms":["macOS"]}]},{"content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"inlineContent":[{"text":"This provides an interception point for dialects which impose limitations on constraint","type":"text"},{"type":"text","text":" "},{"type":"text","text":"names, such as length limits or a database-wide uniqueness requirement. It is not"},{"text":" ","type":"text"},{"type":"text","text":"required that it be possible to convert a normalized identifer back to its original form"},{"type":"text","text":" "},{"text":"(the conversion may be lossy). This function must not return the same result for","type":"text"},{"type":"text","text":" "},{"type":"text","text":"different inputs, and must always return the same result when given the same input. A"},{"text":" ","type":"text"},{"type":"text","text":"hashing function with a sufficiently large output size, such as SHA-256, is one possible"},{"type":"text","text":" "},{"text":"correct implementation.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Defaults to returning the input identifier unchanged."}],"type":"paragraph"}],"kind":"content"}],"sections":[],"kind":"symbol","identifier":{"url":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLDialect\/normalizeSQLConstraint(identifier:)-3vca6","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A function which is consulted whenever a constraint name will be serialized into a"},{"text":" ","type":"text"},{"text":"query. The dialect must return an expression for an identifer which is unique to the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"input identifier and is a valid constraint name for the dialect."}],"hierarchy":{"paths":[["doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit","doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLDialect"]]},"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"normalizeSQLConstraint","kind":"identifier"},{"text":"(","kind":"text"},{"text":"identifier","kind":"externalParam"},{"kind":"text","text":": "},{"text":"any","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"SQLExpression","preciseIdentifier":"s:6SQLKit13SQLExpressionP"},{"text":") -> ","kind":"text"},{"text":"any","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:6SQLKit13SQLExpressionP","text":"SQLExpression","kind":"typeIdentifier"}],"title":"normalizeSQLConstraint(identifier:)","symbolKind":"method","externalID":"s:6SQLKit10SQLDialectP22normalizeSQLConstraint10identifierAA13SQLExpression_pAaF_p_tF","modules":[{"name":"SQLKit"}],"role":"symbol","required":true,"roleHeading":"Instance Method"},"references":{"doc://sql-kit.SQLKit/documentation/SQLKit/SQLDialect":{"type":"topic","abstract":[{"type":"text","text":"An abstract definition of a specific dialect of SQL."}],"role":"symbol","url":"\/documentation\/sqlkit\/sqldialect","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SQLDialect"}],"title":"SQLDialect","navigatorTitle":[{"kind":"identifier","text":"SQLDialect"}],"identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLDialect"},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLExpression":{"abstract":[{"type":"text","text":"The fundamental base type of anything which can be represented as SQL using SQLKit."}],"navigatorTitle":[{"text":"SQLExpression","kind":"identifier"}],"url":"\/documentation\/sqlkit\/sqlexpression","title":"SQLExpression","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLExpression"}],"kind":"symbol","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLExpression"},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLDialect/normalizeSQLConstraint(identifier:)-3vca6":{"role":"symbol","title":"normalizeSQLConstraint(identifier:)","required":true,"defaultImplementations":1,"url":"\/documentation\/sqlkit\/sqldialect\/normalizesqlconstraint(identifier:)-3vca6","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLDialect\/normalizeSQLConstraint(identifier:)-3vca6","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"normalizeSQLConstraint"},{"text":"(","kind":"text"},{"text":"identifier","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"any","kind":"keyword"},{"kind":"text","text":" "},{"text":"SQLExpression","kind":"typeIdentifier","preciseIdentifier":"s:6SQLKit13SQLExpressionP"},{"text":") -> ","kind":"text"},{"kind":"keyword","text":"any"},{"text":" ","kind":"text"},{"text":"SQLExpression","kind":"typeIdentifier","preciseIdentifier":"s:6SQLKit13SQLExpressionP"}],"kind":"symbol","type":"topic","abstract":[{"text":"A function which is consulted whenever a constraint name will be serialized into a","type":"text"},{"text":" ","type":"text"},{"text":"query. The dialect must return an expression for an identifer which is unique to the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"input identifier and is a valid constraint name for the dialect."}]},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLDialect/nestedSubpathExpression(in:for:)-7d4cw":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"nestedSubpathExpression","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"in"},{"text":": ","kind":"text"},{"text":"any","kind":"keyword"},{"kind":"text","text":" "},{"text":"SQLExpression","kind":"typeIdentifier","preciseIdentifier":"s:6SQLKit13SQLExpressionP"},{"text":", ","kind":"text"},{"text":"for","kind":"externalParam"},{"text":": [","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":"]) -> (","kind":"text"},{"kind":"keyword","text":"any"},{"kind":"text","text":" "},{"preciseIdentifier":"s:6SQLKit13SQLExpressionP","kind":"typeIdentifier","text":"SQLExpression"},{"text":")?","kind":"text"}],"type":"topic","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLDialect\/nestedSubpathExpression(in:for:)-7d4cw","title":"nestedSubpathExpression(in:for:)","url":"\/documentation\/sqlkit\/sqldialect\/nestedsubpathexpression(in:for:)-7d4cw","kind":"symbol","role":"symbol","required":true,"abstract":[{"type":"text","text":"Given a column name and a path consisting of one or more elements, return an expression"},{"text":" ","type":"text"},{"text":"appropriate for accessing a value at the given JSON path.","type":"text"}],"defaultImplementations":1},"doc://sql-kit.SQLKit/documentation/SQLKit":{"kind":"symbol","role":"collection","type":"topic","abstract":[{"text":"SQLKit is a library for building and serializing SQL queries in Swift.","type":"text"}],"url":"\/documentation\/sqlkit","title":"SQLKit","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit"},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLDataType":{"kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"SQLDataType","kind":"identifier"}],"url":"\/documentation\/sqlkit\/sqldatatype","navigatorTitle":[{"text":"SQLDataType","kind":"identifier"}],"abstract":[{"text":"Represents a valueâ€™s type in SQL.","type":"text"}],"title":"SQLDataType","type":"topic","role":"symbol","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLDataType"},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLDialect/normalizeSQLConstraint(identifier:)-yc0d":{"role":"symbol","title":"normalizeSQLConstraint(identifier:)","url":"\/documentation\/sqlkit\/sqldialect\/normalizesqlconstraint(identifier:)-yc0d","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLDialect\/normalizeSQLConstraint(identifier:)-yc0d","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"normalizeSQLConstraint"},{"kind":"text","text":"("},{"text":"identifier","kind":"externalParam"},{"kind":"text","text":": "},{"text":"any","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:6SQLKit13SQLExpressionP","text":"SQLExpression","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"keyword","text":"any"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:6SQLKit13SQLExpressionP","text":"SQLExpression","kind":"typeIdentifier"}],"kind":"symbol","type":"topic","abstract":[{"text":"Default implementation of ","type":"text"},{"identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLDialect\/normalizeSQLConstraint(identifier:)-3vca6","isActive":true,"type":"reference"},{"type":"text","text":"."}]},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLDialect/customDataType(for:)-2firt":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"customDataType"},{"text":"(","kind":"text"},{"text":"for","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:6SQLKit11SQLDataTypeO","text":"SQLDataType","kind":"typeIdentifier"},{"kind":"text","text":") -> ("},{"text":"any","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:6SQLKit13SQLExpressionP","kind":"typeIdentifier","text":"SQLExpression"},{"kind":"text","text":")?"}],"identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLDialect\/customDataType(for:)-2firt","title":"customDataType(for:)","url":"\/documentation\/sqlkit\/sqldialect\/customdatatype(for:)-2firt","kind":"symbol","type":"topic","required":true,"role":"symbol","abstract":[{"text":"A function which is consulted whenever an ","type":"text"},{"identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLDataType","isActive":true,"type":"reference"},{"type":"text","text":" will be serialized into a"},{"type":"text","text":" "},{"type":"text","text":"query. The dialect may return an expression which will replace the default serialization"},{"text":" ","type":"text"},{"type":"text","text":"of the given type. Returning "},{"code":"nil","type":"codeVoice"},{"text":" causes the default to be used.","type":"text"}],"defaultImplementations":1}}}