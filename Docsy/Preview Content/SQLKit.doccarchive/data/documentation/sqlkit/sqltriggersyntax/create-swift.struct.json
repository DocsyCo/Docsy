{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/sqlkit\/sqltriggersyntax\/create-swift.struct"]}],"identifier":{"url":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLTriggerSyntax\/Create-swift.struct","interfaceLanguage":"swift"},"sections":[],"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit","doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLTriggerSyntax"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLTriggerSyntax\/Create-swift.struct\/init(rawValue:)"],"anchor":"Initializers","generated":true},{"anchor":"Instance-Properties","generated":true,"title":"Instance Properties","identifiers":["doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLTriggerSyntax\/Create-swift.struct\/rawValue"]},{"anchor":"Type-Properties","identifiers":["doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLTriggerSyntax\/Create-swift.struct\/conditionRequiresParentheses","doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLTriggerSyntax\/Create-swift.struct\/postgreSQLChecks","doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLTriggerSyntax\/Create-swift.struct\/requiresForEachRow","doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLTriggerSyntax\/Create-swift.struct\/supportsBody","doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLTriggerSyntax\/Create-swift.struct\/supportsCondition","doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLTriggerSyntax\/Create-swift.struct\/supportsConstraints","doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLTriggerSyntax\/Create-swift.struct\/supportsDefiner","doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLTriggerSyntax\/Create-swift.struct\/supportsForEach","doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLTriggerSyntax\/Create-swift.struct\/supportsOrder","doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLTriggerSyntax\/Create-swift.struct\/supportsUpdateColumns"],"generated":true,"title":"Type Properties"},{"title":"Default Implementations","identifiers":["doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLTriggerSyntax\/Create-swift.struct\/Equatable-Implementations","doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLTriggerSyntax\/Create-swift.struct\/OptionSet-Implementations","doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLTriggerSyntax\/Create-swift.struct\/SetAlgebra-Implementations"],"anchor":"Default-Implementations","generated":true}],"metadata":{"roleHeading":"Structure","externalID":"s:6SQLKit16SQLTriggerSyntaxV6CreateV","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Create","kind":"identifier"}],"symbolKind":"struct","modules":[{"name":"SQLKit"}],"title":"SQLTriggerSyntax.Create","role":"symbol","navigatorTitle":[{"text":"Create","kind":"identifier"}]},"abstract":[{"text":"Describes specific feature support for ","type":"text"},{"code":"CREATE TRIGGER","type":"codeVoice"},{"text":" syntax.","type":"text"}],"relationshipsSections":[{"identifiers":["doc:\/\/sql-kit.SQLKit\/SQ","doc:\/\/sql-kit.SQLKit\/s25ExpressibleByArrayLiteralP","doc:\/\/sql-kit.SQLKit\/s9OptionSetP","doc:\/\/sql-kit.SQLKit\/SY","doc:\/\/sql-kit.SQLKit\/s8SendableP","doc:\/\/sql-kit.SQLKit\/s10SetAlgebraP"],"kind":"relationships","type":"conformsTo","title":"Conforms To"}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Create"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"}],"references":{"doc://sql-kit.SQLKit/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/sql-kit.SQLKit\/s8SendableP"},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLTriggerSyntax/Create-swift.struct":{"navigatorTitle":[{"text":"Create","kind":"identifier"}],"identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLTriggerSyntax\/Create-swift.struct","title":"SQLTriggerSyntax.Create","role":"symbol","abstract":[{"type":"text","text":"Describes specific feature support for "},{"code":"CREATE TRIGGER","type":"codeVoice"},{"text":" syntax.","type":"text"}],"kind":"symbol","url":"\/documentation\/sqlkit\/sqltriggersyntax\/create-swift.struct","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Create","kind":"identifier"}],"type":"topic"},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLTriggerSyntax/Create-swift.struct/Equatable-Implementations":{"title":"Equatable Implementations","url":"\/documentation\/sqlkit\/sqltriggersyntax\/create-swift.struct\/equatable-implementations","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLTriggerSyntax\/Create-swift.struct\/Equatable-Implementations","kind":"article","role":"collectionGroup","abstract":[],"type":"topic"},"doc://sql-kit.SQLKit/s10SetAlgebraP":{"title":"Swift.SetAlgebra","type":"unresolvable","identifier":"doc:\/\/sql-kit.SQLKit\/s10SetAlgebraP"},"doc://sql-kit.SQLKit/SQ":{"title":"Swift.Equatable","type":"unresolvable","identifier":"doc:\/\/sql-kit.SQLKit\/SQ"},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLTriggerSyntax/Create-swift.struct/OptionSet-Implementations":{"title":"OptionSet Implementations","url":"\/documentation\/sqlkit\/sqltriggersyntax\/create-swift.struct\/optionset-implementations","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLTriggerSyntax\/Create-swift.struct\/OptionSet-Implementations","abstract":[],"kind":"article","role":"collectionGroup","type":"topic"},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLTriggerSyntax":{"url":"\/documentation\/sqlkit\/sqltriggersyntax","kind":"symbol","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLTriggerSyntax","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"SQLTriggerSyntax","kind":"identifier"}],"title":"SQLTriggerSyntax","role":"symbol","navigatorTitle":[{"text":"SQLTriggerSyntax","kind":"identifier"}],"abstract":[{"text":"Encapsulates a dialect’s support for ","type":"text"},{"type":"codeVoice","code":"CREATE TRIGGER"},{"type":"text","text":" and "},{"type":"codeVoice","code":"DROP TRIGGER"},{"text":" syntax.","type":"text"}],"type":"topic"},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLTriggerSyntax/Create-swift.struct/supportsBody":{"identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLTriggerSyntax\/Create-swift.struct\/supportsBody","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"supportsBody","kind":"identifier"},{"text":": `Self`","kind":"text"}],"type":"topic","role":"symbol","kind":"symbol","url":"\/documentation\/sqlkit\/sqltriggersyntax\/create-swift.struct\/supportsbody","title":"supportsBody","abstract":[{"type":"text","text":"Indicates support for specifying a trigger’s implementation as an inline sequence of statements."}]},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLTriggerSyntax/Create-swift.struct/SetAlgebra-Implementations":{"url":"\/documentation\/sqlkit\/sqltriggersyntax\/create-swift.struct\/setalgebra-implementations","kind":"article","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLTriggerSyntax\/Create-swift.struct\/SetAlgebra-Implementations","title":"SetAlgebra Implementations","role":"collectionGroup","abstract":[],"type":"topic"},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLTriggerSyntax/Create-swift.struct/supportsOrder":{"title":"supportsOrder","url":"\/documentation\/sqlkit\/sqltriggersyntax\/create-swift.struct\/supportsorder","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLTriggerSyntax\/Create-swift.struct\/supportsOrder","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"`Indicates support for ordering triggers relative to one another."}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"supportsOrder"},{"kind":"text","text":": `Self`"}],"type":"topic"},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLTriggerSyntax/Create-swift.struct/supportsCondition":{"identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLTriggerSyntax\/Create-swift.struct\/supportsCondition","title":"supportsCondition","role":"symbol","abstract":[{"text":"Indicates support for a conditional predicate controlling invocation of the trigger.","type":"text"}],"kind":"symbol","url":"\/documentation\/sqlkit\/sqltriggersyntax\/create-swift.struct\/supportscondition","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"supportsCondition"},{"kind":"text","text":": `Self`"}],"type":"topic"},"doc://sql-kit.SQLKit/documentation/SQLKit":{"kind":"symbol","role":"collection","type":"topic","abstract":[{"text":"SQLKit is a library for building and serializing SQL queries in Swift.","type":"text"}],"url":"\/documentation\/sqlkit","title":"SQLKit","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit"},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLTriggerSyntax/Create-swift.struct/init(rawValue:)":{"identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLTriggerSyntax\/Create-swift.struct\/init(rawValue:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"rawValue"},{"kind":"text","text":": "},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":")","kind":"text"}],"type":"topic","role":"symbol","kind":"symbol","url":"\/documentation\/sqlkit\/sqltriggersyntax\/create-swift.struct\/init(rawvalue:)","title":"init(rawValue:)","abstract":[]},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLTriggerSyntax/Create-swift.struct/postgreSQLChecks":{"title":"postgreSQLChecks","url":"\/documentation\/sqlkit\/sqltriggersyntax\/create-swift.struct\/postgresqlchecks","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLTriggerSyntax\/Create-swift.struct\/postgreSQLChecks","kind":"symbol","role":"symbol","abstract":[{"text":"Indicates that PostgreSQL-specific syntax correctness checks should be made at runtime.","type":"text"}],"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"postgreSQLChecks"},{"kind":"text","text":": `Self`"}],"type":"topic"},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLTriggerSyntax/Create-swift.struct/rawValue":{"identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLTriggerSyntax\/Create-swift.struct\/rawValue","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"rawValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"type":"topic","role":"symbol","kind":"symbol","url":"\/documentation\/sqlkit\/sqltriggersyntax\/create-swift.struct\/rawvalue","title":"rawValue","abstract":[]},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLTriggerSyntax/Create-swift.struct/supportsForEach":{"role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"supportsForEach","kind":"identifier"},{"kind":"text","text":": `Self`"}],"title":"supportsForEach","kind":"symbol","abstract":[{"text":"Indicates support for the ","type":"text"},{"code":"FOR EACH ROW","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"FOR EACH STATEMENT","type":"codeVoice"},{"type":"text","text":" syntax."}],"type":"topic","url":"\/documentation\/sqlkit\/sqltriggersyntax\/create-swift.struct\/supportsforeach","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLTriggerSyntax\/Create-swift.struct\/supportsForEach"},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLTriggerSyntax/Create-swift.struct/supportsConstraints":{"title":"supportsConstraints","url":"\/documentation\/sqlkit\/sqltriggersyntax\/create-swift.struct\/supportsconstraints","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLTriggerSyntax\/Create-swift.struct\/supportsConstraints","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Indicates support for the "},{"type":"codeVoice","code":"CONSTRAINT"},{"type":"text","text":" trigger type."}],"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"supportsConstraints","kind":"identifier"},{"text":": `Self`","kind":"text"}],"type":"topic"},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLTriggerSyntax/Create-swift.struct/supportsDefiner":{"url":"\/documentation\/sqlkit\/sqltriggersyntax\/create-swift.struct\/supportsdefiner","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"supportsDefiner","kind":"identifier"},{"text":": `Self`","kind":"text"}],"title":"supportsDefiner","abstract":[{"type":"text","text":"Indicates support for specifying a "},{"code":"DEFINER","type":"codeVoice"},{"text":" clause for the purposes of access control.","type":"text"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLTriggerSyntax\/Create-swift.struct\/supportsDefiner","type":"topic"},"doc://sql-kit.SQLKit/s25ExpressibleByArrayLiteralP":{"title":"Swift.ExpressibleByArrayLiteral","identifier":"doc:\/\/sql-kit.SQLKit\/s25ExpressibleByArrayLiteralP","type":"unresolvable"},"doc://sql-kit.SQLKit/s9OptionSetP":{"identifier":"doc:\/\/sql-kit.SQLKit\/s9OptionSetP","type":"unresolvable","title":"Swift.OptionSet"},"doc://sql-kit.SQLKit/SY":{"identifier":"doc:\/\/sql-kit.SQLKit\/SY","type":"unresolvable","title":"Swift.RawRepresentable"},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLTriggerSyntax/Create-swift.struct/supportsUpdateColumns":{"title":"supportsUpdateColumns","kind":"symbol","type":"topic","abstract":[{"text":"Indicates support for an ","type":"text"},{"code":"OF","type":"codeVoice"},{"text":" clause on ","type":"text"},{"code":"UPDATE","type":"codeVoice"},{"type":"text","text":" triggers specifying that only a subset of columns should"},{"type":"text","text":" "},{"type":"text","text":"invoke the trigger."}],"url":"\/documentation\/sqlkit\/sqltriggersyntax\/create-swift.struct\/supportsupdatecolumns","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLTriggerSyntax\/Create-swift.struct\/supportsUpdateColumns","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"supportsUpdateColumns"},{"kind":"text","text":": `Self`"}]},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLTriggerSyntax/Create-swift.struct/conditionRequiresParentheses":{"type":"topic","url":"\/documentation\/sqlkit\/sqltriggersyntax\/create-swift.struct\/conditionrequiresparentheses","abstract":[{"type":"text","text":"When "},{"type":"reference","isActive":true,"identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLTriggerSyntax\/Create-swift.struct\/supportsCondition"},{"text":" is also set, indicates that the condition must be wrapped by parenthesis.","type":"text"}],"role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"conditionRequiresParentheses","kind":"identifier"},{"kind":"text","text":": `Self`"}],"kind":"symbol","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLTriggerSyntax\/Create-swift.struct\/conditionRequiresParentheses","title":"conditionRequiresParentheses"},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLTriggerSyntax/Create-swift.struct/requiresForEachRow":{"kind":"symbol","title":"requiresForEachRow","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLTriggerSyntax\/Create-swift.struct\/requiresForEachRow","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"requiresForEachRow"},{"kind":"text","text":": `Self`"}],"url":"\/documentation\/sqlkit\/sqltriggersyntax\/create-swift.struct\/requiresforeachrow","type":"topic","abstract":[{"text":"Indicates that the ","type":"text"},{"type":"codeVoice","code":"FOR EACH ROW"},{"type":"text","text":" clause is syntactically required for trigger creation."}],"role":"symbol"}}}