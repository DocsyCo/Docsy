{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/sqlkit\/sqlconflictaction\/update(assignments:predicate:)"]}],"sections":[],"abstract":[{"text":"Specifies that conflicts this action is applied to shall cause the ","type":"text"},{"type":"codeVoice","code":"INSERT"},{"text":" to be converted to an ","type":"text"},{"code":"UPDATE","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"on the same schema which performs the column updates specified by the associated column assignments and,"},{"type":"text","text":" "},{"type":"text","text":"where supported by the database, constrained by the associated predicate. The column assignments may"},{"text":" ","type":"text"},{"type":"text","text":"include "},{"identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLExcludedColumn","type":"reference","isActive":true},{"type":"text","text":" expressions to refer to values which would have been inserted into the row"},{"text":" ","type":"text"},{"text":"if the conflict had not taken place.","type":"text"}],"metadata":{"modules":[{"name":"SQLKit"}],"title":"SQLConflictAction.update(assignments:predicate:)","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"text":"update","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"assignments"},{"text":": [","kind":"text"},{"kind":"keyword","text":"any"},{"kind":"text","text":" "},{"preciseIdentifier":"s:6SQLKit13SQLExpressionP","text":"SQLExpression","kind":"typeIdentifier"},{"kind":"text","text":"], "},{"text":"predicate","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"any","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"SQLExpression","preciseIdentifier":"s:6SQLKit13SQLExpressionP"},{"text":")?)","kind":"text"}],"roleHeading":"Case","symbolKind":"case","externalID":"s:6SQLKit17SQLConflictActionO6updateyACSayAA13SQLExpression_pG_AaE_pSgtcACmF","role":"symbol"},"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"update"},{"kind":"text","text":"("},{"kind":"externalParam","text":"assignments"},{"kind":"text","text":": ["},{"kind":"keyword","text":"any"},{"text":" ","kind":"text"},{"identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLExpression","text":"SQLExpression","kind":"typeIdentifier","preciseIdentifier":"s:6SQLKit13SQLExpressionP"},{"text":"], ","kind":"text"},{"text":"predicate","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"keyword","text":"any"},{"text":" ","kind":"text"},{"text":"SQLExpression","kind":"typeIdentifier","preciseIdentifier":"s:6SQLKit13SQLExpressionP","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLExpression"},{"kind":"text","text":")?)"}],"languages":["swift"],"platforms":["macOS"]}]}],"hierarchy":{"paths":[["doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit","doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLConflictAction"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLConflictAction\/update(assignments:predicate:)"},"kind":"symbol","references":{"doc://sql-kit.SQLKit/documentation/SQLKit/SQLExpression":{"abstract":[{"type":"text","text":"The fundamental base type of anything which can be represented as SQL using SQLKit."}],"navigatorTitle":[{"text":"SQLExpression","kind":"identifier"}],"url":"\/documentation\/sqlkit\/sqlexpression","title":"SQLExpression","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLExpression"}],"kind":"symbol","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLExpression"},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLExcludedColumn":{"title":"SQLExcludedColumn","role":"symbol","kind":"symbol","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLExcludedColumn","abstract":[{"text":"An expression appearing on the right side of a column assignment which, when the assignment list","type":"text"},{"type":"text","text":" "},{"type":"text","text":"is part of an upsertâ€™s update acion, refers to the value which was originally to be inserted for"},{"text":" ","type":"text"},{"text":"the given column.","type":"text"}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SQLExcludedColumn"}],"navigatorTitle":[{"kind":"identifier","text":"SQLExcludedColumn"}],"url":"\/documentation\/sqlkit\/sqlexcludedcolumn"},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLConflictAction/update(assignments:predicate:)":{"url":"\/documentation\/sqlkit\/sqlconflictaction\/update(assignments:predicate:)","type":"topic","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLConflictAction\/update(assignments:predicate:)","role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"text":"update","kind":"identifier"},{"text":"(","kind":"text"},{"text":"assignments","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"any","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SQLExpression","kind":"typeIdentifier","preciseIdentifier":"s:6SQLKit13SQLExpressionP"},{"kind":"text","text":"], "},{"text":"predicate","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"keyword","text":"any"},{"kind":"text","text":" "},{"text":"SQLExpression","kind":"typeIdentifier","preciseIdentifier":"s:6SQLKit13SQLExpressionP"},{"text":")?)","kind":"text"}],"abstract":[{"type":"text","text":"Specifies that conflicts this action is applied to shall cause the "},{"type":"codeVoice","code":"INSERT"},{"type":"text","text":" to be converted to an "},{"code":"UPDATE","type":"codeVoice"},{"text":" ","type":"text"},{"type":"text","text":"on the same schema which performs the column updates specified by the associated column assignments and,"},{"text":" ","type":"text"},{"type":"text","text":"where supported by the database, constrained by the associated predicate. The column assignments may"},{"text":" ","type":"text"},{"text":"include ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLExcludedColumn"},{"text":" expressions to refer to values which would have been inserted into the row","type":"text"},{"type":"text","text":" "},{"type":"text","text":"if the conflict had not taken place."}],"title":"SQLConflictAction.update(assignments:predicate:)","kind":"symbol"},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLConflictAction":{"abstract":[{"text":"An action to take when an ","type":"text"},{"type":"codeVoice","code":"INSERT"},{"text":" query encounters a unique constraint violation.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLConflictAction"}],"title":"SQLConflictAction","type":"topic","navigatorTitle":[{"text":"SQLConflictAction","kind":"identifier"}],"url":"\/documentation\/sqlkit\/sqlconflictaction","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLConflictAction","kind":"symbol"},"doc://sql-kit.SQLKit/documentation/SQLKit":{"kind":"symbol","role":"collection","type":"topic","abstract":[{"text":"SQLKit is a library for building and serializing SQL queries in Swift.","type":"text"}],"url":"\/documentation\/sqlkit","title":"SQLKit","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit"}}}