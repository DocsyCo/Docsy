{"relationshipsSections":[{"type":"conformsTo","identifiers":["doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLExpression","doc:\/\/sql-kit.SQLKit\/s43ExpressibleByExtendedGraphemeClusterLiteralP","doc:\/\/sql-kit.SQLKit\/s32ExpressibleByStringInterpolationP","doc:\/\/sql-kit.SQLKit\/s26ExpressibleByStringLiteralP","doc:\/\/sql-kit.SQLKit\/s33ExpressibleByUnicodeScalarLiteralP","doc:\/\/sql-kit.SQLKit\/s8SendableP","doc:\/\/sql-kit.SQLKit\/s27StringInterpolationProtocolP"],"title":"Conforms To","kind":"relationships"}],"identifier":{"url":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLQueryString","interfaceLanguage":"swift"},"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLQueryString"}],"title":"SQLQueryString","roleHeading":"Structure","symbolKind":"struct","externalID":"s:6SQLKit14SQLQueryStringV","navigatorTitle":[{"kind":"identifier","text":"SQLQueryString"}],"modules":[{"name":"SQLKit"}]},"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLQueryString\/+(_:_:)","doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLQueryString\/+=(_:_:)"],"anchor":"Operators","generated":true,"title":"Operators"},{"title":"Initializers","generated":true,"anchor":"Initializers","identifiers":["doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLQueryString\/init(_:)"]},{"identifiers":["doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLQueryString\/appendInterpolation(_:)-18z1i","doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLQueryString\/appendInterpolation(_:)-193tk","doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLQueryString\/appendInterpolation(_:)-6kl58","doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLQueryString\/appendInterpolation(bind:)","doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLQueryString\/appendInterpolation(binds:)","doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLQueryString\/appendInterpolation(ident:)","doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLQueryString\/appendInterpolation(idents:joinedBy:)","doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLQueryString\/appendInterpolation(literal:)-8e7rs","doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLQueryString\/appendInterpolation(literal:)-8t06r","doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLQueryString\/appendInterpolation(literal:)-hllc","doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLQueryString\/appendInterpolation(literals:joinedBy:)","doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLQueryString\/appendInterpolation(raw:)","doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLQueryString\/appendInterpolation(unsafeRaw:)","doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLQueryString\/serialize(to:)"],"anchor":"Instance-Methods","generated":true,"title":"Instance Methods"},{"identifiers":["doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLQueryString\/ExpressibleByExtendedGraphemeClusterLiteral-Implementations","doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLQueryString\/ExpressibleByStringInterpolation-Implementations","doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLQueryString\/ExpressibleByStringLiteral-Implementations","doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLQueryString\/ExpressibleByUnicodeScalarLiteral-Implementations","doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLQueryString\/StringInterpolationProtocol-Implementations"],"anchor":"Default-Implementations","generated":true,"title":"Default Implementations"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/sqlkit\/sqlquerystring"]}],"abstract":[{"type":"text","text":"An expression consisting of an array of constituent subexpressions generated by custom string interpolations."}],"hierarchy":{"paths":[["doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"SQLQueryString","kind":"identifier"}],"languages":["swift"],"platforms":["macOS"]}]},{"content":[{"type":"heading","anchor":"overview","text":"Overview","level":2},{"inlineContent":[{"text":"Query strings are primarily intended for use with ","type":"text"},{"type":"reference","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLRawBuilder","isActive":true},{"text":", providing for the inclusion of bound","type":"text"},{"type":"text","text":" "},{"text":"parameters in otherwise “raw” queries. The API also supports some of the more commonly used quoting functionality.","type":"text"},{"type":"text","text":" "},{"text":"Query strings are also ","type":"text"},{"type":"reference","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLExpression","isActive":true},{"text":"s, allowing them to be used almost anywhere in SQLKit.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A corollary to this is that, while a given "},{"isActive":true,"type":"reference","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLQueryString"},{"text":" can represent an entire complete “query” to execute","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"against a database, it can also - as with any "},{"identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLExpression","isActive":true,"type":"reference"},{"type":"text","text":" but particularly similarly to "},{"type":"reference","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLStatement","isActive":true},{"type":"text","text":" -"},{"text":" ","type":"text"},{"text":"represent any lesser fragment of SQL right down to an empty string, or anywhere in between.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Example usage:"}]},{"code":["\/\/ As an entire query:","try await database.raw(\"\"\"","    UPDATE \\(ident: \"foo\")","        SET \\(ident: \"bar\")=\\(bind: value)","        WHERE \\(ident: \"baz\")=\\(literal: \"bop\")","    \"\"\").run()","","\/\/ As an SQL fragment (albeit in an extremely contrived fashion):","try await database.update(\"foo\")","    .set(\"bar\", to: value)","    .where(\"\\(ident: \"baz\")\" as SQLQueryString, .equal, \"\\(literal: \"bop\")\" as SQLQueryString)","    .run()"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLQueryString"},{"type":"text","text":"’s additional interpolations (such as "},{"type":"codeVoice","code":"\\(ident:)"},{"type":"text","text":", "},{"code":"\\(literal:)","type":"codeVoice"},{"type":"text","text":", etc., as well as the ability"},{"type":"text","text":" "},{"type":"text","text":"to embed arbitrary expressions with "},{"code":"\\(_:)","type":"codeVoice"},{"text":") are useful in particular for writing raw queries which are","type":"text"},{"type":"text","text":" "},{"type":"text","text":"nonetheless compatible with multiple SQL dialects, such as in the following example:"}],"type":"paragraph"},{"syntax":"swift","code":["let messyIdentifer = someCondition ? \"abcd{}efgh\" : \"marmalade!!\" \/\/ invalid identifiers if not escaped","try await database.raw(\"\"\"","    SELECT \\(ident: messyIdentifier) FROM \\(ident: \"whatever\") WHERE \\(ident: \"x\")=\\(bind: \"foo\")","    \"\"\").all()","\/\/ This query renders differently in various dialect:","\/\/ - PostgreSQL: SELECT \"abcd{}efgh\" FROM \"whatever\" WHERE \"x\"=$0 [\"foo\"]","\/\/ -      MySQL: SELECT `abcd{}efgh` FROM `whatever` WHERE `x`=?  [\"foo\"]","\/\/ -     SQLite: SELECT \"abcd{}efgh\" FROM \"whatever\" WHERE \"x\"=?0 [\"foo\"]"],"type":"codeListing"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Even in Swift 5.10, language limitations prevent supporting literal strings everywhere ","type":"text"},{"isActive":true,"identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLExpression","type":"reference"},{"type":"text","text":"s"},{"type":"text","text":" "},{"type":"text","text":"are allowed, because the necessary conformance (e.g."},{"text":" ","type":"text"},{"type":"codeVoice","code":"extension SQLExpression: ExtensibleByStringLiteral where Self == SQLQueryString"},{"text":") is not allowed by the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"compiler. The maintainer of this package at the time of this writing considers this to perhaps be a blessing"},{"type":"text","text":" "},{"type":"text","text":"in disguise, given the concern that it is already “too easy” as things stand to embed raw SQL into queries"},{"type":"text","text":" "},{"text":"without worrying about injection concerns. As she might put it, “You can already write entire raw queries","type":"text"},{"type":"text","text":" "},{"type":"text","text":"without escaping any of the things you ought to be,” paying no heed to the fact that she was the one who"},{"type":"text","text":" "},{"type":"text","text":"brought up the topic in the first place."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLQueryString","type":"reference","isActive":true},{"type":"text","text":" is almost identical to "},{"identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLStatement","isActive":true,"type":"reference"},{"type":"text","text":"; they track content identically, operate by"},{"text":" ","type":"text"},{"text":"building up output based on progressive inputs, and often (indeed, usually) represent entire queries. At this","type":"text"},{"text":" ","type":"text"},{"text":"point, the only remaining reason they haven’t been made into a single type is the confusion wouldn’t be worth","type":"text"},{"type":"text","text":" "},{"text":"it in light of the expectation, at the time of this writing, that this package will soon be receiving a major","type":"text"},{"type":"text","text":" "},{"text":"version bump, at which point far more opportunities will indeed abound.","type":"text"}]}]}],"type":"unorderedList"}],"type":"aside","name":"Bonus remarks","style":"note"}],"kind":"content"}],"seeAlsoSections":[{"title":"Basic Expressions","generated":true,"anchor":"Basic-Expressions","identifiers":["doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLAlias","doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLBetween","doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLColumn","doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLConstraint","doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLDataType","doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLDirection","doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLDistinct","doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLForeignKeyAction","doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLNestedSubpathExpression","doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLQualifiedTable"]}],"references":{"doc://sql-kit.SQLKit/documentation/SQLKit/SQLBetween":{"kind":"symbol","title":"SQLBetween","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLBetween","navigatorTitle":[{"text":"SQLBetween","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"SQLBetween","kind":"identifier"}],"type":"topic","url":"\/documentation\/sqlkit\/sqlbetween","abstract":[{"text":"An ","type":"text"},{"type":"reference","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLExpression","isActive":true},{"text":" which constructs SQL of the form ","type":"text"},{"type":"codeVoice","code":"<operand> BETWEEN <lowerBound> AND <upperBound>"},{"type":"text","text":"."}],"role":"symbol"},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLQueryString/appendInterpolation(unsafeRaw:)":{"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"appendInterpolation","kind":"identifier"},{"text":"(","kind":"text"},{"text":"unsafeRaw","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":")"}],"title":"appendInterpolation(unsafeRaw:)","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Adds an interpolated string of raw SQL, potentially including associated parameter bindings."}],"url":"\/documentation\/sqlkit\/sqlquerystring\/appendinterpolation(unsaferaw:)","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLQueryString\/appendInterpolation(unsafeRaw:)"},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLQueryString/appendInterpolation(bind:)":{"abstract":[{"text":"Embed an ","type":"text"},{"type":"codeVoice","code":"Encodable"},{"text":" value as a binding in the SQL query.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"appendInterpolation","kind":"identifier"},{"text":"(","kind":"text"},{"text":"bind","kind":"externalParam"},{"kind":"text","text":": "},{"text":"any","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Encodable","preciseIdentifier":"s:SE","kind":"typeIdentifier"},{"text":" & ","kind":"text"},{"preciseIdentifier":"s:s8SendableP","text":"Sendable","kind":"typeIdentifier"},{"kind":"text","text":")"}],"title":"appendInterpolation(bind:)","kind":"symbol","role":"symbol","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLQueryString\/appendInterpolation(bind:)","type":"topic","url":"\/documentation\/sqlkit\/sqlquerystring\/appendinterpolation(bind:)"},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLConstraint":{"navigatorTitle":[{"text":"SQLConstraint","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"An expression representing the combination of a constraint name and algorithm for table constraints.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"SQLConstraint","kind":"identifier"}],"identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLConstraint","url":"\/documentation\/sqlkit\/sqlconstraint","type":"topic","title":"SQLConstraint","role":"symbol"},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLQualifiedTable":{"type":"topic","navigatorTitle":[{"text":"SQLQualifiedTable","kind":"identifier"}],"url":"\/documentation\/sqlkit\/sqlqualifiedtable","abstract":[{"text":"An expression representing an optionally second-level-qualified SQL table.","type":"text"}],"identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLQualifiedTable","title":"SQLQualifiedTable","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"SQLQualifiedTable","kind":"identifier"}],"role":"symbol"},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLQueryString/appendInterpolation(_:)-6kl58":{"identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLQueryString\/appendInterpolation(_:)-6kl58","title":"appendInterpolation(_:)","role":"symbol","abstract":[{"text":"Embed an arbitary ","type":"text"},{"identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLExpression","type":"reference","isActive":true},{"type":"text","text":" in the string."}],"kind":"symbol","url":"\/documentation\/sqlkit\/sqlquerystring\/appendinterpolation(_:)-6kl58","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"appendInterpolation"},{"text":"(","kind":"text"},{"kind":"keyword","text":"any"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:6SQLKit13SQLExpressionP","text":"SQLExpression"},{"kind":"text","text":")"}],"type":"topic"},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLQueryString/ExpressibleByExtendedGraphemeClusterLiteral-Implementations":{"url":"\/documentation\/sqlkit\/sqlquerystring\/expressiblebyextendedgraphemeclusterliteral-implementations","kind":"article","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLQueryString\/ExpressibleByExtendedGraphemeClusterLiteral-Implementations","role":"collectionGroup","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"topic","abstract":[]},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLForeignKeyAction":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"SQLForeignKeyAction","kind":"identifier"}],"url":"\/documentation\/sqlkit\/sqlforeignkeyaction","kind":"symbol","title":"SQLForeignKeyAction","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLForeignKeyAction","type":"topic","role":"symbol","navigatorTitle":[{"text":"SQLForeignKeyAction","kind":"identifier"}],"abstract":[{"type":"text","text":"An expression specifying a behavior for a foreign key constraint violation."}]},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLQueryString/appendInterpolation(literal:)-hllc":{"role":"symbol","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLQueryString\/appendInterpolation(literal:)-hllc","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Embed an integer as a literal value, as if via "},{"identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLLiteral\/numeric(_:)","isActive":true,"type":"reference"}],"url":"\/documentation\/sqlkit\/sqlquerystring\/appendinterpolation(literal:)-hllc","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"appendInterpolation"},{"kind":"text","text":"("},{"text":"literal","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:Sz","text":"BinaryInteger","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"appendInterpolation(literal:)"},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLQueryString/StringInterpolationProtocol-Implementations":{"type":"topic","url":"\/documentation\/sqlkit\/sqlquerystring\/stringinterpolationprotocol-implementations","abstract":[],"kind":"article","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLQueryString\/StringInterpolationProtocol-Implementations","title":"StringInterpolationProtocol Implementations","role":"collectionGroup"},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLLiteral/string(_:)":{"url":"\/documentation\/sqlkit\/sqlliteral\/string(_:)","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"string"},{"text":"(","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":")"}],"kind":"symbol","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLLiteral\/string(_:)","role":"symbol","title":"SQLLiteral.string(_:)","type":"topic","abstract":[{"type":"text","text":"A literal expression representing a literal string in the current dialect."}]},"doc://sql-kit.SQLKit/s33ExpressibleByUnicodeScalarLiteralP":{"type":"unresolvable","identifier":"doc:\/\/sql-kit.SQLKit\/s33ExpressibleByUnicodeScalarLiteralP","title":"Swift.ExpressibleByUnicodeScalarLiteral"},"doc://sql-kit.SQLKit/s26ExpressibleByStringLiteralP":{"type":"unresolvable","identifier":"doc:\/\/sql-kit.SQLKit\/s26ExpressibleByStringLiteralP","title":"Swift.ExpressibleByStringLiteral"},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLQueryString":{"kind":"symbol","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLQueryString","role":"symbol","title":"SQLQueryString","abstract":[{"type":"text","text":"An expression consisting of an array of constituent subexpressions generated by custom string interpolations."}],"navigatorTitle":[{"text":"SQLQueryString","kind":"identifier"}],"url":"\/documentation\/sqlkit\/sqlquerystring","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SQLQueryString"}]},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLQueryString/appendInterpolation(literals:joinedBy:)":{"role":"symbol","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLQueryString\/appendInterpolation(literals:joinedBy:)","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Embed an array of "},{"type":"codeVoice","code":"String"},{"type":"text","text":"s as a list of literal values, placing the "},{"type":"codeVoice","code":"joiner"},{"type":"text","text":" between each pair of values."}],"url":"\/documentation\/sqlkit\/sqlquerystring\/appendinterpolation(literals:joinedby:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"appendInterpolation"},{"kind":"text","text":"("},{"text":"literals","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"text":"joinedBy","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":")","kind":"text"}],"title":"appendInterpolation(literals:joinedBy:)"},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLQueryString/appendInterpolation(_:)-18z1i":{"title":"appendInterpolation(_:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"appendInterpolation","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":")","kind":"text"}],"kind":"symbol","abstract":[{"type":"text","text":"Embed a "},{"code":"Bool","type":"codeVoice"},{"text":" as a literal value, as if via ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLLiteral\/boolean(_:)"},{"type":"text","text":"."}],"url":"\/documentation\/sqlkit\/sqlquerystring\/appendinterpolation(_:)-18z1i","role":"symbol","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLQueryString\/appendInterpolation(_:)-18z1i"},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLQueryString/appendInterpolation(_:)-193tk":{"url":"\/documentation\/sqlkit\/sqlquerystring\/appendinterpolation(_:)-193tk","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"appendInterpolation"},{"text":"(","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":")"}],"kind":"symbol","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLQueryString\/appendInterpolation(_:)-193tk","role":"symbol","title":"appendInterpolation(_:)","type":"topic","deprecated":true,"abstract":[{"text":"[EVEN MORE DEPRECATED] Adds an interpolated string of raw SQL.","type":"text"}]},"doc://sql-kit.SQLKit/s27StringInterpolationProtocolP":{"title":"Swift.StringInterpolationProtocol","type":"unresolvable","identifier":"doc:\/\/sql-kit.SQLKit\/s27StringInterpolationProtocolP"},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLQueryString/appendInterpolation(raw:)":{"abstract":[{"type":"text","text":"[DEPRECATED] Adds an interpolated string of raw SQL."}],"identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLQueryString\/appendInterpolation(raw:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"appendInterpolation","kind":"identifier"},{"text":"(","kind":"text"},{"text":"raw","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":")","kind":"text"}],"title":"appendInterpolation(raw:)","type":"topic","deprecated":true,"kind":"symbol","role":"symbol","url":"\/documentation\/sqlkit\/sqlquerystring\/appendinterpolation(raw:)"},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLQueryString/ExpressibleByStringInterpolation-Implementations":{"role":"collectionGroup","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLQueryString\/ExpressibleByStringInterpolation-Implementations","kind":"article","type":"topic","abstract":[],"url":"\/documentation\/sqlkit\/sqlquerystring\/expressiblebystringinterpolation-implementations","title":"ExpressibleByStringInterpolation Implementations"},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLNestedSubpathExpression":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"SQLNestedSubpathExpression"}],"role":"symbol","title":"SQLNestedSubpathExpression","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SQLNestedSubpathExpression"}],"abstract":[{"text":"A “nested subpath” expression is used to descend into the “deeper” structure of a non-scalar value,","type":"text"},{"text":" ","type":"text"},{"text":"such as a dictionary, array, or JSON value.","type":"text"}],"url":"\/documentation\/sqlkit\/sqlnestedsubpathexpression","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLNestedSubpathExpression"},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLDirection":{"abstract":[{"type":"text","text":"Describes an ordering direction for a given sorting key."}],"identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLDirection","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SQLDirection"}],"title":"SQLDirection","type":"topic","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"SQLDirection","kind":"identifier"}],"url":"\/documentation\/sqlkit\/sqldirection"},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLRawBuilder":{"title":"SQLRawBuilder","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLRawBuilder","role":"symbol","abstract":[{"text":"Builds raw SQL queries.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"SQLRawBuilder","kind":"identifier"}],"navigatorTitle":[{"text":"SQLRawBuilder","kind":"identifier"}],"type":"topic","url":"\/documentation\/sqlkit\/sqlrawbuilder"},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLIdentifier":{"role":"symbol","abstract":[{"text":"A fundamental syntactical expression - a quoted identifier (also often referred to as a “name” or “object name”).","type":"text"}],"identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLIdentifier","title":"SQLIdentifier","url":"\/documentation\/sqlkit\/sqlidentifier","navigatorTitle":[{"kind":"identifier","text":"SQLIdentifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"SQLIdentifier","kind":"identifier"}],"type":"topic","kind":"symbol"},"doc://sql-kit.SQLKit/documentation/SQLKit":{"kind":"symbol","role":"collection","type":"topic","abstract":[{"text":"SQLKit is a library for building and serializing SQL queries in Swift.","type":"text"}],"url":"\/documentation\/sqlkit","title":"SQLKit","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit"},"doc://sql-kit.SQLKit/s32ExpressibleByStringInterpolationP":{"title":"Swift.ExpressibleByStringInterpolation","type":"unresolvable","identifier":"doc:\/\/sql-kit.SQLKit\/s32ExpressibleByStringInterpolationP"},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLQueryString/serialize(to:)":{"role":"symbol","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLQueryString\/serialize(to:)","kind":"symbol","type":"topic","abstract":[{"text":"Invoked when a request is made to serialize the expression to raw SQL.","type":"text"}],"url":"\/documentation\/sqlkit\/sqlquerystring\/serialize(to:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"serialize","kind":"identifier"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"preciseIdentifier":"s:6SQLKit13SQLSerializerV","kind":"typeIdentifier","text":"SQLSerializer"},{"text":")","kind":"text"}],"title":"serialize(to:)"},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLQueryString/ExpressibleByStringLiteral-Implementations":{"url":"\/documentation\/sqlkit\/sqlquerystring\/expressiblebystringliteral-implementations","kind":"article","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLQueryString\/ExpressibleByStringLiteral-Implementations","role":"collectionGroup","title":"ExpressibleByStringLiteral Implementations","type":"topic","abstract":[]},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLQueryString/appendInterpolation(idents:joinedBy:)":{"role":"symbol","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLQueryString\/appendInterpolation(idents:joinedBy:)","kind":"symbol","type":"topic","abstract":[{"text":"Embed an array of ","type":"text"},{"type":"codeVoice","code":"String"},{"type":"text","text":"s as a list of SQL identifiers, using the "},{"code":"joiner","type":"codeVoice"},{"text":" to separate them.","type":"text"}],"url":"\/documentation\/sqlkit\/sqlquerystring\/appendinterpolation(idents:joinedby:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"appendInterpolation","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"idents"},{"text":": [","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":"], "},{"text":"joinedBy","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":")","kind":"text"}],"title":"appendInterpolation(idents:joinedBy:)"},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLQueryString/ExpressibleByUnicodeScalarLiteral-Implementations":{"url":"\/documentation\/sqlkit\/sqlquerystring\/expressiblebyunicodescalarliteral-implementations","kind":"article","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLQueryString\/ExpressibleByUnicodeScalarLiteral-Implementations","role":"collectionGroup","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"topic","abstract":[]},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLLiteral/boolean(_:)":{"type":"topic","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"A literal expression representing a boolean literal in the current dialect."}],"url":"\/documentation\/sqlkit\/sqlliteral\/boolean(_:)","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"text":"boolean","kind":"identifier"},{"kind":"text","text":"("},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":")"}],"identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLLiteral\/boolean(_:)","title":"SQLLiteral.boolean(_:)"},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLQueryString/+(_:_:)":{"role":"symbol","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLQueryString\/+(_:_:)","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Concatenate two "},{"type":"reference","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLQueryString","isActive":true},{"type":"text","text":"s and return the combined result."}],"url":"\/documentation\/sqlkit\/sqlquerystring\/+(_:_:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"+"},{"kind":"text","text":" "},{"text":"(`Self`","kind":"text"},{"text":", `Self`","kind":"text"},{"text":") -> ","kind":"text"},{"text":"SQLQueryString","kind":"typeIdentifier","preciseIdentifier":"s:6SQLKit14SQLQueryStringV"}],"title":"+(_:_:)"},"doc://sql-kit.SQLKit/s43ExpressibleByExtendedGraphemeClusterLiteralP":{"identifier":"doc:\/\/sql-kit.SQLKit\/s43ExpressibleByExtendedGraphemeClusterLiteralP","title":"Swift.ExpressibleByExtendedGraphemeClusterLiteral","type":"unresolvable"},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLExpression":{"abstract":[{"type":"text","text":"The fundamental base type of anything which can be represented as SQL using SQLKit."}],"navigatorTitle":[{"text":"SQLExpression","kind":"identifier"}],"url":"\/documentation\/sqlkit\/sqlexpression","title":"SQLExpression","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLExpression"}],"kind":"symbol","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLExpression"},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLColumn":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SQLColumn"}],"navigatorTitle":[{"kind":"identifier","text":"SQLColumn"}],"identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLColumn","type":"topic","kind":"symbol","title":"SQLColumn","abstract":[{"text":"An expression representing an optionally table-qualified column in an SQL table.","type":"text"}],"url":"\/documentation\/sqlkit\/sqlcolumn"},"doc://sql-kit.SQLKit/s8SendableP":{"identifier":"doc:\/\/sql-kit.SQLKit\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLQueryString/appendInterpolation(binds:)":{"url":"\/documentation\/sqlkit\/sqlquerystring\/appendinterpolation(binds:)","title":"appendInterpolation(binds:)","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLQueryString\/appendInterpolation(binds:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"appendInterpolation","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"binds"},{"kind":"text","text":": ["},{"kind":"keyword","text":"any"},{"kind":"text","text":" "},{"preciseIdentifier":"s:SE","text":"Encodable","kind":"typeIdentifier"},{"kind":"text","text":" & "},{"text":"Sendable","kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP"},{"text":"])","kind":"text"}],"abstract":[{"text":"Embed any number of ","type":"text"},{"type":"codeVoice","code":"Encodable"},{"text":" values as bindings in the SQL query, separating the bind","type":"text"},{"type":"text","text":" "},{"text":"placeholders with commas.","type":"text"}],"type":"topic","role":"symbol","kind":"symbol"},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLQueryString/appendInterpolation(ident:)":{"url":"\/documentation\/sqlkit\/sqlquerystring\/appendinterpolation(ident:)","type":"topic","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLQueryString\/appendInterpolation(ident:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"appendInterpolation"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"ident"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"Embed a "},{"type":"codeVoice","code":"String"},{"type":"text","text":" as an identifier, as if via "},{"type":"reference","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLIdentifier","isActive":true},{"type":"text","text":"."}],"title":"appendInterpolation(ident:)","kind":"symbol"},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLQueryString/appendInterpolation(literal:)-8e7rs":{"url":"\/documentation\/sqlkit\/sqlquerystring\/appendinterpolation(literal:)-8e7rs","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"appendInterpolation","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"literal"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":")"}],"kind":"symbol","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLQueryString\/appendInterpolation(literal:)-8e7rs","role":"symbol","title":"appendInterpolation(literal:)","type":"topic","abstract":[{"text":"Embed a ","type":"text"},{"type":"codeVoice","code":"String"},{"text":" as a literal value, as if via ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLLiteral\/string(_:)"},{"type":"text","text":"."}]},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLLiteral/numeric(_:)":{"role":"symbol","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLLiteral\/numeric(_:)","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"A literal expression representing a numeric literal in the current dialect."}],"url":"\/documentation\/sqlkit\/sqlliteral\/numeric(_:)","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"numeric","kind":"identifier"},{"text":"(","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":")","kind":"text"}],"title":"SQLLiteral.numeric(_:)"},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLQueryString/init(_:)":{"url":"\/documentation\/sqlkit\/sqlquerystring\/init(_:)","role":"symbol","title":"init(_:)","type":"topic","kind":"symbol","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLQueryString\/init(_:)","abstract":[{"type":"text","text":"Create a query string from a plain string containing raw SQL."}],"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"text":")","kind":"text"}]},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLDataType":{"kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"SQLDataType","kind":"identifier"}],"url":"\/documentation\/sqlkit\/sqldatatype","navigatorTitle":[{"text":"SQLDataType","kind":"identifier"}],"abstract":[{"text":"Represents a value’s type in SQL.","type":"text"}],"title":"SQLDataType","type":"topic","role":"symbol","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLDataType"},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLStatement":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SQLStatement"}],"title":"SQLStatement","kind":"symbol","url":"\/documentation\/sqlkit\/sqlstatement","role":"symbol","type":"topic","navigatorTitle":[{"text":"SQLStatement","kind":"identifier"}],"abstract":[{"text":"An alternative API for serialization of ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLExpression"},{"text":"s.","type":"text"}],"identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLStatement"},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLQueryString/appendInterpolation(literal:)-8t06r":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"appendInterpolation","kind":"identifier"},{"text":"(","kind":"text"},{"text":"literal","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:SB","text":"BinaryFloatingPoint","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLQueryString\/appendInterpolation(literal:)-8t06r","url":"\/documentation\/sqlkit\/sqlquerystring\/appendinterpolation(literal:)-8t06r","abstract":[{"type":"text","text":"Embed a floating-point number as a literal value, as if via "},{"identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLLiteral\/numeric(_:)","isActive":true,"type":"reference"}],"title":"appendInterpolation(literal:)","kind":"symbol","type":"topic"},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLQueryString/+=(_:_:)":{"title":"+=(_:_:)","kind":"symbol","abstract":[{"text":"Append one ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLQueryString"},{"text":" to another in-place.","type":"text"}],"url":"\/documentation\/sqlkit\/sqlquerystring\/+=(_:_:)","type":"topic","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLQueryString\/+=(_:_:)","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"+=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"keyword","text":"inout"},{"text":" `Self`","kind":"text"},{"text":", `Self`","kind":"text"},{"kind":"text","text":")"}]},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLAlias":{"title":"SQLAlias","role":"symbol","abstract":[{"type":"text","text":"Encapsulates SQL’s "},{"type":"codeVoice","code":"<expression> [AS] <name>"},{"type":"text","text":" syntax, most often used to declare aliaed names"},{"type":"text","text":" "},{"text":"for columns and tables.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLAlias","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"SQLAlias","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"SQLAlias"}],"url":"\/documentation\/sqlkit\/sqlalias"},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLDistinct":{"navigatorTitle":[{"text":"SQLDistinct","kind":"identifier"}],"identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLDistinct","type":"topic","role":"symbol","kind":"symbol","title":"SQLDistinct","abstract":[{"text":"An expression representing the subexpression of an aggregate function call which specifies whether the aggregate","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"groups over all result rows or only distinct rows."}],"url":"\/documentation\/sqlkit\/sqldistinct","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"SQLDistinct","kind":"identifier"}]}}}