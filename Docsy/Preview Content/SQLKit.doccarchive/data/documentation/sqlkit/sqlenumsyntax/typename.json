{"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"typeName","kind":"identifier"}]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"inlineContent":[{"type":"text","text":"PostgreSQL implements enums as one of a few different kinds of user-defined custom data"},{"type":"text","text":" "},{"type":"text","text":"types, which must be created separately before their use in a table. Once created, an"},{"type":"text","text":" "},{"type":"text","text":"enumeration may add new cases and rename existing ones, but may not delete them without"},{"type":"text","text":" "},{"text":"deleting the entire custom type.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"PostgreSQL example:","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["CREATE TYPE \"fruit\" AS ENUM ( 'apple', 'orange', 'banana' );","","CREATE TABLE \"foo\" (","    \"id\" BIGINT NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,","    \"my_fruit\" fruit NOT NULL",");"],"syntax":"sql"}]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit","doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLEnumSyntax"]]},"metadata":{"symbolKind":"case","role":"symbol","externalID":"s:6SQLKit13SQLEnumSyntaxO8typeNameyA2CmF","roleHeading":"Case","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"typeName","kind":"identifier"}],"title":"SQLEnumSyntax.typeName","modules":[{"name":"SQLKit"}]},"schemaVersion":{"minor":3,"major":0,"patch":0},"variants":[{"paths":["\/documentation\/sqlkit\/sqlenumsyntax\/typename"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLEnumSyntax\/typeName"},"abstract":[{"type":"text","text":"PostgreSQL’s custom user type enumerations."}],"references":{"doc://sql-kit.SQLKit/documentation/SQLKit/SQLEnumSyntax/typeName":{"fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"typeName"}],"title":"SQLEnumSyntax.typeName","role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLEnumSyntax\/typeName","abstract":[{"type":"text","text":"PostgreSQL’s custom user type enumerations."}],"url":"\/documentation\/sqlkit\/sqlenumsyntax\/typename"},"doc://sql-kit.SQLKit/documentation/SQLKit":{"kind":"symbol","role":"collection","type":"topic","abstract":[{"text":"SQLKit is a library for building and serializing SQL queries in Swift.","type":"text"}],"url":"\/documentation\/sqlkit","title":"SQLKit","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit"},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLEnumSyntax":{"navigatorTitle":[{"text":"SQLEnumSyntax","kind":"identifier"}],"abstract":[{"type":"text","text":"Possible values for a dialect’s strongly-typed enumeration support."}],"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"SQLEnumSyntax","kind":"identifier"}],"type":"topic","kind":"symbol","title":"SQLEnumSyntax","url":"\/documentation\/sqlkit\/sqlenumsyntax","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLEnumSyntax","role":"symbol"}}}