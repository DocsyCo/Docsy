{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLRowDecoder\/KeyDecodingStrategy-swift.enum\/custom(_:)"},"metadata":{"roleHeading":"Case","title":"SQLRowDecoder.KeyDecodingStrategy.custom(_:)","externalID":"s:6SQLKit13SQLRowDecoderV19KeyDecodingStrategyO6customyAEs06CodingD0_pSaysAG_pGccAEmF","role":"symbol","modules":[{"name":"SQLKit"}],"symbolKind":"case","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"custom"},{"kind":"text","text":"((["},{"text":"any","kind":"keyword"},{"kind":"text","text":" "},{"text":"CodingKey","preciseIdentifier":"s:s9CodingKeyP","kind":"typeIdentifier"},{"text":"]) -> ","kind":"text"},{"kind":"keyword","text":"any"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:s9CodingKeyP","kind":"typeIdentifier","text":"CodingKey"},{"text":")","kind":"text"}]},"kind":"symbol","abstract":[{"type":"text","text":"Perform a user-specified conversion between keys in a query result row and the "},{"code":"CodingKey","type":"codeVoice"},{"type":"text","text":"s used by"},{"text":" ","type":"text"},{"type":"text","text":"the decoded model type."}],"sections":[],"hierarchy":{"paths":[["doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit","doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLRowDecoder","doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLRowDecoder\/KeyDecodingStrategy-swift.enum"]]},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"@preconcurrency","kind":"attribute"},{"kind":"text","text":" "},{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"custom","kind":"identifier"},{"text":"(([","kind":"text"},{"text":"any","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:s9CodingKeyP","text":"CodingKey","kind":"typeIdentifier"},{"kind":"text","text":"]) -> "},{"text":"any","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:s9CodingKeyP","text":"CodingKey","kind":"typeIdentifier"},{"kind":"text","text":")"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"closure","content":[{"inlineContent":[{"type":"text","text":"A closure which performs a "},{"type":"emphasis","inlineContent":[{"text":"forward","type":"text"}]},{"type":"text","text":" conversion of a "},{"code":"CodingKey","type":"codeVoice"},{"text":" to the equivalent","type":"text"},{"text":" ","type":"text"},{"text":"database column name.","type":"text"}],"type":"paragraph"}]}]},{"content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"inlineContent":[{"text":"The full path to the current decoding position is provided for context (in case you need to","type":"text"},{"type":"text","text":" "},{"type":"text","text":"locate this key within the payload). The returned key is used in place of the last component"},{"type":"text","text":" "},{"text":"in the coding path before decoding.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"If the result of the conversion is a duplicate key, then only one value will be present in the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"container for the type to decode from."}]},{"type":"aside","content":[{"inlineContent":[{"type":"text","text":"The coding “path” will in reality always contain exactly one coding key. Users may consider"},{"type":"text","text":" "},{"type":"text","text":"this an API guarantee and safely write code which relies on this assumption."}],"type":"paragraph"}],"name":"Note","style":"note"},{"style":"warning","content":[{"inlineContent":[{"text":"The naming conventions used by ","type":"text"},{"type":"reference","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLRowDecoder\/KeyDecodingStrategy-swift.enum","isActive":true},{"text":" are","type":"text"},{"text":" ","type":"text"},{"text":"misleading. In particular, although the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLRowDecoder\/KeyDecodingStrategy-swift.enum\/convertFromSnakeCase","type":"reference"},{"text":" strategy implies conversion","type":"text"},{"type":"text","text":" "},{"text":"to camel-cased keys ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"from"}]},{"text":" snake-cased originals, in reality any given ","type":"text"},{"type":"codeVoice","code":"CodingKey"},{"text":" is subjected to","type":"text"},{"text":" ","type":"text"},{"text":"the inverse transformation (as described by","type":"text"},{"type":"text","text":" "},{"isActive":true,"identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLQueryEncoder\/KeyEncodingStrategy-swift.enum\/convertToSnakeCase","type":"reference"},{"type":"text","text":"). Likewise, the closure provided to"},{"type":"text","text":" "},{"text":"the ","type":"text"},{"type":"reference","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLRowDecoder\/KeyDecodingStrategy-swift.enum\/custom(_:)","isActive":true},{"type":"text","text":" strategy is expected to perform a "},{"type":"emphasis","inlineContent":[{"type":"text","text":"forward"}]},{"type":"text","text":" translation, translating a Swift-side"},{"type":"text","text":" "},{"type":"codeVoice","code":"CodingKey"},{"text":" into the database-side column name found in a given query result row. Users are encouraged","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to consider the use of "},{"identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SomeCodingKey","type":"reference","isActive":true},{"type":"text","text":" for returning results."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"It is also worth noting that this behavior is inconsistent with how a ","type":"text"},{"type":"codeVoice","code":"KeyDecodingStrategy"},{"type":"text","text":" specified"},{"type":"text","text":" "},{"text":"on Foundation’s ","type":"text"},{"code":"JSONDecoder","type":"codeVoice"},{"text":" works.","type":"text"}]}],"type":"aside","name":"Warning"}],"kind":"content"}],"variants":[{"paths":["\/documentation\/sqlkit\/sqlrowdecoder\/keydecodingstrategy-swift.enum\/custom(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://sql-kit.SQLKit/documentation/SQLKit/SQLRowDecoder/KeyDecodingStrategy-swift.enum":{"url":"\/documentation\/sqlkit\/sqlrowdecoder\/keydecodingstrategy-swift.enum","type":"topic","navigatorTitle":[{"text":"KeyDecodingStrategy","kind":"identifier"}],"identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLRowDecoder\/KeyDecodingStrategy-swift.enum","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"KeyDecodingStrategy","kind":"identifier"}],"abstract":[{"type":"text","text":"A strategy describing how to transform column names in a row to match the expectations of decoded type(s)."}],"title":"SQLRowDecoder.KeyDecodingStrategy","kind":"symbol"},"doc://sql-kit.SQLKit/documentation/SQLKit/SomeCodingKey":{"kind":"symbol","url":"\/documentation\/sqlkit\/somecodingkey","abstract":[{"text":"A straightforward implementation of ","type":"text"},{"code":"CodingKey","type":"codeVoice"},{"type":"text","text":", used to represent arbitrary keys."}],"title":"SomeCodingKey","type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SomeCodingKey"}],"navigatorTitle":[{"text":"SomeCodingKey","kind":"identifier"}],"identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SomeCodingKey"},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLQueryEncoder/KeyEncodingStrategy-swift.enum/convertToSnakeCase":{"abstract":[{"text":"Convert from ","type":"text"},{"code":"camelCaseKeys","type":"codeVoice"},{"type":"text","text":" to "},{"type":"codeVoice","code":"snake_case_keys"},{"text":" before writing a key to a row.","type":"text"}],"title":"SQLQueryEncoder.KeyEncodingStrategy.convertToSnakeCase","kind":"symbol","role":"symbol","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLQueryEncoder\/KeyEncodingStrategy-swift.enum\/convertToSnakeCase","url":"\/documentation\/sqlkit\/sqlqueryencoder\/keyencodingstrategy-swift.enum\/converttosnakecase","type":"topic","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"kind":"identifier","text":"convertToSnakeCase"}]},"doc://sql-kit.SQLKit/documentation/SQLKit":{"kind":"symbol","role":"collection","type":"topic","abstract":[{"text":"SQLKit is a library for building and serializing SQL queries in Swift.","type":"text"}],"url":"\/documentation\/sqlkit","title":"SQLKit","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit"},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLRowDecoder/KeyDecodingStrategy-swift.enum/custom(_:)":{"identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLRowDecoder\/KeyDecodingStrategy-swift.enum\/custom(_:)","type":"topic","title":"SQLRowDecoder.KeyDecodingStrategy.custom(_:)","url":"\/documentation\/sqlkit\/sqlrowdecoder\/keydecodingstrategy-swift.enum\/custom(_:)","kind":"symbol","role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"text":"custom","kind":"identifier"},{"kind":"text","text":"((["},{"kind":"keyword","text":"any"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s9CodingKeyP","text":"CodingKey"},{"text":"]) -> ","kind":"text"},{"kind":"keyword","text":"any"},{"kind":"text","text":" "},{"preciseIdentifier":"s:s9CodingKeyP","text":"CodingKey","kind":"typeIdentifier"},{"kind":"text","text":")"}],"abstract":[{"text":"Perform a user-specified conversion between keys in a query result row and the ","type":"text"},{"type":"codeVoice","code":"CodingKey"},{"type":"text","text":"s used by"},{"text":" ","type":"text"},{"text":"the decoded model type.","type":"text"}]},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLRowDecoder":{"type":"topic","url":"\/documentation\/sqlkit\/sqlrowdecoder","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"SQLRowDecoder","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLRowDecoder","abstract":[{"type":"text","text":"An implementation of "},{"type":"codeVoice","code":"Decoder"},{"type":"text","text":" designed to decode “models” (or, in general, aggregate "},{"type":"codeVoice","code":"Decodable"},{"text":" types) from","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLRow","isActive":true,"type":"reference"},{"type":"text","text":"s returned from a database query."}],"navigatorTitle":[{"kind":"identifier","text":"SQLRowDecoder"}],"role":"symbol","title":"SQLRowDecoder"},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLRow":{"role":"symbol","url":"\/documentation\/sqlkit\/sqlrow","abstract":[{"text":"Represents a single row in a result set returned from an executed SQL query.","type":"text"}],"type":"topic","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLRow","navigatorTitle":[{"text":"SQLRow","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"SQLRow","kind":"identifier"}],"title":"SQLRow","kind":"symbol"},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLRowDecoder/KeyDecodingStrategy-swift.enum/convertFromSnakeCase":{"role":"symbol","url":"\/documentation\/sqlkit\/sqlrowdecoder\/keydecodingstrategy-swift.enum\/convertfromsnakecase","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLRowDecoder\/KeyDecodingStrategy-swift.enum\/convertFromSnakeCase","type":"topic","abstract":[{"type":"text","text":"Convert from "},{"code":"snake_case_keys","type":"codeVoice"},{"type":"text","text":" to "},{"type":"codeVoice","code":"camelCaseKeys"},{"text":" before attempting to match a key with","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the one specified by each type."}],"kind":"symbol","title":"SQLRowDecoder.KeyDecodingStrategy.convertFromSnakeCase","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"convertFromSnakeCase"}]}}}