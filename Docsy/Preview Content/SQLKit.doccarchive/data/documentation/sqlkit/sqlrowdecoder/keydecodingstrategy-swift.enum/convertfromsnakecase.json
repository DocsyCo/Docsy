{"variants":[{"paths":["\/documentation\/sqlkit\/sqlrowdecoder\/keydecodingstrategy-swift.enum\/convertfromsnakecase"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"url":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLRowDecoder\/KeyDecodingStrategy-swift.enum\/convertFromSnakeCase","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit","doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLRowDecoder","doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLRowDecoder\/KeyDecodingStrategy-swift.enum"]]},"metadata":{"modules":[{"name":"SQLKit"}],"role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"convertFromSnakeCase"}],"externalID":"s:6SQLKit13SQLRowDecoderV19KeyDecodingStrategyO20convertFromSnakeCaseyA2EmF","roleHeading":"Case","title":"SQLRowDecoder.KeyDecodingStrategy.convertFromSnakeCase","symbolKind":"case"},"abstract":[{"text":"Convert from ","type":"text"},{"code":"snake_case_keys","type":"codeVoice"},{"text":" to ","type":"text"},{"type":"codeVoice","code":"camelCaseKeys"},{"type":"text","text":" before attempting to match a key with"},{"type":"text","text":" "},{"text":"the one specified by each type.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"convertFromSnakeCase"}]}]},{"kind":"content","content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"inlineContent":[{"text":"Converting from snake case to camel case:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Capitalizes the word starting after each "},{"type":"codeVoice","code":"_"},{"text":" chartacter.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Removes all ","type":"text"},{"type":"codeVoice","code":"_"},{"type":"text","text":" characters (except as specified below)."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Preserves starting and ending "},{"code":"_","type":"codeVoice"},{"text":" (as these are often used to indicate private variables","type":"text"},{"type":"text","text":" "},{"type":"text","text":"or other metadata)."},{"text":" ","type":"text"},{"text":"For example, ","type":"text"},{"type":"codeVoice","code":"one_two_three"},{"type":"text","text":" becomes "},{"code":"oneTwoThree","type":"codeVoice"},{"type":"text","text":". "},{"type":"codeVoice","code":"_one_two_three_"},{"text":" becomes ","type":"text"},{"type":"codeVoice","code":"_oneTwoThree_"},{"type":"text","text":"."}]}]}],"type":"orderedList"},{"type":"aside","name":"Note","content":[{"type":"paragraph","inlineContent":[{"text":"Using a key decoding strategy has a nominal performance cost, as each string key has","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to be inspected for the "},{"code":"_","type":"codeVoice"},{"type":"text","text":" character."}]}],"style":"note"}]}],"sections":[],"kind":"symbol","references":{"doc://sql-kit.SQLKit/documentation/SQLKit/SQLRowDecoder/KeyDecodingStrategy-swift.enum/convertFromSnakeCase":{"role":"symbol","url":"\/documentation\/sqlkit\/sqlrowdecoder\/keydecodingstrategy-swift.enum\/convertfromsnakecase","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLRowDecoder\/KeyDecodingStrategy-swift.enum\/convertFromSnakeCase","type":"topic","abstract":[{"type":"text","text":"Convert from "},{"code":"snake_case_keys","type":"codeVoice"},{"type":"text","text":" to "},{"type":"codeVoice","code":"camelCaseKeys"},{"text":" before attempting to match a key with","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the one specified by each type."}],"kind":"symbol","title":"SQLRowDecoder.KeyDecodingStrategy.convertFromSnakeCase","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"convertFromSnakeCase"}]},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLRowDecoder":{"type":"topic","url":"\/documentation\/sqlkit\/sqlrowdecoder","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"SQLRowDecoder","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLRowDecoder","abstract":[{"type":"text","text":"An implementation of "},{"type":"codeVoice","code":"Decoder"},{"type":"text","text":" designed to decode “models” (or, in general, aggregate "},{"type":"codeVoice","code":"Decodable"},{"text":" types) from","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLRow","isActive":true,"type":"reference"},{"type":"text","text":"s returned from a database query."}],"navigatorTitle":[{"kind":"identifier","text":"SQLRowDecoder"}],"role":"symbol","title":"SQLRowDecoder"},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLRow":{"role":"symbol","url":"\/documentation\/sqlkit\/sqlrow","abstract":[{"text":"Represents a single row in a result set returned from an executed SQL query.","type":"text"}],"type":"topic","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLRow","navigatorTitle":[{"text":"SQLRow","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"SQLRow","kind":"identifier"}],"title":"SQLRow","kind":"symbol"},"doc://sql-kit.SQLKit/documentation/SQLKit":{"kind":"symbol","role":"collection","type":"topic","abstract":[{"text":"SQLKit is a library for building and serializing SQL queries in Swift.","type":"text"}],"url":"\/documentation\/sqlkit","title":"SQLKit","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit"},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLRowDecoder/KeyDecodingStrategy-swift.enum":{"url":"\/documentation\/sqlkit\/sqlrowdecoder\/keydecodingstrategy-swift.enum","type":"topic","navigatorTitle":[{"text":"KeyDecodingStrategy","kind":"identifier"}],"identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLRowDecoder\/KeyDecodingStrategy-swift.enum","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"KeyDecodingStrategy","kind":"identifier"}],"abstract":[{"type":"text","text":"A strategy describing how to transform column names in a row to match the expectations of decoded type(s)."}],"title":"SQLRowDecoder.KeyDecodingStrategy","kind":"symbol"}}}