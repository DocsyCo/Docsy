{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLSerializer\/statement(_:)"},"hierarchy":{"paths":[["doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit","doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLSerializer"]]},"sections":[],"variants":[{"paths":["\/documentation\/sqlkit\/sqlserializer\/statement(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"mutating","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"statement","kind":"identifier"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"closure","kind":"internalParam"},{"text":": (","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLStatement","preciseIdentifier":"s:6SQLKit12SQLStatementV","text":"SQLStatement","kind":"typeIdentifier"},{"kind":"text","text":") -> ())"}],"platforms":["macOS"],"languages":["swift"]}]},{"content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method is the entry point for the alternate expression serialization API provided by "},{"identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLStatement","isActive":true,"type":"reference"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"The name of the type is somewhat misleading; the serialized result is not required to be a complete SQL"},{"text":" ","type":"text"},{"text":"“statement”; as with the usual ","type":"text"},{"type":"reference","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLSerializer","isActive":true},{"type":"text","text":" API, the inputs and resultant output can be arbitrary."}]},{"inlineContent":[{"text":"To use the “statement” API, call this method in the implentation of ","type":"text"},{"type":"reference","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLExpression\/serialize(to:)","isActive":true},{"type":"text","text":", and"},{"type":"text","text":" "},{"type":"text","text":"provide a closure which contains the serialization logic for the expression. Call methods of the"},{"type":"text","text":" "},{"isActive":true,"identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLStatement","type":"reference"},{"text":" passed to the closure to add individual textual and subexpression pieces to the final","type":"text"},{"type":"text","text":" "},{"text":"result. Do ","type":"text"},{"inlineContent":[{"type":"text","text":"not"}],"type":"emphasis"},{"type":"text","text":" access the "},{"identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLSerializer","type":"reference","isActive":true},{"type":"text","text":" from inside the closure."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"For example, consider ","type":"text"},{"type":"reference","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLEnumDataType","isActive":true},{"type":"text","text":"’s "},{"isActive":true,"identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLEnumDataType\/serialize(to:)","type":"reference"},{"type":"text","text":" method:"}]},{"type":"codeListing","syntax":"swift","code":["public func serialize(to serializer: inout SQLSerializer) {","    switch serializer.dialect.enumSyntax {","    case .inline:","        SQLRaw(\"ENUM\").serialize(to: &serializer)","        SQLGroupExpression(self.cases).serialize(to: &serializer)","    default:","        SQLDataType.text.serialize(to: &serializer)","        serializer.database.logger.debug(\"Database does not support inline enums. Storing as TEXT instead.\")","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Rewritten using "},{"type":"reference","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLSerializer\/statement(_:)","isActive":true},{"type":"text","text":", the method becomes:"}]},{"syntax":"swift","code":["public func serialize(to serializer: inout SQLSerializer) {","    serializer.statement {","        switch $0.dialect.enumSyntax {","        case .inline:","            $0.append(\"ENUM\", SQLGroupExpression(self.cases))","        default:","            $0.append(SQLDataType.text)","            $0.logger.debug(\"Database does not support inline enums. Storing as TEXT instead.\")","        }","    }","}"],"type":"codeListing"},{"style":"note","type":"aside","name":"Note","content":[{"type":"paragraph","inlineContent":[{"text":"While doing so is not especially useful, this method can be called more than once within the same","type":"text"},{"type":"text","text":" "},{"text":"context; each invocation immediately serializes the statement upon return from the provided closure.","type":"text"}]}]}],"kind":"content"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"type":"text","text":"Invoke the provided closure with a new "},{"identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLStatement","type":"reference","isActive":true},{"type":"text","text":" to use for serialization."}],"metadata":{"externalID":"s:6SQLKit13SQLSerializerV9statementyyyAA12SQLStatementVzXEF","title":"statement(_:)","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"statement"},{"kind":"text","text":"(("},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:6SQLKit12SQLStatementV","text":"SQLStatement","kind":"typeIdentifier"},{"text":") -> ())","kind":"text"}],"modules":[{"name":"SQLKit"}],"role":"symbol","roleHeading":"Instance Method","extendedModule":"SQLKit"},"references":{"doc://sql-kit.SQLKit/documentation/SQLKit/SQLSerializer/statement(_:)":{"abstract":[{"type":"text","text":"Invoke the provided closure with a new "},{"isActive":true,"type":"reference","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLStatement"},{"type":"text","text":" to use for serialization."}],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"statement","kind":"identifier"},{"kind":"text","text":"(("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:6SQLKit12SQLStatementV","text":"SQLStatement"},{"kind":"text","text":") -> ())"}],"identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLSerializer\/statement(_:)","role":"symbol","url":"\/documentation\/sqlkit\/sqlserializer\/statement(_:)","title":"statement(_:)","kind":"symbol"},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLStatement":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SQLStatement"}],"title":"SQLStatement","kind":"symbol","url":"\/documentation\/sqlkit\/sqlstatement","role":"symbol","type":"topic","navigatorTitle":[{"text":"SQLStatement","kind":"identifier"}],"abstract":[{"text":"An alternative API for serialization of ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLExpression"},{"text":"s.","type":"text"}],"identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLStatement"},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLEnumDataType":{"navigatorTitle":[{"text":"SQLEnumDataType","kind":"identifier"}],"identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLEnumDataType","title":"SQLEnumDataType","role":"symbol","abstract":[{"text":"Represents a data type which specifies an enumeration in the database.","type":"text"}],"kind":"symbol","url":"\/documentation\/sqlkit\/sqlenumdatatype","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"SQLEnumDataType","kind":"identifier"}],"type":"topic"},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLExpression":{"abstract":[{"type":"text","text":"The fundamental base type of anything which can be represented as SQL using SQLKit."}],"navigatorTitle":[{"text":"SQLExpression","kind":"identifier"}],"url":"\/documentation\/sqlkit\/sqlexpression","title":"SQLExpression","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLExpression"}],"kind":"symbol","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLExpression"},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLSerializer":{"title":"SQLSerializer","abstract":[{"text":"Encapsulates the most basic operations for serializing ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLExpression"},{"type":"text","text":"s into a raw SQL string and a"},{"text":" ","type":"text"},{"text":"(potentially empty) sequence of bound parameter values.","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"SQLSerializer"}],"url":"\/documentation\/sqlkit\/sqlserializer","kind":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SQLSerializer"}],"identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLSerializer"},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLEnumDataType/serialize(to:)":{"identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLEnumDataType\/serialize(to:)","type":"topic","kind":"symbol","abstract":[{"text":"Invoked when a request is made to serialize the expression to raw SQL.","type":"text"}],"role":"symbol","url":"\/documentation\/sqlkit\/sqlenumdatatype\/serialize(to:)","title":"serialize(to:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"serialize","kind":"identifier"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:6SQLKit13SQLSerializerV","text":"SQLSerializer","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://sql-kit.SQLKit/documentation/SQLKit":{"kind":"symbol","role":"collection","type":"topic","abstract":[{"text":"SQLKit is a library for building and serializing SQL queries in Swift.","type":"text"}],"url":"\/documentation\/sqlkit","title":"SQLKit","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit"},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLExpression/serialize(to:)":{"abstract":[{"type":"text","text":"Invoked when a request is made to serialize the expression to raw SQL."}],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"serialize"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"text":"SQLSerializer","kind":"typeIdentifier","preciseIdentifier":"s:6SQLKit13SQLSerializerV"},{"kind":"text","text":")"}],"identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLExpression\/serialize(to:)","required":true,"role":"symbol","url":"\/documentation\/sqlkit\/sqlexpression\/serialize(to:)","title":"serialize(to:)","kind":"symbol"}}}