{"sections":[],"hierarchy":{"paths":[["doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit","doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLUnionBuilder","doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLUnionBuilder\/SQLCommonTableExpressionBuilder-Implementations"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"text":"Specify a subquery to include as a ","type":"text"},{"inlineContent":[{"type":"text","text":"recursive"}],"type":"emphasis"},{"text":" common table expression, for use elsewhere in","type":"text"},{"text":" ","type":"text"},{"text":"the overall query.","type":"text"}],"metadata":{"modules":[{"name":"SQLKit"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"with"},{"text":"(","kind":"text"},{"text":"recursive","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"text":"StringProtocol","kind":"typeIdentifier","preciseIdentifier":"s:Sy"},{"kind":"text","text":", "},{"kind":"externalParam","text":"columns"},{"text":": [","kind":"text"},{"text":"any","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"SQLExpression","preciseIdentifier":"s:6SQLKit13SQLExpressionP"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"as"},{"kind":"text","text":": "},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:6SQLKit13SQLExpressionP","text":"SQLExpression"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"extendedModule":"SQLKit","symbolKind":"method","roleHeading":"Instance Method","role":"symbol","externalID":"s:6SQLKit31SQLCommonTableExpressionBuilderPAAE4with9recursive7columns2asxqd___SayAA13SQLExpression_pGqd_0_tSyRd__AaHRd_0_r0_lF::SYNTHESIZED::s:6SQLKit15SQLUnionBuilderC","title":"with(recursive:columns:as:)"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"attribute","text":"@discardableResult"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"with"},{"text":"(","kind":"text"},{"text":"recursive","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"name","kind":"internalParam"},{"kind":"text","text":": "},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StringProtocol","preciseIdentifier":"s:Sy","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"columns"},{"text":": [","kind":"text"},{"text":"any","kind":"keyword"},{"kind":"text","text":" "},{"identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLExpression","kind":"typeIdentifier","text":"SQLExpression","preciseIdentifier":"s:6SQLKit13SQLExpressionP"},{"text":"] = [], ","kind":"text"},{"text":"as","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"query","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"text":"SQLExpression","preciseIdentifier":"s:6SQLKit13SQLExpressionP","kind":"typeIdentifier","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLExpression"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"name","content":[{"type":"paragraph","inlineContent":[{"text":"The name to assign to the query’s results.","type":"text"}]}]},{"name":"columns","content":[{"inlineContent":[{"text":"An optional list of unqualified column names to use for referencing the query’s results.","type":"text"},{"text":" ","type":"text"},{"text":"If no column names are provided, the names are inferred from the query. If column names are provided,","type":"text"},{"type":"text","text":" "},{"text":"the number of names provided must match the number of columns returned by the query.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An expression which provides the contents of the CTE. For a recursive CTE, this must be an"},{"text":" ","type":"text"},{"text":"expression representing at least one ","type":"text"},{"type":"codeVoice","code":"SELECT"},{"type":"text","text":" statement which does "},{"type":"emphasis","inlineContent":[{"type":"text","text":"not"}]},{"type":"text","text":" refer to the CTE and at least"},{"type":"text","text":" "},{"type":"text","text":"one "},{"type":"codeVoice","code":"UNION ALL"},{"text":" or ","type":"text"},{"code":"UNION DISTINCT","type":"codeVoice"},{"type":"text","text":" clause terminating with a "},{"code":"SELECT","type":"codeVoice"},{"type":"text","text":" statement which explicitly refers"},{"type":"text","text":" "},{"type":"text","text":"to the CTE itself."}]}],"name":"query"}]},{"content":[{"type":"heading","text":"Discussion","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Example usage:"}]},{"type":"codeListing","syntax":"swift","code":["try await sqlDatabase.update(\"table1\")","    .with(recursive: \"c\", columns: [\"n\"], as: SQLSubquery","        .union { $0.column(SQLBind(\"1\"), as: \"n\") }","        .union(all: { $0","            .column(SQLBinaryExpression(\"n\", .add, 1))","            .from(\"c\").where(\"n\", .lessThan, 3)","        }).finish())","    .set(\"foo\", to: \"bar\")","    .where(\"foo\", .equal, SQLColumn(\"n\", table: \"c\"))","    .run()"]},{"content":[{"type":"paragraph","inlineContent":[{"text":"As with ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLCommonTableExpression"},{"type":"text","text":", "},{"type":"reference","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLCommonTableExpressionBuilder","isActive":true},{"type":"text","text":" does "},{"inlineContent":[{"type":"text","text":"NOT"}],"type":"emphasis"},{"text":" validate","type":"text"},{"type":"text","text":" "},{"type":"text","text":"that a recursive CTE’s query takes the proper form. It is the responsibility of the user to invoke the"},{"text":" ","type":"text"},{"text":"appropriate variant of this method. Failure to do so will result in generating invalid SQL.","type":"text"}]}],"name":"Warning","type":"aside","style":"warning"}],"kind":"content"}],"kind":"symbol","identifier":{"url":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLUnionBuilder\/with(recursive:columns:as:)-93rut","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/sqlkit\/sqlunionbuilder\/with(recursive:columns:as:)-93rut"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://sql-kit.SQLKit/documentation/SQLKit":{"kind":"symbol","role":"collection","type":"topic","abstract":[{"text":"SQLKit is a library for building and serializing SQL queries in Swift.","type":"text"}],"url":"\/documentation\/sqlkit","title":"SQLKit","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit"},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLUnionBuilder/with(recursive:columns:as:)-93rut":{"url":"\/documentation\/sqlkit\/sqlunionbuilder\/with(recursive:columns:as:)-93rut","type":"topic","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLUnionBuilder\/with(recursive:columns:as:)-93rut","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"with"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"recursive"},{"text":": ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:Sy","text":"StringProtocol","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"columns"},{"text":": [","kind":"text"},{"kind":"keyword","text":"any"},{"kind":"text","text":" "},{"text":"SQLExpression","kind":"typeIdentifier","preciseIdentifier":"s:6SQLKit13SQLExpressionP"},{"kind":"text","text":"], "},{"text":"as","kind":"externalParam"},{"kind":"text","text":": "},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"SQLExpression","preciseIdentifier":"s:6SQLKit13SQLExpressionP"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"type":"text","text":"Specify a subquery to include as a "},{"type":"emphasis","inlineContent":[{"text":"recursive","type":"text"}]},{"text":" common table expression, for use elsewhere in","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the overall query."}],"title":"with(recursive:columns:as:)","kind":"symbol"},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLExpression":{"abstract":[{"type":"text","text":"The fundamental base type of anything which can be represented as SQL using SQLKit."}],"navigatorTitle":[{"text":"SQLExpression","kind":"identifier"}],"url":"\/documentation\/sqlkit\/sqlexpression","title":"SQLExpression","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLExpression"}],"kind":"symbol","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLExpression"},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLCommonTableExpression":{"url":"\/documentation\/sqlkit\/sqlcommontableexpression","type":"topic","navigatorTitle":[{"text":"SQLCommonTableExpression","kind":"identifier"}],"identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLCommonTableExpression","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SQLCommonTableExpression"}],"abstract":[{"text":"A clause describing a single Common Table Expressions, which in itws simplest form provides","type":"text"},{"text":" ","type":"text"},{"text":"additional data to a primary query in the same way as joining to a subquery.","type":"text"}],"title":"SQLCommonTableExpression","kind":"symbol"},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLCommonTableExpressionBuilder":{"role":"symbol","url":"\/documentation\/sqlkit\/sqlcommontableexpressionbuilder","abstract":[{"type":"text","text":"Common definitions for query builders which support Common Table Expressions."}],"type":"topic","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLCommonTableExpressionBuilder","navigatorTitle":[{"kind":"identifier","text":"SQLCommonTableExpressionBuilder"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLCommonTableExpressionBuilder"}],"title":"SQLCommonTableExpressionBuilder","kind":"symbol"},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLUnion":{"title":"SQLUnion","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLUnion","role":"symbol","abstract":[{"type":"text","text":"An expression representing two or more "},{"type":"codeVoice","code":"SELECT"},{"type":"text","text":" queries joined by "},{"type":"codeVoice","code":"UNION"},{"text":" clauses. Used to merge the results of","type":"text"},{"type":"text","text":" "},{"text":"multiple queries into a single result set.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SQLUnion"}],"navigatorTitle":[{"kind":"identifier","text":"SQLUnion"}],"type":"topic","url":"\/documentation\/sqlkit\/sqlunion"},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLUnionBuilder":{"role":"symbol","url":"\/documentation\/sqlkit\/sqlunionbuilder","abstract":[{"text":"Builds top-level ","type":"text"},{"identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLUnion","isActive":true,"type":"reference"},{"type":"text","text":" queries which may be executed on their own."}],"type":"topic","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLUnionBuilder","navigatorTitle":[{"text":"SQLUnionBuilder","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"SQLUnionBuilder","kind":"identifier"}],"title":"SQLUnionBuilder","kind":"symbol"},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLUnionBuilder/SQLCommonTableExpressionBuilder-Implementations":{"kind":"article","title":"SQLCommonTableExpressionBuilder Implementations","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLUnionBuilder\/SQLCommonTableExpressionBuilder-Implementations","abstract":[],"url":"\/documentation\/sqlkit\/sqlunionbuilder\/sqlcommontableexpressionbuilder-implementations","type":"topic","role":"collectionGroup"}}}