{"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"attribute","text":"@discardableResult"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"with","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"recursive"},{"kind":"text","text":" "},{"kind":"internalParam","text":"name"},{"text":": ","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"text":"SQLExpression","preciseIdentifier":"s:6SQLKit13SQLExpressionP","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLExpression","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"columns"},{"text":": [","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":"], ","kind":"text"},{"text":"as","kind":"externalParam"},{"kind":"text","text":" "},{"text":"query","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLExpression","kind":"typeIdentifier","text":"SQLExpression","preciseIdentifier":"s:6SQLKit13SQLExpressionP"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"parameters":[{"name":"name","content":[{"inlineContent":[{"text":"The name to assign to the query’s results.","type":"text"}],"type":"paragraph"}]},{"name":"columns","content":[{"inlineContent":[{"text":"An optional list of unqualified column names to use for referencing the query’s results.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"If no column names are provided, the names are inferred from the query. If column names are provided,"},{"type":"text","text":" "},{"type":"text","text":"the number of names provided must match the number of columns returned by the query."}],"type":"paragraph"}]},{"name":"query","content":[{"inlineContent":[{"type":"text","text":"An expression which provides the contents of the CTE. For a recursive CTE, this must be an"},{"type":"text","text":" "},{"text":"expression representing at least one ","type":"text"},{"code":"SELECT","type":"codeVoice"},{"type":"text","text":" statement which does "},{"inlineContent":[{"text":"not","type":"text"}],"type":"emphasis"},{"type":"text","text":" refer to the CTE and at least"},{"text":" ","type":"text"},{"text":"one ","type":"text"},{"code":"UNION ALL","type":"codeVoice"},{"type":"text","text":" or "},{"code":"UNION DISTINCT","type":"codeVoice"},{"type":"text","text":" clause terminating with a "},{"code":"SELECT","type":"codeVoice"},{"text":" statement which explicitly refers","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to the CTE itself."}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"text":"Example usage:","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["try await sqlDatabase.update(\"table1\")","    .with(recursive: \"c\", columns: [\"n\"], as: SQLSubquery","        .union { $0.column(SQLBind(\"1\"), as: \"n\") }","        .union(all: { $0","            .column(SQLBinaryExpression(\"n\", .add, 1))","            .from(\"c\").where(\"n\", .lessThan, 3)","        }).finish())","    .set(\"foo\", to: \"bar\")","    .where(\"foo\", .equal, SQLColumn(\"n\", table: \"c\"))","    .run()"]},{"content":[{"inlineContent":[{"type":"text","text":"As with "},{"type":"reference","isActive":true,"identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLCommonTableExpression"},{"type":"text","text":", "},{"isActive":true,"identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLCommonTableExpressionBuilder","type":"reference"},{"type":"text","text":" does "},{"inlineContent":[{"text":"NOT","type":"text"}],"type":"emphasis"},{"type":"text","text":" validate"},{"type":"text","text":" "},{"type":"text","text":"that a recursive CTE’s query takes the proper form. It is the responsibility of the user to invoke the"},{"text":" ","type":"text"},{"text":"appropriate variant of this method. Failure to do so will result in generating invalid SQL.","type":"text"}],"type":"paragraph"}],"type":"aside","style":"warning","name":"Warning"}],"kind":"content"}],"sections":[],"metadata":{"roleHeading":"Instance Method","title":"with(recursive:columns:as:)","externalID":"s:6SQLKit31SQLCommonTableExpressionBuilderPAAE4with9recursive7columns2asxqd___SaySSGqd_0_tAA13SQLExpressionRd__AaIRd_0_r0_lF::SYNTHESIZED::s:6SQLKit16SQLSelectBuilderC","role":"symbol","extendedModule":"SQLKit","modules":[{"name":"SQLKit"}],"symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"with","kind":"identifier"},{"kind":"text","text":"("},{"text":"recursive","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"SQLExpression","preciseIdentifier":"s:6SQLKit13SQLExpressionP"},{"kind":"text","text":", "},{"kind":"externalParam","text":"columns"},{"text":": [","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":"], ","kind":"text"},{"kind":"externalParam","text":"as"},{"text":": ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SQLExpression","kind":"typeIdentifier","preciseIdentifier":"s:6SQLKit13SQLExpressionP"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"}]},"hierarchy":{"paths":[["doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit","doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLSelectBuilder","doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLSelectBuilder\/SQLCommonTableExpressionBuilder-Implementations"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLSelectBuilder\/with(recursive:columns:as:)-7vr4y"},"kind":"symbol","schemaVersion":{"minor":3,"major":0,"patch":0},"variants":[{"paths":["\/documentation\/sqlkit\/sqlselectbuilder\/with(recursive:columns:as:)-7vr4y"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Specify a subquery to include as a "},{"type":"emphasis","inlineContent":[{"text":"recursive","type":"text"}]},{"type":"text","text":" common table expression, for use elsewhere in"},{"text":" ","type":"text"},{"type":"text","text":"the overall query."}],"references":{"doc://sql-kit.SQLKit/documentation/SQLKit":{"kind":"symbol","role":"collection","type":"topic","abstract":[{"text":"SQLKit is a library for building and serializing SQL queries in Swift.","type":"text"}],"url":"\/documentation\/sqlkit","title":"SQLKit","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit"},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLSelect":{"title":"SQLSelect","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLSelect","role":"symbol","abstract":[{"type":"text","text":"An expression representing a "},{"type":"codeVoice","code":"SELECT"},{"text":" query. Used to retrieve rows and expression results from a database.","type":"text"}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SQLSelect","kind":"identifier"}],"navigatorTitle":[{"text":"SQLSelect","kind":"identifier"}],"type":"topic","url":"\/documentation\/sqlkit\/sqlselect"},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLSelectBuilder/SQLCommonTableExpressionBuilder-Implementations":{"url":"\/documentation\/sqlkit\/sqlselectbuilder\/sqlcommontableexpressionbuilder-implementations","type":"topic","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLSelectBuilder\/SQLCommonTableExpressionBuilder-Implementations","role":"collectionGroup","abstract":[],"title":"SQLCommonTableExpressionBuilder Implementations","kind":"article"},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLExpression":{"abstract":[{"type":"text","text":"The fundamental base type of anything which can be represented as SQL using SQLKit."}],"navigatorTitle":[{"text":"SQLExpression","kind":"identifier"}],"url":"\/documentation\/sqlkit\/sqlexpression","title":"SQLExpression","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLExpression"}],"kind":"symbol","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLExpression"},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLSelectBuilder":{"title":"SQLSelectBuilder","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLSelectBuilder","role":"symbol","abstract":[{"type":"text","text":"Builds "},{"isActive":true,"identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLSelect","type":"reference"},{"type":"text","text":" queries."}],"kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SQLSelectBuilder"}],"navigatorTitle":[{"kind":"identifier","text":"SQLSelectBuilder"}],"type":"topic","url":"\/documentation\/sqlkit\/sqlselectbuilder"},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLCommonTableExpression":{"url":"\/documentation\/sqlkit\/sqlcommontableexpression","type":"topic","navigatorTitle":[{"text":"SQLCommonTableExpression","kind":"identifier"}],"identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLCommonTableExpression","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SQLCommonTableExpression"}],"abstract":[{"text":"A clause describing a single Common Table Expressions, which in itws simplest form provides","type":"text"},{"text":" ","type":"text"},{"text":"additional data to a primary query in the same way as joining to a subquery.","type":"text"}],"title":"SQLCommonTableExpression","kind":"symbol"},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLCommonTableExpressionBuilder":{"role":"symbol","url":"\/documentation\/sqlkit\/sqlcommontableexpressionbuilder","abstract":[{"type":"text","text":"Common definitions for query builders which support Common Table Expressions."}],"type":"topic","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLCommonTableExpressionBuilder","navigatorTitle":[{"kind":"identifier","text":"SQLCommonTableExpressionBuilder"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLCommonTableExpressionBuilder"}],"title":"SQLCommonTableExpressionBuilder","kind":"symbol"},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLSelectBuilder/with(recursive:columns:as:)-7vr4y":{"role":"symbol","url":"\/documentation\/sqlkit\/sqlselectbuilder\/with(recursive:columns:as:)-7vr4y","title":"with(recursive:columns:as:)","abstract":[{"type":"text","text":"Specify a subquery to include as a "},{"type":"emphasis","inlineContent":[{"text":"recursive","type":"text"}]},{"type":"text","text":" common table expression, for use elsewhere in"},{"type":"text","text":" "},{"text":"the overall query.","type":"text"}],"identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLSelectBuilder\/with(recursive:columns:as:)-7vr4y","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"with","kind":"identifier"},{"text":"(","kind":"text"},{"text":"recursive","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"SQLExpression","preciseIdentifier":"s:6SQLKit13SQLExpressionP"},{"text":", ","kind":"text"},{"text":"columns","kind":"externalParam"},{"kind":"text","text":": ["},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":"], ","kind":"text"},{"kind":"externalParam","text":"as"},{"text":": ","kind":"text"},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:6SQLKit13SQLExpressionP","text":"SQLExpression"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"type":"topic","kind":"symbol"}}}