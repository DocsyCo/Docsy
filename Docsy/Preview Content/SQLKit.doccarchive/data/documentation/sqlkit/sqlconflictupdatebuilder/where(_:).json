{"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"@discardableResult"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`where`"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"expression"},{"kind":"text","text":": "},{"text":"any","kind":"keyword"},{"kind":"text","text":" "},{"text":"SQLExpression","preciseIdentifier":"s:6SQLKit13SQLExpressionP","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLExpression","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"platforms":["macOS"],"languages":["swift"]}]}],"identifier":{"url":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLConflictUpdateBuilder\/where(_:)","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"externalID":"s:6SQLKit19SQLPredicateBuilderPAAE5whereyxAA13SQLExpression_pF::SYNTHESIZED::s:6SQLKit24SQLConflictUpdateBuilderC","roleHeading":"Instance Method","modules":[{"name":"SQLKit"}],"title":"where(_:)","extendedModule":"SQLKit","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`where`"},{"text":"(","kind":"text"},{"text":"any","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:6SQLKit13SQLExpressionP","kind":"typeIdentifier","text":"SQLExpression"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"}],"role":"symbol"},"hierarchy":{"paths":[["doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit","doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLConflictUpdateBuilder","doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLConflictUpdateBuilder\/SQLPredicateBuilder-Implementations"]]},"sections":[],"abstract":[{"text":"Adds an expression to this builder’s ","type":"text"},{"type":"codeVoice","code":"WHERE"},{"text":" clause by ","type":"text"},{"type":"codeVoice","code":"AND"},{"text":"ing.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/sqlkit\/sqlconflictupdatebuilder\/where(_:)"]}],"references":{"doc://sql-kit.SQLKit/documentation/SQLKit/SQLConflictUpdateBuilder/SQLPredicateBuilder-Implementations":{"abstract":[],"identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLConflictUpdateBuilder\/SQLPredicateBuilder-Implementations","title":"SQLPredicateBuilder Implementations","type":"topic","kind":"article","role":"collectionGroup","url":"\/documentation\/sqlkit\/sqlconflictupdatebuilder\/sqlpredicatebuilder-implementations"},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLConflictUpdateBuilder/where(_:)":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"`where`"},{"kind":"text","text":"("},{"text":"any","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SQLExpression","kind":"typeIdentifier","preciseIdentifier":"s:6SQLKit13SQLExpressionP"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"kind":"symbol","title":"where(_:)","url":"\/documentation\/sqlkit\/sqlconflictupdatebuilder\/where(_:)","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLConflictUpdateBuilder\/where(_:)","type":"topic","role":"symbol","abstract":[{"text":"Adds an expression to this builder’s ","type":"text"},{"code":"WHERE","type":"codeVoice"},{"type":"text","text":" clause by "},{"code":"AND","type":"codeVoice"},{"type":"text","text":"ing."}]},"doc://sql-kit.SQLKit/documentation/SQLKit":{"kind":"symbol","role":"collection","type":"topic","abstract":[{"text":"SQLKit is a library for building and serializing SQL queries in Swift.","type":"text"}],"url":"\/documentation\/sqlkit","title":"SQLKit","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit"},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLConflictUpdateBuilder":{"role":"symbol","url":"\/documentation\/sqlkit\/sqlconflictupdatebuilder","abstract":[{"text":"A builder for specifying column updates and an optional predicate to be applied to","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"rows that caused unique key conflicts during an "},{"code":"INSERT","type":"codeVoice"},{"type":"text","text":"."}],"type":"topic","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLConflictUpdateBuilder","navigatorTitle":[{"kind":"identifier","text":"SQLConflictUpdateBuilder"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"SQLConflictUpdateBuilder","kind":"identifier"}],"title":"SQLConflictUpdateBuilder","kind":"symbol"},"doc://sql-kit.SQLKit/documentation/SQLKit/SQLExpression":{"abstract":[{"type":"text","text":"The fundamental base type of anything which can be represented as SQL using SQLKit."}],"navigatorTitle":[{"text":"SQLExpression","kind":"identifier"}],"url":"\/documentation\/sqlkit\/sqlexpression","title":"SQLExpression","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SQLExpression"}],"kind":"symbol","identifier":"doc:\/\/sql-kit.SQLKit\/documentation\/SQLKit\/SQLExpression"}}}